"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/emoji-mart";
exports.ids = ["vendor-chunks/emoji-mart"];
exports.modules = {
  /***/ "(ssr)/../node_modules/emoji-mart/dist/module.js":
    /*!*************************************************!*\
  !*** ../node_modules/emoji-mart/dist/module.js ***!
  \*************************************************/
    /***/ (
      __unused_webpack_module,
      __webpack_exports__,
      __webpack_require__,
    ) => {
      eval(
        '__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Data: () => (/* binding */ $7adb23b0109cc36a$export$2d0294657ab35f1b),\n/* harmony export */   Emoji: () => (/* binding */ $331b4160623139bf$export$2e2bcd8739ae039),\n/* harmony export */   FrequentlyUsed: () => (/* binding */ $b22cfd0a55410b4f$export$2e2bcd8739ae039),\n/* harmony export */   I18n: () => (/* binding */ $7adb23b0109cc36a$export$dbe3113d60765c1a),\n/* harmony export */   Picker: () => (/* binding */ $efa000751917694d$export$2e2bcd8739ae039),\n/* harmony export */   SafeFlags: () => (/* binding */ $e6eae5155b87f591$export$bcb25aa587e9cb13),\n/* harmony export */   SearchIndex: () => (/* binding */ $c4d155af13ad4d4b$export$2e2bcd8739ae039),\n/* harmony export */   Store: () => (/* binding */ $f72b75cf796873c7$export$2e2bcd8739ae039),\n/* harmony export */   getEmojiDataFromNative: () => (/* binding */ $693b183b0a78708f$export$5ef5574deca44bc0),\n/* harmony export */   init: () => (/* binding */ $7adb23b0109cc36a$export$2cd8252107eb640b)\n/* harmony export */ });\nfunction $parcel$interopDefault(a) {\n    return a && a.__esModule ? a.default : a;\n}\nfunction $c770c458706daa72$export$2e2bcd8739ae039(obj, key, value) {\n    if (key in obj) Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n    });\n    else obj[key] = value;\n    return obj;\n}\nvar $fb96b826c0c5f37a$var$n, $fb96b826c0c5f37a$export$41c562ebe57d11e2, $fb96b826c0c5f37a$var$u, $fb96b826c0c5f37a$export$a8257692ac88316c, $fb96b826c0c5f37a$var$t, $fb96b826c0c5f37a$var$r, $fb96b826c0c5f37a$var$o, $fb96b826c0c5f37a$var$f, $fb96b826c0c5f37a$var$e = {}, $fb96b826c0c5f37a$var$c = [], $fb96b826c0c5f37a$var$s = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;\nfunction $fb96b826c0c5f37a$var$a(n1, l1) {\n    for(var u1 in l1)n1[u1] = l1[u1];\n    return n1;\n}\nfunction $fb96b826c0c5f37a$var$h(n2) {\n    var l2 = n2.parentNode;\n    l2 && l2.removeChild(n2);\n}\nfunction $fb96b826c0c5f37a$export$c8a8987d4410bf2d(l3, u2, i1) {\n    var t1, r1, o1, f1 = {};\n    for(o1 in u2)"key" == o1 ? t1 = u2[o1] : "ref" == o1 ? r1 = u2[o1] : f1[o1] = u2[o1];\n    if (arguments.length > 2 && (f1.children = arguments.length > 3 ? $fb96b826c0c5f37a$var$n.call(arguments, 2) : i1), "function" == typeof l3 && null != l3.defaultProps) for(o1 in l3.defaultProps)void 0 === f1[o1] && (f1[o1] = l3.defaultProps[o1]);\n    return $fb96b826c0c5f37a$var$y(l3, f1, t1, r1, null);\n}\nfunction $fb96b826c0c5f37a$var$y(n3, i2, t2, r2, o2) {\n    var f2 = {\n        type: n3,\n        props: i2,\n        key: t2,\n        ref: r2,\n        __k: null,\n        __: null,\n        __b: 0,\n        __e: null,\n        __d: void 0,\n        __c: null,\n        __h: null,\n        constructor: void 0,\n        __v: null == o2 ? ++$fb96b826c0c5f37a$var$u : o2\n    };\n    return null == o2 && null != $fb96b826c0c5f37a$export$41c562ebe57d11e2.vnode && $fb96b826c0c5f37a$export$41c562ebe57d11e2.vnode(f2), f2;\n}\nfunction $fb96b826c0c5f37a$export$7d1e3a5e95ceca43() {\n    return {\n        current: null\n    };\n}\nfunction $fb96b826c0c5f37a$export$ffb0004e005737fa(n4) {\n    return n4.children;\n}\nfunction $fb96b826c0c5f37a$export$16fa2f45be04daa8(n5, l4) {\n    this.props = n5, this.context = l4;\n}\nfunction $fb96b826c0c5f37a$var$k(n6, l5) {\n    if (null == l5) return n6.__ ? $fb96b826c0c5f37a$var$k(n6.__, n6.__.__k.indexOf(n6) + 1) : null;\n    for(var u3; l5 < n6.__k.length; l5++)if (null != (u3 = n6.__k[l5]) && null != u3.__e) return u3.__e;\n    return "function" == typeof n6.type ? $fb96b826c0c5f37a$var$k(n6) : null;\n}\nfunction $fb96b826c0c5f37a$var$b(n7) {\n    var l6, u4;\n    if (null != (n7 = n7.__) && null != n7.__c) {\n        for(n7.__e = n7.__c.base = null, l6 = 0; l6 < n7.__k.length; l6++)if (null != (u4 = n7.__k[l6]) && null != u4.__e) {\n            n7.__e = n7.__c.base = u4.__e;\n            break;\n        }\n        return $fb96b826c0c5f37a$var$b(n7);\n    }\n}\nfunction $fb96b826c0c5f37a$var$m(n8) {\n    (!n8.__d && (n8.__d = !0) && $fb96b826c0c5f37a$var$t.push(n8) && !$fb96b826c0c5f37a$var$g.__r++ || $fb96b826c0c5f37a$var$o !== $fb96b826c0c5f37a$export$41c562ebe57d11e2.debounceRendering) && (($fb96b826c0c5f37a$var$o = $fb96b826c0c5f37a$export$41c562ebe57d11e2.debounceRendering) || $fb96b826c0c5f37a$var$r)($fb96b826c0c5f37a$var$g);\n}\nfunction $fb96b826c0c5f37a$var$g() {\n    for(var n9; $fb96b826c0c5f37a$var$g.__r = $fb96b826c0c5f37a$var$t.length;)n9 = $fb96b826c0c5f37a$var$t.sort(function(n10, l7) {\n        return n10.__v.__b - l7.__v.__b;\n    }), $fb96b826c0c5f37a$var$t = [], n9.some(function(n11) {\n        var l8, u5, i3, t3, r3, o3;\n        n11.__d && (r3 = (t3 = (l8 = n11).__v).__e, (o3 = l8.__P) && (u5 = [], (i3 = $fb96b826c0c5f37a$var$a({}, t3)).__v = t3.__v + 1, $fb96b826c0c5f37a$var$j(o3, t3, i3, l8.__n, void 0 !== o3.ownerSVGElement, null != t3.__h ? [\n            r3\n        ] : null, u5, null == r3 ? $fb96b826c0c5f37a$var$k(t3) : r3, t3.__h), $fb96b826c0c5f37a$var$z(u5, t3), t3.__e != r3 && $fb96b826c0c5f37a$var$b(t3)));\n    });\n}\nfunction $fb96b826c0c5f37a$var$w(n12, l9, u6, i4, t4, r4, o4, f3, s1, a1) {\n    var h1, v1, p1, _1, b1, m1, g1, w1 = i4 && i4.__k || $fb96b826c0c5f37a$var$c, A1 = w1.length;\n    for(u6.__k = [], h1 = 0; h1 < l9.length; h1++)if (null != (_1 = u6.__k[h1] = null == (_1 = l9[h1]) || "boolean" == typeof _1 ? null : "string" == typeof _1 || "number" == typeof _1 || "bigint" == typeof _1 ? $fb96b826c0c5f37a$var$y(null, _1, null, null, _1) : Array.isArray(_1) ? $fb96b826c0c5f37a$var$y($fb96b826c0c5f37a$export$ffb0004e005737fa, {\n        children: _1\n    }, null, null, null) : _1.__b > 0 ? $fb96b826c0c5f37a$var$y(_1.type, _1.props, _1.key, null, _1.__v) : _1)) {\n        if (_1.__ = u6, _1.__b = u6.__b + 1, null === (p1 = w1[h1]) || p1 && _1.key == p1.key && _1.type === p1.type) w1[h1] = void 0;\n        else for(v1 = 0; v1 < A1; v1++){\n            if ((p1 = w1[v1]) && _1.key == p1.key && _1.type === p1.type) {\n                w1[v1] = void 0;\n                break;\n            }\n            p1 = null;\n        }\n        $fb96b826c0c5f37a$var$j(n12, _1, p1 = p1 || $fb96b826c0c5f37a$var$e, t4, r4, o4, f3, s1, a1), b1 = _1.__e, (v1 = _1.ref) && p1.ref != v1 && (g1 || (g1 = []), p1.ref && g1.push(p1.ref, null, _1), g1.push(v1, _1.__c || b1, _1)), null != b1 ? (null == m1 && (m1 = b1), "function" == typeof _1.type && _1.__k === p1.__k ? _1.__d = s1 = $fb96b826c0c5f37a$var$x(_1, s1, n12) : s1 = $fb96b826c0c5f37a$var$P(n12, _1, p1, w1, b1, s1), "function" == typeof u6.type && (u6.__d = s1)) : s1 && p1.__e == s1 && s1.parentNode != n12 && (s1 = $fb96b826c0c5f37a$var$k(p1));\n    }\n    for(u6.__e = m1, h1 = A1; h1--;)null != w1[h1] && ("function" == typeof u6.type && null != w1[h1].__e && w1[h1].__e == u6.__d && (u6.__d = $fb96b826c0c5f37a$var$k(i4, h1 + 1)), $fb96b826c0c5f37a$var$N(w1[h1], w1[h1]));\n    if (g1) for(h1 = 0; h1 < g1.length; h1++)$fb96b826c0c5f37a$var$M(g1[h1], g1[++h1], g1[++h1]);\n}\nfunction $fb96b826c0c5f37a$var$x(n13, l10, u7) {\n    for(var i5, t5 = n13.__k, r5 = 0; t5 && r5 < t5.length; r5++)(i5 = t5[r5]) && (i5.__ = n13, l10 = "function" == typeof i5.type ? $fb96b826c0c5f37a$var$x(i5, l10, u7) : $fb96b826c0c5f37a$var$P(u7, i5, i5, t5, i5.__e, l10));\n    return l10;\n}\nfunction $fb96b826c0c5f37a$export$47e4c5b300681277(n14, l11) {\n    return l11 = l11 || [], null == n14 || "boolean" == typeof n14 || (Array.isArray(n14) ? n14.some(function(n15) {\n        $fb96b826c0c5f37a$export$47e4c5b300681277(n15, l11);\n    }) : l11.push(n14)), l11;\n}\nfunction $fb96b826c0c5f37a$var$P(n16, l12, u8, i6, t6, r6) {\n    var o5, f4, e1;\n    if (void 0 !== l12.__d) o5 = l12.__d, l12.__d = void 0;\n    else if (null == u8 || t6 != r6 || null == t6.parentNode) n: if (null == r6 || r6.parentNode !== n16) n16.appendChild(t6), o5 = null;\n    else {\n        for(f4 = r6, e1 = 0; (f4 = f4.nextSibling) && e1 < i6.length; e1 += 2)if (f4 == t6) break n;\n        n16.insertBefore(t6, r6), o5 = r6;\n    }\n    return void 0 !== o5 ? o5 : t6.nextSibling;\n}\nfunction $fb96b826c0c5f37a$var$C(n17, l13, u9, i7, t7) {\n    var r7;\n    for(r7 in u9)"children" === r7 || "key" === r7 || r7 in l13 || $fb96b826c0c5f37a$var$H(n17, r7, null, u9[r7], i7);\n    for(r7 in l13)t7 && "function" != typeof l13[r7] || "children" === r7 || "key" === r7 || "value" === r7 || "checked" === r7 || u9[r7] === l13[r7] || $fb96b826c0c5f37a$var$H(n17, r7, l13[r7], u9[r7], i7);\n}\nfunction $fb96b826c0c5f37a$var$$(n18, l14, u10) {\n    "-" === l14[0] ? n18.setProperty(l14, u10) : n18[l14] = null == u10 ? "" : "number" != typeof u10 || $fb96b826c0c5f37a$var$s.test(l14) ? u10 : u10 + "px";\n}\nfunction $fb96b826c0c5f37a$var$H(n19, l15, u11, i8, t8) {\n    var r8;\n    n: if ("style" === l15) {\n        if ("string" == typeof u11) n19.style.cssText = u11;\n        else {\n            if ("string" == typeof i8 && (n19.style.cssText = i8 = ""), i8) for(l15 in i8)u11 && l15 in u11 || $fb96b826c0c5f37a$var$$(n19.style, l15, "");\n            if (u11) for(l15 in u11)i8 && u11[l15] === i8[l15] || $fb96b826c0c5f37a$var$$(n19.style, l15, u11[l15]);\n        }\n    } else if ("o" === l15[0] && "n" === l15[1]) r8 = l15 !== (l15 = l15.replace(/Capture$/, "")), l15 = l15.toLowerCase() in n19 ? l15.toLowerCase().slice(2) : l15.slice(2), n19.l || (n19.l = {}), n19.l[l15 + r8] = u11, u11 ? i8 || n19.addEventListener(l15, r8 ? $fb96b826c0c5f37a$var$T : $fb96b826c0c5f37a$var$I, r8) : n19.removeEventListener(l15, r8 ? $fb96b826c0c5f37a$var$T : $fb96b826c0c5f37a$var$I, r8);\n    else if ("dangerouslySetInnerHTML" !== l15) {\n        if (t8) l15 = l15.replace(/xlink[H:h]/, "h").replace(/sName$/, "s");\n        else if ("href" !== l15 && "list" !== l15 && "form" !== l15 && "tabIndex" !== l15 && "download" !== l15 && l15 in n19) try {\n            n19[l15] = null == u11 ? "" : u11;\n            break n;\n        } catch (n) {}\n        "function" == typeof u11 || (null != u11 && (!1 !== u11 || "a" === l15[0] && "r" === l15[1]) ? n19.setAttribute(l15, u11) : n19.removeAttribute(l15));\n    }\n}\nfunction $fb96b826c0c5f37a$var$I(n20) {\n    this.l[n20.type + !1]($fb96b826c0c5f37a$export$41c562ebe57d11e2.event ? $fb96b826c0c5f37a$export$41c562ebe57d11e2.event(n20) : n20);\n}\nfunction $fb96b826c0c5f37a$var$T(n21) {\n    this.l[n21.type + !0]($fb96b826c0c5f37a$export$41c562ebe57d11e2.event ? $fb96b826c0c5f37a$export$41c562ebe57d11e2.event(n21) : n21);\n}\nfunction $fb96b826c0c5f37a$var$j(n22, u12, i9, t9, r9, o6, f5, e2, c1) {\n    var s2, h2, v2, y1, p2, k1, b2, m2, g2, x1, A2, P1 = u12.type;\n    if (void 0 !== u12.constructor) return null;\n    null != i9.__h && (c1 = i9.__h, e2 = u12.__e = i9.__e, u12.__h = null, o6 = [\n        e2\n    ]), (s2 = $fb96b826c0c5f37a$export$41c562ebe57d11e2.__b) && s2(u12);\n    try {\n        n: if ("function" == typeof P1) {\n            if (m2 = u12.props, g2 = (s2 = P1.contextType) && t9[s2.__c], x1 = s2 ? g2 ? g2.props.value : s2.__ : t9, i9.__c ? b2 = (h2 = u12.__c = i9.__c).__ = h2.__E : ("prototype" in P1 && P1.prototype.render ? u12.__c = h2 = new P1(m2, x1) : (u12.__c = h2 = new $fb96b826c0c5f37a$export$16fa2f45be04daa8(m2, x1), h2.constructor = P1, h2.render = $fb96b826c0c5f37a$var$O), g2 && g2.sub(h2), h2.props = m2, h2.state || (h2.state = {}), h2.context = x1, h2.__n = t9, v2 = h2.__d = !0, h2.__h = []), null == h2.__s && (h2.__s = h2.state), null != P1.getDerivedStateFromProps && (h2.__s == h2.state && (h2.__s = $fb96b826c0c5f37a$var$a({}, h2.__s)), $fb96b826c0c5f37a$var$a(h2.__s, P1.getDerivedStateFromProps(m2, h2.__s))), y1 = h2.props, p2 = h2.state, v2) null == P1.getDerivedStateFromProps && null != h2.componentWillMount && h2.componentWillMount(), null != h2.componentDidMount && h2.__h.push(h2.componentDidMount);\n            else {\n                if (null == P1.getDerivedStateFromProps && m2 !== y1 && null != h2.componentWillReceiveProps && h2.componentWillReceiveProps(m2, x1), !h2.__e && null != h2.shouldComponentUpdate && !1 === h2.shouldComponentUpdate(m2, h2.__s, x1) || u12.__v === i9.__v) {\n                    h2.props = m2, h2.state = h2.__s, u12.__v !== i9.__v && (h2.__d = !1), h2.__v = u12, u12.__e = i9.__e, u12.__k = i9.__k, u12.__k.forEach(function(n23) {\n                        n23 && (n23.__ = u12);\n                    }), h2.__h.length && f5.push(h2);\n                    break n;\n                }\n                null != h2.componentWillUpdate && h2.componentWillUpdate(m2, h2.__s, x1), null != h2.componentDidUpdate && h2.__h.push(function() {\n                    h2.componentDidUpdate(y1, p2, k1);\n                });\n            }\n            h2.context = x1, h2.props = m2, h2.state = h2.__s, (s2 = $fb96b826c0c5f37a$export$41c562ebe57d11e2.__r) && s2(u12), h2.__d = !1, h2.__v = u12, h2.__P = n22, s2 = h2.render(h2.props, h2.state, h2.context), h2.state = h2.__s, null != h2.getChildContext && (t9 = $fb96b826c0c5f37a$var$a($fb96b826c0c5f37a$var$a({}, t9), h2.getChildContext())), v2 || null == h2.getSnapshotBeforeUpdate || (k1 = h2.getSnapshotBeforeUpdate(y1, p2)), A2 = null != s2 && s2.type === $fb96b826c0c5f37a$export$ffb0004e005737fa && null == s2.key ? s2.props.children : s2, $fb96b826c0c5f37a$var$w(n22, Array.isArray(A2) ? A2 : [\n                A2\n            ], u12, i9, t9, r9, o6, f5, e2, c1), h2.base = u12.__e, u12.__h = null, h2.__h.length && f5.push(h2), b2 && (h2.__E = h2.__ = null), h2.__e = !1;\n        } else null == o6 && u12.__v === i9.__v ? (u12.__k = i9.__k, u12.__e = i9.__e) : u12.__e = $fb96b826c0c5f37a$var$L(i9.__e, u12, i9, t9, r9, o6, f5, c1);\n        (s2 = $fb96b826c0c5f37a$export$41c562ebe57d11e2.diffed) && s2(u12);\n    } catch (n24) {\n        u12.__v = null, (c1 || null != o6) && (u12.__e = e2, u12.__h = !!c1, o6[o6.indexOf(e2)] = null), $fb96b826c0c5f37a$export$41c562ebe57d11e2.__e(n24, u12, i9);\n    }\n}\nfunction $fb96b826c0c5f37a$var$z(n25, u13) {\n    $fb96b826c0c5f37a$export$41c562ebe57d11e2.__c && $fb96b826c0c5f37a$export$41c562ebe57d11e2.__c(u13, n25), n25.some(function(u14) {\n        try {\n            n25 = u14.__h, u14.__h = [], n25.some(function(n26) {\n                n26.call(u14);\n            });\n        } catch (n27) {\n            $fb96b826c0c5f37a$export$41c562ebe57d11e2.__e(n27, u14.__v);\n        }\n    });\n}\nfunction $fb96b826c0c5f37a$var$L(l16, u15, i10, t10, r10, o7, f6, c2) {\n    var s3, a2, v3, y2 = i10.props, p3 = u15.props, d1 = u15.type, _2 = 0;\n    if ("svg" === d1 && (r10 = !0), null != o7) {\n        for(; _2 < o7.length; _2++)if ((s3 = o7[_2]) && "setAttribute" in s3 == !!d1 && (d1 ? s3.localName === d1 : 3 === s3.nodeType)) {\n            l16 = s3, o7[_2] = null;\n            break;\n        }\n    }\n    if (null == l16) {\n        if (null === d1) return document.createTextNode(p3);\n        l16 = r10 ? document.createElementNS("http://www.w3.org/2000/svg", d1) : document.createElement(d1, p3.is && p3), o7 = null, c2 = !1;\n    }\n    if (null === d1) y2 === p3 || c2 && l16.data === p3 || (l16.data = p3);\n    else {\n        if (o7 = o7 && $fb96b826c0c5f37a$var$n.call(l16.childNodes), a2 = (y2 = i10.props || $fb96b826c0c5f37a$var$e).dangerouslySetInnerHTML, v3 = p3.dangerouslySetInnerHTML, !c2) {\n            if (null != o7) for(y2 = {}, _2 = 0; _2 < l16.attributes.length; _2++)y2[l16.attributes[_2].name] = l16.attributes[_2].value;\n            (v3 || a2) && (v3 && (a2 && v3.__html == a2.__html || v3.__html === l16.innerHTML) || (l16.innerHTML = v3 && v3.__html || ""));\n        }\n        if ($fb96b826c0c5f37a$var$C(l16, p3, y2, r10, c2), v3) u15.__k = [];\n        else if (_2 = u15.props.children, $fb96b826c0c5f37a$var$w(l16, Array.isArray(_2) ? _2 : [\n            _2\n        ], u15, i10, t10, r10 && "foreignObject" !== d1, o7, f6, o7 ? o7[0] : i10.__k && $fb96b826c0c5f37a$var$k(i10, 0), c2), null != o7) for(_2 = o7.length; _2--;)null != o7[_2] && $fb96b826c0c5f37a$var$h(o7[_2]);\n        c2 || ("value" in p3 && void 0 !== (_2 = p3.value) && (_2 !== y2.value || _2 !== l16.value || "progress" === d1 && !_2) && $fb96b826c0c5f37a$var$H(l16, "value", _2, y2.value, !1), "checked" in p3 && void 0 !== (_2 = p3.checked) && _2 !== l16.checked && $fb96b826c0c5f37a$var$H(l16, "checked", _2, y2.checked, !1));\n    }\n    return l16;\n}\nfunction $fb96b826c0c5f37a$var$M(n28, u16, i11) {\n    try {\n        "function" == typeof n28 ? n28(u16) : n28.current = u16;\n    } catch (n29) {\n        $fb96b826c0c5f37a$export$41c562ebe57d11e2.__e(n29, i11);\n    }\n}\nfunction $fb96b826c0c5f37a$var$N(n30, u17, i12) {\n    var t11, r11;\n    if ($fb96b826c0c5f37a$export$41c562ebe57d11e2.unmount && $fb96b826c0c5f37a$export$41c562ebe57d11e2.unmount(n30), (t11 = n30.ref) && (t11.current && t11.current !== n30.__e || $fb96b826c0c5f37a$var$M(t11, null, u17)), null != (t11 = n30.__c)) {\n        if (t11.componentWillUnmount) try {\n            t11.componentWillUnmount();\n        } catch (n31) {\n            $fb96b826c0c5f37a$export$41c562ebe57d11e2.__e(n31, u17);\n        }\n        t11.base = t11.__P = null;\n    }\n    if (t11 = n30.__k) for(r11 = 0; r11 < t11.length; r11++)t11[r11] && $fb96b826c0c5f37a$var$N(t11[r11], u17, "function" != typeof n30.type);\n    i12 || null == n30.__e || $fb96b826c0c5f37a$var$h(n30.__e), n30.__e = n30.__d = void 0;\n}\nfunction $fb96b826c0c5f37a$var$O(n32, l, u18) {\n    return this.constructor(n32, u18);\n}\nfunction $fb96b826c0c5f37a$export$b3890eb0ae9dca99(u19, i13, t12) {\n    var r12, o8, f7;\n    $fb96b826c0c5f37a$export$41c562ebe57d11e2.__ && $fb96b826c0c5f37a$export$41c562ebe57d11e2.__(u19, i13), o8 = (r12 = "function" == typeof t12) ? null : t12 && t12.__k || i13.__k, f7 = [], $fb96b826c0c5f37a$var$j(i13, u19 = (!r12 && t12 || i13).__k = $fb96b826c0c5f37a$export$c8a8987d4410bf2d($fb96b826c0c5f37a$export$ffb0004e005737fa, null, [\n        u19\n    ]), o8 || $fb96b826c0c5f37a$var$e, $fb96b826c0c5f37a$var$e, void 0 !== i13.ownerSVGElement, !r12 && t12 ? [\n        t12\n    ] : o8 ? null : i13.firstChild ? $fb96b826c0c5f37a$var$n.call(i13.childNodes) : null, f7, !r12 && t12 ? t12 : o8 ? o8.__e : i13.firstChild, r12), $fb96b826c0c5f37a$var$z(f7, u19);\n}\nfunction $fb96b826c0c5f37a$export$fa8d919ba61d84db(n33, l17) {\n    $fb96b826c0c5f37a$export$b3890eb0ae9dca99(n33, l17, $fb96b826c0c5f37a$export$fa8d919ba61d84db);\n}\nfunction $fb96b826c0c5f37a$export$e530037191fcd5d7(l18, u20, i14) {\n    var t13, r13, o9, f8 = $fb96b826c0c5f37a$var$a({}, l18.props);\n    for(o9 in u20)"key" == o9 ? t13 = u20[o9] : "ref" == o9 ? r13 = u20[o9] : f8[o9] = u20[o9];\n    return arguments.length > 2 && (f8.children = arguments.length > 3 ? $fb96b826c0c5f37a$var$n.call(arguments, 2) : i14), $fb96b826c0c5f37a$var$y(l18.type, f8, t13 || l18.key, r13 || l18.ref, null);\n}\nfunction $fb96b826c0c5f37a$export$fd42f52fd3ae1109(n34, l19) {\n    var u21 = {\n        __c: l19 = "__cC" + $fb96b826c0c5f37a$var$f++,\n        __: n34,\n        Consumer: function(n35, l20) {\n            return n35.children(l20);\n        },\n        Provider: function(n36) {\n            var u22, i15;\n            return this.getChildContext || (u22 = [], (i15 = {})[l19] = this, this.getChildContext = function() {\n                return i15;\n            }, this.shouldComponentUpdate = function(n37) {\n                this.props.value !== n37.value && u22.some($fb96b826c0c5f37a$var$m);\n            }, this.sub = function(n38) {\n                u22.push(n38);\n                var l21 = n38.componentWillUnmount;\n                n38.componentWillUnmount = function() {\n                    u22.splice(u22.indexOf(n38), 1), l21 && l21.call(n38);\n                };\n            }), n36.children;\n        }\n    };\n    return u21.Provider.__ = u21.Consumer.contextType = u21;\n}\n$fb96b826c0c5f37a$var$n = $fb96b826c0c5f37a$var$c.slice, $fb96b826c0c5f37a$export$41c562ebe57d11e2 = {\n    __e: function(n39, l22) {\n        for(var u23, i16, t14; l22 = l22.__;)if ((u23 = l22.__c) && !u23.__) try {\n            if ((i16 = u23.constructor) && null != i16.getDerivedStateFromError && (u23.setState(i16.getDerivedStateFromError(n39)), t14 = u23.__d), null != u23.componentDidCatch && (u23.componentDidCatch(n39), t14 = u23.__d), t14) return u23.__E = u23;\n        } catch (l23) {\n            n39 = l23;\n        }\n        throw n39;\n    }\n}, $fb96b826c0c5f37a$var$u = 0, $fb96b826c0c5f37a$export$a8257692ac88316c = function(n40) {\n    return null != n40 && void 0 === n40.constructor;\n}, $fb96b826c0c5f37a$export$16fa2f45be04daa8.prototype.setState = function(n41, l24) {\n    var u24;\n    u24 = null != this.__s && this.__s !== this.state ? this.__s : this.__s = $fb96b826c0c5f37a$var$a({}, this.state), "function" == typeof n41 && (n41 = n41($fb96b826c0c5f37a$var$a({}, u24), this.props)), n41 && $fb96b826c0c5f37a$var$a(u24, n41), null != n41 && this.__v && (l24 && this.__h.push(l24), $fb96b826c0c5f37a$var$m(this));\n}, $fb96b826c0c5f37a$export$16fa2f45be04daa8.prototype.forceUpdate = function(n42) {\n    this.__v && (this.__e = !0, n42 && this.__h.push(n42), $fb96b826c0c5f37a$var$m(this));\n}, $fb96b826c0c5f37a$export$16fa2f45be04daa8.prototype.render = $fb96b826c0c5f37a$export$ffb0004e005737fa, $fb96b826c0c5f37a$var$t = [], $fb96b826c0c5f37a$var$r = "function" == typeof Promise ? Promise.prototype.then.bind(Promise.resolve()) : setTimeout, $fb96b826c0c5f37a$var$g.__r = 0, $fb96b826c0c5f37a$var$f = 0;\nvar $bd9dd35321b03dd4$var$o = 0;\nfunction $bd9dd35321b03dd4$export$34b9dba7ce09269b(_1, e1, n, t, f) {\n    var l, s, u = {};\n    for(s in e1)"ref" == s ? l = e1[s] : u[s] = e1[s];\n    var a = {\n        type: _1,\n        props: u,\n        key: n,\n        ref: l,\n        __k: null,\n        __: null,\n        __b: 0,\n        __e: null,\n        __d: void 0,\n        __c: null,\n        __h: null,\n        constructor: void 0,\n        __v: --$bd9dd35321b03dd4$var$o,\n        __source: t,\n        __self: f\n    };\n    if ("function" == typeof _1 && (l = _1.defaultProps)) for(s in l)void 0 === u[s] && (u[s] = l[s]);\n    return (0, $fb96b826c0c5f37a$export$41c562ebe57d11e2).vnode && (0, $fb96b826c0c5f37a$export$41c562ebe57d11e2).vnode(a), a;\n}\nfunction $f72b75cf796873c7$var$set(key, value) {\n    try {\n        window.localStorage[`emoji-mart.${key}`] = JSON.stringify(value);\n    } catch (error) {}\n}\nfunction $f72b75cf796873c7$var$get(key) {\n    try {\n        const value = window.localStorage[`emoji-mart.${key}`];\n        if (value) return JSON.parse(value);\n    } catch (error) {}\n}\nvar $f72b75cf796873c7$export$2e2bcd8739ae039 = {\n    set: $f72b75cf796873c7$var$set,\n    get: $f72b75cf796873c7$var$get\n};\nconst $c84d045dcc34faf5$var$CACHE = new Map();\nconst $c84d045dcc34faf5$var$VERSIONS = [\n    {\n        v: 14,\n        emoji: "\\uD83E\\uDEE0"\n    },\n    {\n        v: 13.1,\n        emoji: "\\uD83D\\uDE36‍\\uD83C\\uDF2B️"\n    },\n    {\n        v: 13,\n        emoji: "\\uD83E\\uDD78"\n    },\n    {\n        v: 12.1,\n        emoji: "\\uD83E\\uDDD1‍\\uD83E\\uDDB0"\n    },\n    {\n        v: 12,\n        emoji: "\\uD83E\\uDD71"\n    },\n    {\n        v: 11,\n        emoji: "\\uD83E\\uDD70"\n    },\n    {\n        v: 5,\n        emoji: "\\uD83E\\uDD29"\n    },\n    {\n        v: 4,\n        emoji: "\\uD83D\\uDC71‍♀️"\n    },\n    {\n        v: 3,\n        emoji: "\\uD83E\\uDD23"\n    },\n    {\n        v: 2,\n        emoji: "\\uD83D\\uDC4B\\uD83C\\uDFFB"\n    },\n    {\n        v: 1,\n        emoji: "\\uD83D\\uDE43"\n    }\n];\nfunction $c84d045dcc34faf5$var$latestVersion() {\n    for (const { v: v, emoji: emoji } of $c84d045dcc34faf5$var$VERSIONS){\n        if ($c84d045dcc34faf5$var$isSupported(emoji)) return v;\n    }\n}\nfunction $c84d045dcc34faf5$var$noCountryFlags() {\n    if ($c84d045dcc34faf5$var$isSupported("\\uD83C\\uDDE8\\uD83C\\uDDE6")) return false;\n    return true;\n}\nfunction $c84d045dcc34faf5$var$isSupported(emoji) {\n    if ($c84d045dcc34faf5$var$CACHE.has(emoji)) return $c84d045dcc34faf5$var$CACHE.get(emoji);\n    const supported = $c84d045dcc34faf5$var$isEmojiSupported(emoji);\n    $c84d045dcc34faf5$var$CACHE.set(emoji, supported);\n    return supported;\n}\n// https://github.com/koala-interactive/is-emoji-supported\nconst $c84d045dcc34faf5$var$isEmojiSupported = (()=>{\n    let ctx = null;\n    try {\n        if (!navigator.userAgent.includes("jsdom")) ctx = document.createElement("canvas").getContext("2d", {\n            willReadFrequently: true\n        });\n    } catch  {}\n    // Not in browser env\n    if (!ctx) return ()=>false;\n    const CANVAS_HEIGHT = 25;\n    const CANVAS_WIDTH = 20;\n    const textSize = Math.floor(CANVAS_HEIGHT / 2);\n    // Initialize convas context\n    ctx.font = textSize + "px Arial, Sans-Serif";\n    ctx.textBaseline = "top";\n    ctx.canvas.width = CANVAS_WIDTH * 2;\n    ctx.canvas.height = CANVAS_HEIGHT;\n    return (unicode)=>{\n        ctx.clearRect(0, 0, CANVAS_WIDTH * 2, CANVAS_HEIGHT);\n        // Draw in red on the left\n        ctx.fillStyle = "#FF0000";\n        ctx.fillText(unicode, 0, 22);\n        // Draw in blue on right\n        ctx.fillStyle = "#0000FF";\n        ctx.fillText(unicode, CANVAS_WIDTH, 22);\n        const a = ctx.getImageData(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT).data;\n        const count = a.length;\n        let i = 0;\n        // Search the first visible pixel\n        for(; i < count && !a[i + 3]; i += 4);\n        // No visible pixel\n        if (i >= count) return false;\n        // Emoji has immutable color, so we check the color of the emoji in two different colors\n        // the result show be the same.\n        const x = CANVAS_WIDTH + i / 4 % CANVAS_WIDTH;\n        const y = Math.floor(i / 4 / CANVAS_WIDTH);\n        const b = ctx.getImageData(x, y, 1, 1).data;\n        if (a[i] !== b[0] || a[i + 2] !== b[2]) return false;\n        // Some emojis are a contraction of different ones, so if it\'s not\n        // supported, it will show multiple characters\n        if (ctx.measureText(unicode).width >= CANVAS_WIDTH) return false;\n        // Supported\n        return true;\n    };\n})();\nvar $c84d045dcc34faf5$export$2e2bcd8739ae039 = {\n    latestVersion: $c84d045dcc34faf5$var$latestVersion,\n    noCountryFlags: $c84d045dcc34faf5$var$noCountryFlags\n};\nconst $b22cfd0a55410b4f$var$DEFAULTS = [\n    "+1",\n    "grinning",\n    "kissing_heart",\n    "heart_eyes",\n    "laughing",\n    "stuck_out_tongue_winking_eye",\n    "sweat_smile",\n    "joy",\n    "scream",\n    "disappointed",\n    "unamused",\n    "weary",\n    "sob",\n    "sunglasses",\n    "heart"\n];\nlet $b22cfd0a55410b4f$var$Index = null;\nfunction $b22cfd0a55410b4f$var$add(emoji) {\n    $b22cfd0a55410b4f$var$Index || ($b22cfd0a55410b4f$var$Index = (0, $f72b75cf796873c7$export$2e2bcd8739ae039).get("frequently") || {});\n    const emojiId = emoji.id || emoji;\n    if (!emojiId) return;\n    $b22cfd0a55410b4f$var$Index[emojiId] || ($b22cfd0a55410b4f$var$Index[emojiId] = 0);\n    $b22cfd0a55410b4f$var$Index[emojiId] += 1;\n    (0, $f72b75cf796873c7$export$2e2bcd8739ae039).set("last", emojiId);\n    (0, $f72b75cf796873c7$export$2e2bcd8739ae039).set("frequently", $b22cfd0a55410b4f$var$Index);\n}\nfunction $b22cfd0a55410b4f$var$get({ maxFrequentRows: maxFrequentRows, perLine: perLine }) {\n    if (!maxFrequentRows) return [];\n    $b22cfd0a55410b4f$var$Index || ($b22cfd0a55410b4f$var$Index = (0, $f72b75cf796873c7$export$2e2bcd8739ae039).get("frequently"));\n    let emojiIds = [];\n    if (!$b22cfd0a55410b4f$var$Index) {\n        $b22cfd0a55410b4f$var$Index = {};\n        for(let i in $b22cfd0a55410b4f$var$DEFAULTS.slice(0, perLine)){\n            const emojiId = $b22cfd0a55410b4f$var$DEFAULTS[i];\n            $b22cfd0a55410b4f$var$Index[emojiId] = perLine - i;\n            emojiIds.push(emojiId);\n        }\n        return emojiIds;\n    }\n    const max = maxFrequentRows * perLine;\n    const last = (0, $f72b75cf796873c7$export$2e2bcd8739ae039).get("last");\n    for(let emojiId in $b22cfd0a55410b4f$var$Index)emojiIds.push(emojiId);\n    emojiIds.sort((a, b)=>{\n        const aScore = $b22cfd0a55410b4f$var$Index[b];\n        const bScore = $b22cfd0a55410b4f$var$Index[a];\n        if (aScore == bScore) return a.localeCompare(b);\n        return aScore - bScore;\n    });\n    if (emojiIds.length > max) {\n        const removedIds = emojiIds.slice(max);\n        emojiIds = emojiIds.slice(0, max);\n        for (let removedId of removedIds){\n            if (removedId == last) continue;\n            delete $b22cfd0a55410b4f$var$Index[removedId];\n        }\n        if (last && emojiIds.indexOf(last) == -1) {\n            delete $b22cfd0a55410b4f$var$Index[emojiIds[emojiIds.length - 1]];\n            emojiIds.splice(-1, 1, last);\n        }\n        (0, $f72b75cf796873c7$export$2e2bcd8739ae039).set("frequently", $b22cfd0a55410b4f$var$Index);\n    }\n    return emojiIds;\n}\nvar $b22cfd0a55410b4f$export$2e2bcd8739ae039 = {\n    add: $b22cfd0a55410b4f$var$add,\n    get: $b22cfd0a55410b4f$var$get,\n    DEFAULTS: $b22cfd0a55410b4f$var$DEFAULTS\n};\nvar $8d50d93417ef682a$exports = {};\n$8d50d93417ef682a$exports = JSON.parse(\'{"search":"Search","search_no_results_1":"Oh no!","search_no_results_2":"That emoji couldn’t be found","pick":"Pick an emoji…","add_custom":"Add custom emoji","categories":{"activity":"Activity","custom":"Custom","flags":"Flags","foods":"Food & Drink","frequent":"Frequently used","nature":"Animals & Nature","objects":"Objects","people":"Smileys & People","places":"Travel & Places","search":"Search Results","symbols":"Symbols"},"skins":{"1":"Default","2":"Light","3":"Medium-Light","4":"Medium","5":"Medium-Dark","6":"Dark","choose":"Choose default skin tone"}}\');\nvar $b247ea80b67298d5$export$2e2bcd8739ae039 = {\n    autoFocus: {\n        value: false\n    },\n    dynamicWidth: {\n        value: false\n    },\n    emojiButtonColors: {\n        value: null\n    },\n    emojiButtonRadius: {\n        value: "100%"\n    },\n    emojiButtonSize: {\n        value: 36\n    },\n    emojiSize: {\n        value: 24\n    },\n    emojiVersion: {\n        value: 14,\n        choices: [\n            1,\n            2,\n            3,\n            4,\n            5,\n            11,\n            12,\n            12.1,\n            13,\n            13.1,\n            14\n        ]\n    },\n    exceptEmojis: {\n        value: []\n    },\n    icons: {\n        value: "auto",\n        choices: [\n            "auto",\n            "outline",\n            "solid"\n        ]\n    },\n    locale: {\n        value: "en",\n        choices: [\n            "en",\n            "ar",\n            "be",\n            "cs",\n            "de",\n            "es",\n            "fa",\n            "fi",\n            "fr",\n            "hi",\n            "it",\n            "ja",\n            "kr",\n            "nl",\n            "pl",\n            "pt",\n            "ru",\n            "sa",\n            "tr",\n            "uk",\n            "vi",\n            "zh"\n        ]\n    },\n    maxFrequentRows: {\n        value: 4\n    },\n    navPosition: {\n        value: "top",\n        choices: [\n            "top",\n            "bottom",\n            "none"\n        ]\n    },\n    noCountryFlags: {\n        value: false\n    },\n    noResultsEmoji: {\n        value: null\n    },\n    perLine: {\n        value: 9\n    },\n    previewEmoji: {\n        value: null\n    },\n    previewPosition: {\n        value: "bottom",\n        choices: [\n            "top",\n            "bottom",\n            "none"\n        ]\n    },\n    searchPosition: {\n        value: "sticky",\n        choices: [\n            "sticky",\n            "static",\n            "none"\n        ]\n    },\n    set: {\n        value: "native",\n        choices: [\n            "native",\n            "apple",\n            "facebook",\n            "google",\n            "twitter"\n        ]\n    },\n    skin: {\n        value: 1,\n        choices: [\n            1,\n            2,\n            3,\n            4,\n            5,\n            6\n        ]\n    },\n    skinTonePosition: {\n        value: "preview",\n        choices: [\n            "preview",\n            "search",\n            "none"\n        ]\n    },\n    theme: {\n        value: "auto",\n        choices: [\n            "auto",\n            "light",\n            "dark"\n        ]\n    },\n    // Data\n    categories: null,\n    categoryIcons: null,\n    custom: null,\n    data: null,\n    i18n: null,\n    // Callbacks\n    getImageURL: null,\n    getSpritesheetURL: null,\n    onAddCustomEmoji: null,\n    onClickOutside: null,\n    onEmojiSelect: null,\n    // Deprecated\n    stickySearch: {\n        deprecated: true,\n        value: true\n    }\n};\nlet $7adb23b0109cc36a$export$dbe3113d60765c1a = null;\nlet $7adb23b0109cc36a$export$2d0294657ab35f1b = null;\nconst $7adb23b0109cc36a$var$fetchCache = {};\nasync function $7adb23b0109cc36a$var$fetchJSON(src) {\n    if ($7adb23b0109cc36a$var$fetchCache[src]) return $7adb23b0109cc36a$var$fetchCache[src];\n    const response = await fetch(src);\n    const json = await response.json();\n    $7adb23b0109cc36a$var$fetchCache[src] = json;\n    return json;\n}\nlet $7adb23b0109cc36a$var$promise = null;\nlet $7adb23b0109cc36a$var$initiated = false;\nlet $7adb23b0109cc36a$var$initCallback = null;\nlet $7adb23b0109cc36a$var$initialized = false;\nfunction $7adb23b0109cc36a$export$2cd8252107eb640b(options, { caller: caller } = {}) {\n    $7adb23b0109cc36a$var$promise || ($7adb23b0109cc36a$var$promise = new Promise((resolve)=>{\n        $7adb23b0109cc36a$var$initCallback = resolve;\n    }));\n    if (options) $7adb23b0109cc36a$var$_init(options);\n    else if (caller && !$7adb23b0109cc36a$var$initialized) console.warn(`\\`${caller}\\` requires data to be initialized first. Promise will be pending until \\`init\\` is called.`);\n    return $7adb23b0109cc36a$var$promise;\n}\nasync function $7adb23b0109cc36a$var$_init(props) {\n    $7adb23b0109cc36a$var$initialized = true;\n    let { emojiVersion: emojiVersion, set: set, locale: locale } = props;\n    emojiVersion || (emojiVersion = (0, $b247ea80b67298d5$export$2e2bcd8739ae039).emojiVersion.value);\n    set || (set = (0, $b247ea80b67298d5$export$2e2bcd8739ae039).set.value);\n    locale || (locale = (0, $b247ea80b67298d5$export$2e2bcd8739ae039).locale.value);\n    if (!$7adb23b0109cc36a$export$2d0294657ab35f1b) {\n        $7adb23b0109cc36a$export$2d0294657ab35f1b = (typeof props.data === "function" ? await props.data() : props.data) || await $7adb23b0109cc36a$var$fetchJSON(`https://cdn.jsdelivr.net/npm/@emoji-mart/data@latest/sets/${emojiVersion}/${set}.json`);\n        $7adb23b0109cc36a$export$2d0294657ab35f1b.emoticons = {};\n        $7adb23b0109cc36a$export$2d0294657ab35f1b.natives = {};\n        $7adb23b0109cc36a$export$2d0294657ab35f1b.categories.unshift({\n            id: "frequent",\n            emojis: []\n        });\n        for(const alias in $7adb23b0109cc36a$export$2d0294657ab35f1b.aliases){\n            const emojiId = $7adb23b0109cc36a$export$2d0294657ab35f1b.aliases[alias];\n            const emoji = $7adb23b0109cc36a$export$2d0294657ab35f1b.emojis[emojiId];\n            if (!emoji) continue;\n            emoji.aliases || (emoji.aliases = []);\n            emoji.aliases.push(alias);\n        }\n        $7adb23b0109cc36a$export$2d0294657ab35f1b.originalCategories = $7adb23b0109cc36a$export$2d0294657ab35f1b.categories;\n    } else $7adb23b0109cc36a$export$2d0294657ab35f1b.categories = $7adb23b0109cc36a$export$2d0294657ab35f1b.categories.filter((c)=>{\n        const isCustom = !!c.name;\n        if (!isCustom) return true;\n        return false;\n    });\n    $7adb23b0109cc36a$export$dbe3113d60765c1a = (typeof props.i18n === "function" ? await props.i18n() : props.i18n) || (locale == "en" ? (0, /*@__PURE__*/ $parcel$interopDefault($8d50d93417ef682a$exports)) : await $7adb23b0109cc36a$var$fetchJSON(`https://cdn.jsdelivr.net/npm/@emoji-mart/data@latest/i18n/${locale}.json`));\n    if (props.custom) for(let i in props.custom){\n        i = parseInt(i);\n        const category = props.custom[i];\n        const prevCategory = props.custom[i - 1];\n        if (!category.emojis || !category.emojis.length) continue;\n        category.id || (category.id = `custom_${i + 1}`);\n        category.name || (category.name = $7adb23b0109cc36a$export$dbe3113d60765c1a.categories.custom);\n        if (prevCategory && !category.icon) category.target = prevCategory.target || prevCategory;\n        $7adb23b0109cc36a$export$2d0294657ab35f1b.categories.push(category);\n        for (const emoji of category.emojis)$7adb23b0109cc36a$export$2d0294657ab35f1b.emojis[emoji.id] = emoji;\n    }\n    if (props.categories) $7adb23b0109cc36a$export$2d0294657ab35f1b.categories = $7adb23b0109cc36a$export$2d0294657ab35f1b.originalCategories.filter((c)=>{\n        return props.categories.indexOf(c.id) != -1;\n    }).sort((c1, c2)=>{\n        const i1 = props.categories.indexOf(c1.id);\n        const i2 = props.categories.indexOf(c2.id);\n        return i1 - i2;\n    });\n    let latestVersionSupport = null;\n    let noCountryFlags = null;\n    if (set == "native") {\n        latestVersionSupport = (0, $c84d045dcc34faf5$export$2e2bcd8739ae039).latestVersion();\n        noCountryFlags = props.noCountryFlags || (0, $c84d045dcc34faf5$export$2e2bcd8739ae039).noCountryFlags();\n    }\n    let categoryIndex = $7adb23b0109cc36a$export$2d0294657ab35f1b.categories.length;\n    let resetSearchIndex = false;\n    while(categoryIndex--){\n        const category = $7adb23b0109cc36a$export$2d0294657ab35f1b.categories[categoryIndex];\n        if (category.id == "frequent") {\n            let { maxFrequentRows: maxFrequentRows, perLine: perLine } = props;\n            maxFrequentRows = maxFrequentRows >= 0 ? maxFrequentRows : (0, $b247ea80b67298d5$export$2e2bcd8739ae039).maxFrequentRows.value;\n            perLine || (perLine = (0, $b247ea80b67298d5$export$2e2bcd8739ae039).perLine.value);\n            category.emojis = (0, $b22cfd0a55410b4f$export$2e2bcd8739ae039).get({\n                maxFrequentRows: maxFrequentRows,\n                perLine: perLine\n            });\n        }\n        if (!category.emojis || !category.emojis.length) {\n            $7adb23b0109cc36a$export$2d0294657ab35f1b.categories.splice(categoryIndex, 1);\n            continue;\n        }\n        const { categoryIcons: categoryIcons } = props;\n        if (categoryIcons) {\n            const icon = categoryIcons[category.id];\n            if (icon && !category.icon) category.icon = icon;\n        }\n        let emojiIndex = category.emojis.length;\n        while(emojiIndex--){\n            const emojiId = category.emojis[emojiIndex];\n            const emoji = emojiId.id ? emojiId : $7adb23b0109cc36a$export$2d0294657ab35f1b.emojis[emojiId];\n            const ignore = ()=>{\n                category.emojis.splice(emojiIndex, 1);\n            };\n            if (!emoji || props.exceptEmojis && props.exceptEmojis.includes(emoji.id)) {\n                ignore();\n                continue;\n            }\n            if (latestVersionSupport && emoji.version > latestVersionSupport) {\n                ignore();\n                continue;\n            }\n            if (noCountryFlags && category.id == "flags") {\n                if (!(0, $e6eae5155b87f591$export$bcb25aa587e9cb13).includes(emoji.id)) {\n                    ignore();\n                    continue;\n                }\n            }\n            if (!emoji.search) {\n                resetSearchIndex = true;\n                emoji.search = "," + [\n                    [\n                        emoji.id,\n                        false\n                    ],\n                    [\n                        emoji.name,\n                        true\n                    ],\n                    [\n                        emoji.keywords,\n                        false\n                    ],\n                    [\n                        emoji.emoticons,\n                        false\n                    ]\n                ].map(([strings, split])=>{\n                    if (!strings) return;\n                    return (Array.isArray(strings) ? strings : [\n                        strings\n                    ]).map((string)=>{\n                        return (split ? string.split(/[-|_|\\s]+/) : [\n                            string\n                        ]).map((s)=>s.toLowerCase());\n                    }).flat();\n                }).flat().filter((a)=>a && a.trim()).join(",");\n                if (emoji.emoticons) for (const emoticon of emoji.emoticons){\n                    if ($7adb23b0109cc36a$export$2d0294657ab35f1b.emoticons[emoticon]) continue;\n                    $7adb23b0109cc36a$export$2d0294657ab35f1b.emoticons[emoticon] = emoji.id;\n                }\n                let skinIndex = 0;\n                for (const skin of emoji.skins){\n                    if (!skin) continue;\n                    skinIndex++;\n                    const { native: native } = skin;\n                    if (native) {\n                        $7adb23b0109cc36a$export$2d0294657ab35f1b.natives[native] = emoji.id;\n                        emoji.search += `,${native}`;\n                    }\n                    const skinShortcodes = skinIndex == 1 ? "" : `:skin-tone-${skinIndex}:`;\n                    skin.shortcodes = `:${emoji.id}:${skinShortcodes}`;\n                }\n            }\n        }\n    }\n    if (resetSearchIndex) (0, $c4d155af13ad4d4b$export$2e2bcd8739ae039).reset();\n    $7adb23b0109cc36a$var$initCallback();\n}\nfunction $7adb23b0109cc36a$export$75fe5f91d452f94b(props, defaultProps, element) {\n    props || (props = {});\n    const _props = {};\n    for(let k in defaultProps)_props[k] = $7adb23b0109cc36a$export$88c9ddb45cea7241(k, props, defaultProps, element);\n    return _props;\n}\nfunction $7adb23b0109cc36a$export$88c9ddb45cea7241(propName, props, defaultProps, element) {\n    const defaults = defaultProps[propName];\n    let value = element && element.getAttribute(propName) || (props[propName] != null && props[propName] != undefined ? props[propName] : null);\n    if (!defaults) return value;\n    if (value != null && defaults.value && typeof defaults.value != typeof value) {\n        if (typeof defaults.value == "boolean") value = value == "false" ? false : true;\n        else value = defaults.value.constructor(value);\n    }\n    if (defaults.transform && value) value = defaults.transform(value);\n    if (value == null || defaults.choices && defaults.choices.indexOf(value) == -1) value = defaults.value;\n    return value;\n}\nconst $c4d155af13ad4d4b$var$SHORTCODES_REGEX = /^(?:\\:([^\\:]+)\\:)(?:\\:skin-tone-(\\d)\\:)?$/;\nlet $c4d155af13ad4d4b$var$Pool = null;\nfunction $c4d155af13ad4d4b$var$get(emojiId) {\n    if (emojiId.id) return emojiId;\n    return (0, $7adb23b0109cc36a$export$2d0294657ab35f1b).emojis[emojiId] || (0, $7adb23b0109cc36a$export$2d0294657ab35f1b).emojis[(0, $7adb23b0109cc36a$export$2d0294657ab35f1b).aliases[emojiId]] || (0, $7adb23b0109cc36a$export$2d0294657ab35f1b).emojis[(0, $7adb23b0109cc36a$export$2d0294657ab35f1b).natives[emojiId]];\n}\nfunction $c4d155af13ad4d4b$var$reset() {\n    $c4d155af13ad4d4b$var$Pool = null;\n}\nasync function $c4d155af13ad4d4b$var$search(value, { maxResults: maxResults, caller: caller } = {}) {\n    if (!value || !value.trim().length) return null;\n    maxResults || (maxResults = 90);\n    await (0, $7adb23b0109cc36a$export$2cd8252107eb640b)(null, {\n        caller: caller || "SearchIndex.search"\n    });\n    const values = value.toLowerCase().replace(/(\\w)-/, "$1 ").split(/[\\s|,]+/).filter((word, i, words)=>{\n        return word.trim() && words.indexOf(word) == i;\n    });\n    if (!values.length) return;\n    let pool = $c4d155af13ad4d4b$var$Pool || ($c4d155af13ad4d4b$var$Pool = Object.values((0, $7adb23b0109cc36a$export$2d0294657ab35f1b).emojis));\n    let results, scores;\n    for (const value1 of values){\n        if (!pool.length) break;\n        results = [];\n        scores = {};\n        for (const emoji of pool){\n            if (!emoji.search) continue;\n            const score = emoji.search.indexOf(`,${value1}`);\n            if (score == -1) continue;\n            results.push(emoji);\n            scores[emoji.id] || (scores[emoji.id] = 0);\n            scores[emoji.id] += emoji.id == value1 ? 0 : score + 1;\n        }\n        pool = results;\n    }\n    if (results.length < 2) return results;\n    results.sort((a, b)=>{\n        const aScore = scores[a.id];\n        const bScore = scores[b.id];\n        if (aScore == bScore) return a.id.localeCompare(b.id);\n        return aScore - bScore;\n    });\n    if (results.length > maxResults) results = results.slice(0, maxResults);\n    return results;\n}\nvar $c4d155af13ad4d4b$export$2e2bcd8739ae039 = {\n    search: $c4d155af13ad4d4b$var$search,\n    get: $c4d155af13ad4d4b$var$get,\n    reset: $c4d155af13ad4d4b$var$reset,\n    SHORTCODES_REGEX: $c4d155af13ad4d4b$var$SHORTCODES_REGEX\n};\nconst $e6eae5155b87f591$export$bcb25aa587e9cb13 = [\n    "checkered_flag",\n    "crossed_flags",\n    "pirate_flag",\n    "rainbow-flag",\n    "transgender_flag",\n    "triangular_flag_on_post",\n    "waving_black_flag",\n    "waving_white_flag"\n];\nfunction $693b183b0a78708f$export$9cb4719e2e525b7a(a, b) {\n    return Array.isArray(a) && Array.isArray(b) && a.length === b.length && a.every((val, index)=>val == b[index]);\n}\nasync function $693b183b0a78708f$export$e772c8ff12451969(frames = 1) {\n    for(let _ in [\n        ...Array(frames).keys()\n    ])await new Promise(requestAnimationFrame);\n}\nfunction $693b183b0a78708f$export$d10ac59fbe52a745(emoji, { skinIndex: skinIndex = 0 } = {}) {\n    const skin = emoji.skins[skinIndex] || (()=>{\n        skinIndex = 0;\n        return emoji.skins[skinIndex];\n    })();\n    const emojiData = {\n        id: emoji.id,\n        name: emoji.name,\n        native: skin.native,\n        unified: skin.unified,\n        keywords: emoji.keywords,\n        shortcodes: skin.shortcodes || emoji.shortcodes\n    };\n    if (emoji.skins.length > 1) emojiData.skin = skinIndex + 1;\n    if (skin.src) emojiData.src = skin.src;\n    if (emoji.aliases && emoji.aliases.length) emojiData.aliases = emoji.aliases;\n    if (emoji.emoticons && emoji.emoticons.length) emojiData.emoticons = emoji.emoticons;\n    return emojiData;\n}\nasync function $693b183b0a78708f$export$5ef5574deca44bc0(nativeString) {\n    const results = await (0, $c4d155af13ad4d4b$export$2e2bcd8739ae039).search(nativeString, {\n        maxResults: 1,\n        caller: "getEmojiDataFromNative"\n    });\n    if (!results || !results.length) return null;\n    const emoji = results[0];\n    let skinIndex = 0;\n    for (let skin of emoji.skins){\n        if (skin.native == nativeString) break;\n        skinIndex++;\n    }\n    return $693b183b0a78708f$export$d10ac59fbe52a745(emoji, {\n        skinIndex: skinIndex\n    });\n}\nconst $fcccfb36ed0cde68$var$categories = {\n    activity: {\n        outline: /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("svg", {\n            xmlns: "http://www.w3.org/2000/svg",\n            viewBox: "0 0 24 24",\n            children: /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("path", {\n                d: "M12 0C5.373 0 0 5.372 0 12c0 6.627 5.373 12 12 12 6.628 0 12-5.373 12-12 0-6.628-5.372-12-12-12m9.949 11H17.05c.224-2.527 1.232-4.773 1.968-6.113A9.966 9.966 0 0 1 21.949 11M13 11V2.051a9.945 9.945 0 0 1 4.432 1.564c-.858 1.491-2.156 4.22-2.392 7.385H13zm-2 0H8.961c-.238-3.165-1.536-5.894-2.393-7.385A9.95 9.95 0 0 1 11 2.051V11zm0 2v8.949a9.937 9.937 0 0 1-4.432-1.564c.857-1.492 2.155-4.221 2.393-7.385H11zm4.04 0c.236 3.164 1.534 5.893 2.392 7.385A9.92 9.92 0 0 1 13 21.949V13h2.04zM4.982 4.887C5.718 6.227 6.726 8.473 6.951 11h-4.9a9.977 9.977 0 0 1 2.931-6.113M2.051 13h4.9c-.226 2.527-1.233 4.771-1.969 6.113A9.972 9.972 0 0 1 2.051 13m16.967 6.113c-.735-1.342-1.744-3.586-1.968-6.113h4.899a9.961 9.961 0 0 1-2.931 6.113"\n            })\n        }),\n        solid: /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("svg", {\n            xmlns: "http://www.w3.org/2000/svg",\n            viewBox: "0 0 512 512",\n            children: /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("path", {\n                d: "M16.17 337.5c0 44.98 7.565 83.54 13.98 107.9C35.22 464.3 50.46 496 174.9 496c9.566 0 19.59-.4707 29.84-1.271L17.33 307.3C16.53 317.6 16.17 327.7 16.17 337.5zM495.8 174.5c0-44.98-7.565-83.53-13.98-107.9c-4.688-17.54-18.34-31.23-36.04-35.95C435.5 27.91 392.9 16 337 16c-9.564 0-19.59 .4707-29.84 1.271l187.5 187.5C495.5 194.4 495.8 184.3 495.8 174.5zM26.77 248.8l236.3 236.3c142-36.1 203.9-150.4 222.2-221.1L248.9 26.87C106.9 62.96 45.07 177.2 26.77 248.8zM256 335.1c0 9.141-7.474 16-16 16c-4.094 0-8.188-1.564-11.31-4.689L164.7 283.3C161.6 280.2 160 276.1 160 271.1c0-8.529 6.865-16 16-16c4.095 0 8.189 1.562 11.31 4.688l64.01 64C254.4 327.8 256 331.9 256 335.1zM304 287.1c0 9.141-7.474 16-16 16c-4.094 0-8.188-1.564-11.31-4.689L212.7 235.3C209.6 232.2 208 228.1 208 223.1c0-9.141 7.473-16 16-16c4.094 0 8.188 1.562 11.31 4.688l64.01 64.01C302.5 279.8 304 283.9 304 287.1zM256 175.1c0-9.141 7.473-16 16-16c4.094 0 8.188 1.562 11.31 4.688l64.01 64.01c3.125 3.125 4.688 7.219 4.688 11.31c0 9.133-7.468 16-16 16c-4.094 0-8.189-1.562-11.31-4.688l-64.01-64.01C257.6 184.2 256 180.1 256 175.1z"\n            })\n        })\n    },\n    custom: /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("svg", {\n        xmlns: "http://www.w3.org/2000/svg",\n        viewBox: "0 0 448 512",\n        children: /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("path", {\n            d: "M417.1 368c-5.937 10.27-16.69 16-27.75 16c-5.422 0-10.92-1.375-15.97-4.281L256 311.4V448c0 17.67-14.33 32-31.1 32S192 465.7 192 448V311.4l-118.3 68.29C68.67 382.6 63.17 384 57.75 384c-11.06 0-21.81-5.734-27.75-16c-8.828-15.31-3.594-34.88 11.72-43.72L159.1 256L41.72 187.7C26.41 178.9 21.17 159.3 29.1 144C36.63 132.5 49.26 126.7 61.65 128.2C65.78 128.7 69.88 130.1 73.72 132.3L192 200.6V64c0-17.67 14.33-32 32-32S256 46.33 256 64v136.6l118.3-68.29c3.838-2.213 7.939-3.539 12.07-4.051C398.7 126.7 411.4 132.5 417.1 144c8.828 15.31 3.594 34.88-11.72 43.72L288 256l118.3 68.28C421.6 333.1 426.8 352.7 417.1 368z"\n        })\n    }),\n    flags: {\n        outline: /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("svg", {\n            xmlns: "http://www.w3.org/2000/svg",\n            viewBox: "0 0 24 24",\n            children: /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("path", {\n                d: "M0 0l6.084 24H8L1.916 0zM21 5h-4l-1-4H4l3 12h3l1 4h13L21 5zM6.563 3h7.875l2 8H8.563l-2-8zm8.832 10l-2.856 1.904L12.063 13h3.332zM19 13l-1.5-6h1.938l2 8H16l3-2z"\n            })\n        }),\n        solid: /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("svg", {\n            xmlns: "http://www.w3.org/2000/svg",\n            viewBox: "0 0 512 512",\n            children: /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("path", {\n                d: "M64 496C64 504.8 56.75 512 48 512h-32C7.25 512 0 504.8 0 496V32c0-17.75 14.25-32 32-32s32 14.25 32 32V496zM476.3 0c-6.365 0-13.01 1.35-19.34 4.233c-45.69 20.86-79.56 27.94-107.8 27.94c-59.96 0-94.81-31.86-163.9-31.87C160.9 .3055 131.6 4.867 96 15.75v350.5c32-9.984 59.87-14.1 84.85-14.1c73.63 0 124.9 31.78 198.6 31.78c31.91 0 68.02-5.971 111.1-23.09C504.1 355.9 512 344.4 512 332.1V30.73C512 11.1 495.3 0 476.3 0z"\n            })\n        })\n    },\n    foods: {\n        outline: /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("svg", {\n            xmlns: "http://www.w3.org/2000/svg",\n            viewBox: "0 0 24 24",\n            children: /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("path", {\n                d: "M17 4.978c-1.838 0-2.876.396-3.68.934.513-1.172 1.768-2.934 4.68-2.934a1 1 0 0 0 0-2c-2.921 0-4.629 1.365-5.547 2.512-.064.078-.119.162-.18.244C11.73 1.838 10.798.023 9.207.023 8.579.022 7.85.306 7 .978 5.027 2.54 5.329 3.902 6.492 4.999 3.609 5.222 0 7.352 0 12.969c0 4.582 4.961 11.009 9 11.009 1.975 0 2.371-.486 3-1 .629.514 1.025 1 3 1 4.039 0 9-6.418 9-11 0-5.953-4.055-8-7-8M8.242 2.546c.641-.508.943-.523.965-.523.426.169.975 1.405 1.357 3.055-1.527-.629-2.741-1.352-2.98-1.846.059-.112.241-.356.658-.686M15 21.978c-1.08 0-1.21-.109-1.559-.402l-.176-.146c-.367-.302-.816-.452-1.266-.452s-.898.15-1.266.452l-.176.146c-.347.292-.477.402-1.557.402-2.813 0-7-5.389-7-9.009 0-5.823 4.488-5.991 5-5.991 1.939 0 2.484.471 3.387 1.251l.323.276a1.995 1.995 0 0 0 2.58 0l.323-.276c.902-.78 1.447-1.251 3.387-1.251.512 0 5 .168 5 6 0 3.617-4.187 9-7 9"\n            })\n        }),\n        solid: /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("svg", {\n            xmlns: "http://www.w3.org/2000/svg",\n            viewBox: "0 0 512 512",\n            children: /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("path", {\n                d: "M481.9 270.1C490.9 279.1 496 291.3 496 304C496 316.7 490.9 328.9 481.9 337.9C472.9 346.9 460.7 352 448 352H64C51.27 352 39.06 346.9 30.06 337.9C21.06 328.9 16 316.7 16 304C16 291.3 21.06 279.1 30.06 270.1C39.06 261.1 51.27 256 64 256H448C460.7 256 472.9 261.1 481.9 270.1zM475.3 388.7C478.3 391.7 480 395.8 480 400V416C480 432.1 473.3 449.3 461.3 461.3C449.3 473.3 432.1 480 416 480H96C79.03 480 62.75 473.3 50.75 461.3C38.74 449.3 32 432.1 32 416V400C32 395.8 33.69 391.7 36.69 388.7C39.69 385.7 43.76 384 48 384H464C468.2 384 472.3 385.7 475.3 388.7zM50.39 220.8C45.93 218.6 42.03 215.5 38.97 211.6C35.91 207.7 33.79 203.2 32.75 198.4C31.71 193.5 31.8 188.5 32.99 183.7C54.98 97.02 146.5 32 256 32C365.5 32 457 97.02 479 183.7C480.2 188.5 480.3 193.5 479.2 198.4C478.2 203.2 476.1 207.7 473 211.6C469.1 215.5 466.1 218.6 461.6 220.8C457.2 222.9 452.3 224 447.3 224H64.67C59.73 224 54.84 222.9 50.39 220.8zM372.7 116.7C369.7 119.7 368 123.8 368 128C368 131.2 368.9 134.3 370.7 136.9C372.5 139.5 374.1 141.6 377.9 142.8C380.8 143.1 384 144.3 387.1 143.7C390.2 143.1 393.1 141.6 395.3 139.3C397.6 137.1 399.1 134.2 399.7 131.1C400.3 128 399.1 124.8 398.8 121.9C397.6 118.1 395.5 116.5 392.9 114.7C390.3 112.9 387.2 111.1 384 111.1C379.8 111.1 375.7 113.7 372.7 116.7V116.7zM244.7 84.69C241.7 87.69 240 91.76 240 96C240 99.16 240.9 102.3 242.7 104.9C244.5 107.5 246.1 109.6 249.9 110.8C252.8 111.1 256 112.3 259.1 111.7C262.2 111.1 265.1 109.6 267.3 107.3C269.6 105.1 271.1 102.2 271.7 99.12C272.3 96.02 271.1 92.8 270.8 89.88C269.6 86.95 267.5 84.45 264.9 82.7C262.3 80.94 259.2 79.1 256 79.1C251.8 79.1 247.7 81.69 244.7 84.69V84.69zM116.7 116.7C113.7 119.7 112 123.8 112 128C112 131.2 112.9 134.3 114.7 136.9C116.5 139.5 118.1 141.6 121.9 142.8C124.8 143.1 128 144.3 131.1 143.7C134.2 143.1 137.1 141.6 139.3 139.3C141.6 137.1 143.1 134.2 143.7 131.1C144.3 128 143.1 124.8 142.8 121.9C141.6 118.1 139.5 116.5 136.9 114.7C134.3 112.9 131.2 111.1 128 111.1C123.8 111.1 119.7 113.7 116.7 116.7L116.7 116.7z"\n            })\n        })\n    },\n    frequent: {\n        outline: /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("svg", {\n            xmlns: "http://www.w3.org/2000/svg",\n            viewBox: "0 0 24 24",\n            children: [\n                /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("path", {\n                    d: "M13 4h-2l-.001 7H9v2h2v2h2v-2h4v-2h-4z"\n                }),\n                /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("path", {\n                    d: "M12 0C5.373 0 0 5.373 0 12s5.373 12 12 12 12-5.373 12-12S18.627 0 12 0m0 22C6.486 22 2 17.514 2 12S6.486 2 12 2s10 4.486 10 10-4.486 10-10 10"\n                })\n            ]\n        }),\n        solid: /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("svg", {\n            xmlns: "http://www.w3.org/2000/svg",\n            viewBox: "0 0 512 512",\n            children: /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("path", {\n                d: "M256 512C114.6 512 0 397.4 0 256C0 114.6 114.6 0 256 0C397.4 0 512 114.6 512 256C512 397.4 397.4 512 256 512zM232 256C232 264 236 271.5 242.7 275.1L338.7 339.1C349.7 347.3 364.6 344.3 371.1 333.3C379.3 322.3 376.3 307.4 365.3 300L280 243.2V120C280 106.7 269.3 96 255.1 96C242.7 96 231.1 106.7 231.1 120L232 256z"\n            })\n        })\n    },\n    nature: {\n        outline: /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("svg", {\n            xmlns: "http://www.w3.org/2000/svg",\n            viewBox: "0 0 24 24",\n            children: [\n                /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("path", {\n                    d: "M15.5 8a1.5 1.5 0 1 0 .001 3.001A1.5 1.5 0 0 0 15.5 8M8.5 8a1.5 1.5 0 1 0 .001 3.001A1.5 1.5 0 0 0 8.5 8"\n                }),\n                /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("path", {\n                    d: "M18.933 0h-.027c-.97 0-2.138.787-3.018 1.497-1.274-.374-2.612-.51-3.887-.51-1.285 0-2.616.133-3.874.517C7.245.79 6.069 0 5.093 0h-.027C3.352 0 .07 2.67.002 7.026c-.039 2.479.276 4.238 1.04 5.013.254.258.882.677 1.295.882.191 3.177.922 5.238 2.536 6.38.897.637 2.187.949 3.2 1.102C8.04 20.6 8 20.795 8 21c0 1.773 2.35 3 4 3 1.648 0 4-1.227 4-3 0-.201-.038-.393-.072-.586 2.573-.385 5.435-1.877 5.925-7.587.396-.22.887-.568 1.104-.788.763-.774 1.079-2.534 1.04-5.013C23.929 2.67 20.646 0 18.933 0M3.223 9.135c-.237.281-.837 1.155-.884 1.238-.15-.41-.368-1.349-.337-3.291.051-3.281 2.478-4.972 3.091-5.031.256.015.731.27 1.265.646-1.11 1.171-2.275 2.915-2.352 5.125-.133.546-.398.858-.783 1.313M12 22c-.901 0-1.954-.693-2-1 0-.654.475-1.236 1-1.602V20a1 1 0 1 0 2 0v-.602c.524.365 1 .947 1 1.602-.046.307-1.099 1-2 1m3-3.48v.02a4.752 4.752 0 0 0-1.262-1.02c1.092-.516 2.239-1.334 2.239-2.217 0-1.842-1.781-2.195-3.977-2.195-2.196 0-3.978.354-3.978 2.195 0 .883 1.148 1.701 2.238 2.217A4.8 4.8 0 0 0 9 18.539v-.025c-1-.076-2.182-.281-2.973-.842-1.301-.92-1.838-3.045-1.853-6.478l.023-.041c.496-.826 1.49-1.45 1.804-3.102 0-2.047 1.357-3.631 2.362-4.522C9.37 3.178 10.555 3 11.948 3c1.447 0 2.685.192 3.733.57 1 .9 2.316 2.465 2.316 4.48.313 1.651 1.307 2.275 1.803 3.102.035.058.068.117.102.178-.059 5.967-1.949 7.01-4.902 7.19m6.628-8.202c-.037-.065-.074-.13-.113-.195a7.587 7.587 0 0 0-.739-.987c-.385-.455-.648-.768-.782-1.313-.076-2.209-1.241-3.954-2.353-5.124.531-.376 1.004-.63 1.261-.647.636.071 3.044 1.764 3.096 5.031.027 1.81-.347 3.218-.37 3.235"\n                })\n            ]\n        }),\n        solid: /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("svg", {\n            xmlns: "http://www.w3.org/2000/svg",\n            viewBox: "0 0 576 512",\n            children: /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("path", {\n                d: "M332.7 19.85C334.6 8.395 344.5 0 356.1 0C363.6 0 370.6 3.52 375.1 9.502L392 32H444.1C456.8 32 469.1 37.06 478.1 46.06L496 64H552C565.3 64 576 74.75 576 88V112C576 156.2 540.2 192 496 192H426.7L421.6 222.5L309.6 158.5L332.7 19.85zM448 64C439.2 64 432 71.16 432 80C432 88.84 439.2 96 448 96C456.8 96 464 88.84 464 80C464 71.16 456.8 64 448 64zM416 256.1V480C416 497.7 401.7 512 384 512H352C334.3 512 320 497.7 320 480V364.8C295.1 377.1 268.8 384 240 384C211.2 384 184 377.1 160 364.8V480C160 497.7 145.7 512 128 512H96C78.33 512 64 497.7 64 480V249.8C35.23 238.9 12.64 214.5 4.836 183.3L.9558 167.8C-3.331 150.6 7.094 133.2 24.24 128.1C41.38 124.7 58.76 135.1 63.05 152.2L66.93 167.8C70.49 182 83.29 191.1 97.97 191.1H303.8L416 256.1z"\n            })\n        })\n    },\n    objects: {\n        outline: /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("svg", {\n            xmlns: "http://www.w3.org/2000/svg",\n            viewBox: "0 0 24 24",\n            children: [\n                /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("path", {\n                    d: "M12 0a9 9 0 0 0-5 16.482V21s2.035 3 5 3 5-3 5-3v-4.518A9 9 0 0 0 12 0zm0 2c3.86 0 7 3.141 7 7s-3.14 7-7 7-7-3.141-7-7 3.14-7 7-7zM9 17.477c.94.332 1.946.523 3 .523s2.06-.19 3-.523v.834c-.91.436-1.925.689-3 .689a6.924 6.924 0 0 1-3-.69v-.833zm.236 3.07A8.854 8.854 0 0 0 12 21c.965 0 1.888-.167 2.758-.451C14.155 21.173 13.153 22 12 22c-1.102 0-2.117-.789-2.764-1.453z"\n                }),\n                /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("path", {\n                    d: "M14.745 12.449h-.004c-.852-.024-1.188-.858-1.577-1.824-.421-1.061-.703-1.561-1.182-1.566h-.009c-.481 0-.783.497-1.235 1.537-.436.982-.801 1.811-1.636 1.791l-.276-.043c-.565-.171-.853-.691-1.284-1.794-.125-.313-.202-.632-.27-.913-.051-.213-.127-.53-.195-.634C7.067 9.004 7.039 9 6.99 9A1 1 0 0 1 7 7h.01c1.662.017 2.015 1.373 2.198 2.134.486-.981 1.304-2.058 2.797-2.075 1.531.018 2.28 1.153 2.731 2.141l.002-.008C14.944 8.424 15.327 7 16.979 7h.032A1 1 0 1 1 17 9h-.011c-.149.076-.256.474-.319.709a6.484 6.484 0 0 1-.311.951c-.429.973-.79 1.789-1.614 1.789"\n                })\n            ]\n        }),\n        solid: /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("svg", {\n            xmlns: "http://www.w3.org/2000/svg",\n            viewBox: "0 0 384 512",\n            children: /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("path", {\n                d: "M112.1 454.3c0 6.297 1.816 12.44 5.284 17.69l17.14 25.69c5.25 7.875 17.17 14.28 26.64 14.28h61.67c9.438 0 21.36-6.401 26.61-14.28l17.08-25.68c2.938-4.438 5.348-12.37 5.348-17.7L272 415.1h-160L112.1 454.3zM191.4 .0132C89.44 .3257 16 82.97 16 175.1c0 44.38 16.44 84.84 43.56 115.8c16.53 18.84 42.34 58.23 52.22 91.45c.0313 .25 .0938 .5166 .125 .7823h160.2c.0313-.2656 .0938-.5166 .125-.7823c9.875-33.22 35.69-72.61 52.22-91.45C351.6 260.8 368 220.4 368 175.1C368 78.61 288.9-.2837 191.4 .0132zM192 96.01c-44.13 0-80 35.89-80 79.1C112 184.8 104.8 192 96 192S80 184.8 80 176c0-61.76 50.25-111.1 112-111.1c8.844 0 16 7.159 16 16S200.8 96.01 192 96.01z"\n            })\n        })\n    },\n    people: {\n        outline: /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("svg", {\n            xmlns: "http://www.w3.org/2000/svg",\n            viewBox: "0 0 24 24",\n            children: [\n                /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("path", {\n                    d: "M12 0C5.373 0 0 5.373 0 12s5.373 12 12 12 12-5.373 12-12S18.627 0 12 0m0 22C6.486 22 2 17.514 2 12S6.486 2 12 2s10 4.486 10 10-4.486 10-10 10"\n                }),\n                /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("path", {\n                    d: "M8 7a2 2 0 1 0-.001 3.999A2 2 0 0 0 8 7M16 7a2 2 0 1 0-.001 3.999A2 2 0 0 0 16 7M15.232 15c-.693 1.195-1.87 2-3.349 2-1.477 0-2.655-.805-3.347-2H15m3-2H6a6 6 0 1 0 12 0"\n                })\n            ]\n        }),\n        solid: /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("svg", {\n            xmlns: "http://www.w3.org/2000/svg",\n            viewBox: "0 0 512 512",\n            children: /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("path", {\n                d: "M0 256C0 114.6 114.6 0 256 0C397.4 0 512 114.6 512 256C512 397.4 397.4 512 256 512C114.6 512 0 397.4 0 256zM256 432C332.1 432 396.2 382 415.2 314.1C419.1 300.4 407.8 288 393.6 288H118.4C104.2 288 92.92 300.4 96.76 314.1C115.8 382 179.9 432 256 432V432zM176.4 160C158.7 160 144.4 174.3 144.4 192C144.4 209.7 158.7 224 176.4 224C194 224 208.4 209.7 208.4 192C208.4 174.3 194 160 176.4 160zM336.4 224C354 224 368.4 209.7 368.4 192C368.4 174.3 354 160 336.4 160C318.7 160 304.4 174.3 304.4 192C304.4 209.7 318.7 224 336.4 224z"\n            })\n        })\n    },\n    places: {\n        outline: /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("svg", {\n            xmlns: "http://www.w3.org/2000/svg",\n            viewBox: "0 0 24 24",\n            children: [\n                /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("path", {\n                    d: "M6.5 12C5.122 12 4 13.121 4 14.5S5.122 17 6.5 17 9 15.879 9 14.5 7.878 12 6.5 12m0 3c-.275 0-.5-.225-.5-.5s.225-.5.5-.5.5.225.5.5-.225.5-.5.5M17.5 12c-1.378 0-2.5 1.121-2.5 2.5s1.122 2.5 2.5 2.5 2.5-1.121 2.5-2.5-1.122-2.5-2.5-2.5m0 3c-.275 0-.5-.225-.5-.5s.225-.5.5-.5.5.225.5.5-.225.5-.5.5"\n                }),\n                /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("path", {\n                    d: "M22.482 9.494l-1.039-.346L21.4 9h.6c.552 0 1-.439 1-.992 0-.006-.003-.008-.003-.008H23c0-1-.889-2-1.984-2h-.642l-.731-1.717C19.262 3.012 18.091 2 16.764 2H7.236C5.909 2 4.738 3.012 4.357 4.283L3.626 6h-.642C1.889 6 1 7 1 8h.003S1 8.002 1 8.008C1 8.561 1.448 9 2 9h.6l-.043.148-1.039.346a2.001 2.001 0 0 0-1.359 2.097l.751 7.508a1 1 0 0 0 .994.901H3v1c0 1.103.896 2 2 2h2c1.104 0 2-.897 2-2v-1h6v1c0 1.103.896 2 2 2h2c1.104 0 2-.897 2-2v-1h1.096a.999.999 0 0 0 .994-.901l.751-7.508a2.001 2.001 0 0 0-1.359-2.097M6.273 4.857C6.402 4.43 6.788 4 7.236 4h9.527c.448 0 .834.43.963.857L19.313 9H4.688l1.585-4.143zM7 21H5v-1h2v1zm12 0h-2v-1h2v1zm2.189-3H2.811l-.662-6.607L3 11h18l.852.393L21.189 18z"\n                })\n            ]\n        }),\n        solid: /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("svg", {\n            xmlns: "http://www.w3.org/2000/svg",\n            viewBox: "0 0 512 512",\n            children: /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("path", {\n                d: "M39.61 196.8L74.8 96.29C88.27 57.78 124.6 32 165.4 32H346.6C387.4 32 423.7 57.78 437.2 96.29L472.4 196.8C495.6 206.4 512 229.3 512 256V448C512 465.7 497.7 480 480 480H448C430.3 480 416 465.7 416 448V400H96V448C96 465.7 81.67 480 64 480H32C14.33 480 0 465.7 0 448V256C0 229.3 16.36 206.4 39.61 196.8V196.8zM109.1 192H402.9L376.8 117.4C372.3 104.6 360.2 96 346.6 96H165.4C151.8 96 139.7 104.6 135.2 117.4L109.1 192zM96 256C78.33 256 64 270.3 64 288C64 305.7 78.33 320 96 320C113.7 320 128 305.7 128 288C128 270.3 113.7 256 96 256zM416 320C433.7 320 448 305.7 448 288C448 270.3 433.7 256 416 256C398.3 256 384 270.3 384 288C384 305.7 398.3 320 416 320z"\n            })\n        })\n    },\n    symbols: {\n        outline: /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("svg", {\n            xmlns: "http://www.w3.org/2000/svg",\n            viewBox: "0 0 24 24",\n            children: /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("path", {\n                d: "M0 0h11v2H0zM4 11h3V6h4V4H0v2h4zM15.5 17c1.381 0 2.5-1.116 2.5-2.493s-1.119-2.493-2.5-2.493S13 13.13 13 14.507 14.119 17 15.5 17m0-2.986c.276 0 .5.222.5.493 0 .272-.224.493-.5.493s-.5-.221-.5-.493.224-.493.5-.493M21.5 19.014c-1.381 0-2.5 1.116-2.5 2.493S20.119 24 21.5 24s2.5-1.116 2.5-2.493-1.119-2.493-2.5-2.493m0 2.986a.497.497 0 0 1-.5-.493c0-.271.224-.493.5-.493s.5.222.5.493a.497.497 0 0 1-.5.493M22 13l-9 9 1.513 1.5 8.99-9.009zM17 11c2.209 0 4-1.119 4-2.5V2s.985-.161 1.498.949C23.01 4.055 23 6 23 6s1-1.119 1-3.135C24-.02 21 0 21 0h-2v6.347A5.853 5.853 0 0 0 17 6c-2.209 0-4 1.119-4 2.5s1.791 2.5 4 2.5M10.297 20.482l-1.475-1.585a47.54 47.54 0 0 1-1.442 1.129c-.307-.288-.989-1.016-2.045-2.183.902-.836 1.479-1.466 1.729-1.892s.376-.871.376-1.336c0-.592-.273-1.178-.818-1.759-.546-.581-1.329-.871-2.349-.871-1.008 0-1.79.293-2.344.879-.556.587-.832 1.181-.832 1.784 0 .813.419 1.748 1.256 2.805-.847.614-1.444 1.208-1.794 1.784a3.465 3.465 0 0 0-.523 1.833c0 .857.308 1.56.924 2.107.616.549 1.423.823 2.42.823 1.173 0 2.444-.379 3.813-1.137L8.235 24h2.819l-2.09-2.383 1.333-1.135zm-6.736-6.389a1.02 1.02 0 0 1 .73-.286c.31 0 .559.085.747.254a.849.849 0 0 1 .283.659c0 .518-.419 1.112-1.257 1.784-.536-.651-.805-1.231-.805-1.742a.901.901 0 0 1 .302-.669M3.74 22c-.427 0-.778-.116-1.057-.349-.279-.232-.418-.487-.418-.766 0-.594.509-1.288 1.527-2.083.968 1.134 1.717 1.946 2.248 2.438-.921.507-1.686.76-2.3.76"\n            })\n        }),\n        solid: /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("svg", {\n            xmlns: "http://www.w3.org/2000/svg",\n            viewBox: "0 0 512 512",\n            children: /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("path", {\n                d: "M500.3 7.251C507.7 13.33 512 22.41 512 31.1V175.1C512 202.5 483.3 223.1 447.1 223.1C412.7 223.1 383.1 202.5 383.1 175.1C383.1 149.5 412.7 127.1 447.1 127.1V71.03L351.1 90.23V207.1C351.1 234.5 323.3 255.1 287.1 255.1C252.7 255.1 223.1 234.5 223.1 207.1C223.1 181.5 252.7 159.1 287.1 159.1V63.1C287.1 48.74 298.8 35.61 313.7 32.62L473.7 .6198C483.1-1.261 492.9 1.173 500.3 7.251H500.3zM74.66 303.1L86.5 286.2C92.43 277.3 102.4 271.1 113.1 271.1H174.9C185.6 271.1 195.6 277.3 201.5 286.2L213.3 303.1H239.1C266.5 303.1 287.1 325.5 287.1 351.1V463.1C287.1 490.5 266.5 511.1 239.1 511.1H47.1C21.49 511.1-.0019 490.5-.0019 463.1V351.1C-.0019 325.5 21.49 303.1 47.1 303.1H74.66zM143.1 359.1C117.5 359.1 95.1 381.5 95.1 407.1C95.1 434.5 117.5 455.1 143.1 455.1C170.5 455.1 191.1 434.5 191.1 407.1C191.1 381.5 170.5 359.1 143.1 359.1zM440.3 367.1H496C502.7 367.1 508.6 372.1 510.1 378.4C513.3 384.6 511.6 391.7 506.5 396L378.5 508C372.9 512.1 364.6 513.3 358.6 508.9C352.6 504.6 350.3 496.6 353.3 489.7L391.7 399.1H336C329.3 399.1 323.4 395.9 321 389.6C318.7 383.4 320.4 376.3 325.5 371.1L453.5 259.1C459.1 255 467.4 254.7 473.4 259.1C479.4 263.4 481.6 271.4 478.7 278.3L440.3 367.1zM116.7 219.1L19.85 119.2C-8.112 90.26-6.614 42.31 24.85 15.34C51.82-8.137 93.26-3.642 118.2 21.83L128.2 32.32L137.7 21.83C162.7-3.642 203.6-8.137 231.6 15.34C262.6 42.31 264.1 90.26 236.1 119.2L139.7 219.1C133.2 225.6 122.7 225.6 116.7 219.1H116.7z"\n            })\n        })\n    }\n};\nconst $fcccfb36ed0cde68$var$search = {\n    loupe: /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("svg", {\n        xmlns: "http://www.w3.org/2000/svg",\n        viewBox: "0 0 20 20",\n        children: /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("path", {\n            d: "M12.9 14.32a8 8 0 1 1 1.41-1.41l5.35 5.33-1.42 1.42-5.33-5.34zM8 14A6 6 0 1 0 8 2a6 6 0 0 0 0 12z"\n        })\n    }),\n    delete: /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("svg", {\n        xmlns: "http://www.w3.org/2000/svg",\n        viewBox: "0 0 20 20",\n        children: /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("path", {\n            d: "M10 8.586L2.929 1.515 1.515 2.929 8.586 10l-7.071 7.071 1.414 1.414L10 11.414l7.071 7.071 1.414-1.414L11.414 10l7.071-7.071-1.414-1.414L10 8.586z"\n        })\n    })\n};\nvar $fcccfb36ed0cde68$export$2e2bcd8739ae039 = {\n    categories: $fcccfb36ed0cde68$var$categories,\n    search: $fcccfb36ed0cde68$var$search\n};\nfunction $254755d3f438722f$export$2e2bcd8739ae039(props) {\n    let { id: id, skin: skin, emoji: emoji } = props;\n    if (props.shortcodes) {\n        const matches = props.shortcodes.match((0, $c4d155af13ad4d4b$export$2e2bcd8739ae039).SHORTCODES_REGEX);\n        if (matches) {\n            id = matches[1];\n            if (matches[2]) skin = matches[2];\n        }\n    }\n    emoji || (emoji = (0, $c4d155af13ad4d4b$export$2e2bcd8739ae039).get(id || props.native));\n    if (!emoji) return props.fallback;\n    const emojiSkin = emoji.skins[skin - 1] || emoji.skins[0];\n    const imageSrc = emojiSkin.src || (props.set != "native" && !props.spritesheet ? typeof props.getImageURL === "function" ? props.getImageURL(props.set, emojiSkin.unified) : `https://cdn.jsdelivr.net/npm/emoji-datasource-${props.set}@14.0.0/img/${props.set}/64/${emojiSkin.unified}.png` : undefined);\n    const spritesheetSrc = typeof props.getSpritesheetURL === "function" ? props.getSpritesheetURL(props.set) : `https://cdn.jsdelivr.net/npm/emoji-datasource-${props.set}@14.0.0/img/${props.set}/sheets-256/64.png`;\n    return /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("span", {\n        class: "emoji-mart-emoji",\n        "data-emoji-set": props.set,\n        children: imageSrc ? /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("img", {\n            style: {\n                maxWidth: props.size || "1em",\n                maxHeight: props.size || "1em",\n                display: "inline-block"\n            },\n            alt: emojiSkin.native || emojiSkin.shortcodes,\n            src: imageSrc\n        }) : props.set == "native" ? /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("span", {\n            style: {\n                fontSize: props.size,\n                fontFamily: \'"EmojiMart", "Segoe UI Emoji", "Segoe UI Symbol", "Segoe UI", "Apple Color Emoji", "Twemoji Mozilla", "Noto Color Emoji", "Android Emoji"\'\n            },\n            children: emojiSkin.native\n        }) : /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("span", {\n            style: {\n                display: "block",\n                width: props.size,\n                height: props.size,\n                backgroundImage: `url(${spritesheetSrc})`,\n                backgroundSize: `${100 * (0, $7adb23b0109cc36a$export$2d0294657ab35f1b).sheet.cols}% ${100 * (0, $7adb23b0109cc36a$export$2d0294657ab35f1b).sheet.rows}%`,\n                backgroundPosition: `${100 / ((0, $7adb23b0109cc36a$export$2d0294657ab35f1b).sheet.cols - 1) * emojiSkin.x}% ${100 / ((0, $7adb23b0109cc36a$export$2d0294657ab35f1b).sheet.rows - 1) * emojiSkin.y}%`\n            }\n        })\n    });\n}\nconst $6f57cc9cd54c5aaa$var$WindowHTMLElement =  false ? 0 : Object;\nclass $6f57cc9cd54c5aaa$export$2e2bcd8739ae039 extends $6f57cc9cd54c5aaa$var$WindowHTMLElement {\n    static get observedAttributes() {\n        return Object.keys(this.Props);\n    }\n    update(props = {}) {\n        for(let k in props)this.attributeChangedCallback(k, null, props[k]);\n    }\n    attributeChangedCallback(attr, _, newValue) {\n        if (!this.component) return;\n        const value = (0, $7adb23b0109cc36a$export$88c9ddb45cea7241)(attr, {\n            [attr]: newValue\n        }, this.constructor.Props, this);\n        if (this.component.componentWillReceiveProps) this.component.componentWillReceiveProps({\n            [attr]: value\n        });\n        else {\n            this.component.props[attr] = value;\n            this.component.forceUpdate();\n        }\n    }\n    disconnectedCallback() {\n        this.disconnected = true;\n        if (this.component && this.component.unregister) this.component.unregister();\n    }\n    constructor(props = {}){\n        super();\n        this.props = props;\n        if (props.parent || props.ref) {\n            let ref = null;\n            const parent = props.parent || (ref = props.ref && props.ref.current);\n            if (ref) ref.innerHTML = "";\n            if (parent) parent.appendChild(this);\n        }\n    }\n}\nclass $26f27c338a96b1a6$export$2e2bcd8739ae039 extends (0, $6f57cc9cd54c5aaa$export$2e2bcd8739ae039) {\n    setShadow() {\n        this.attachShadow({\n            mode: "open"\n        });\n    }\n    injectStyles(styles) {\n        if (!styles) return;\n        const style = document.createElement("style");\n        style.textContent = styles;\n        this.shadowRoot.insertBefore(style, this.shadowRoot.firstChild);\n    }\n    constructor(props, { styles: styles } = {}){\n        super(props);\n        this.setShadow();\n        this.injectStyles(styles);\n    }\n}\nvar $3d90f6e46fb2dd47$export$2e2bcd8739ae039 = {\n    fallback: "",\n    id: "",\n    native: "",\n    shortcodes: "",\n    size: {\n        value: "",\n        transform: (value)=>{\n            // If the value is a number, then we assume it’s a pixel value.\n            if (!/\\D/.test(value)) return `${value}px`;\n            return value;\n        }\n    },\n    // Shared\n    set: (0, $b247ea80b67298d5$export$2e2bcd8739ae039).set,\n    skin: (0, $b247ea80b67298d5$export$2e2bcd8739ae039).skin\n};\nclass $331b4160623139bf$export$2e2bcd8739ae039 extends (0, $6f57cc9cd54c5aaa$export$2e2bcd8739ae039) {\n    async connectedCallback() {\n        const props = (0, $7adb23b0109cc36a$export$75fe5f91d452f94b)(this.props, (0, $3d90f6e46fb2dd47$export$2e2bcd8739ae039), this);\n        props.element = this;\n        props.ref = (component)=>{\n            this.component = component;\n        };\n        await (0, $7adb23b0109cc36a$export$2cd8252107eb640b)();\n        if (this.disconnected) return;\n        (0, $fb96b826c0c5f37a$export$b3890eb0ae9dca99)(/*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)((0, $254755d3f438722f$export$2e2bcd8739ae039), {\n            ...props\n        }), this);\n    }\n    constructor(props){\n        super(props);\n    }\n}\n(0, $c770c458706daa72$export$2e2bcd8739ae039)($331b4160623139bf$export$2e2bcd8739ae039, "Props", (0, $3d90f6e46fb2dd47$export$2e2bcd8739ae039));\nif (typeof customElements !== "undefined" && !customElements.get("em-emoji")) customElements.define("em-emoji", $331b4160623139bf$export$2e2bcd8739ae039);\nvar $1a9a8ef576b7773d$var$t, $1a9a8ef576b7773d$var$u, $1a9a8ef576b7773d$var$r, $1a9a8ef576b7773d$var$o = 0, $1a9a8ef576b7773d$var$i = [], $1a9a8ef576b7773d$var$c = (0, $fb96b826c0c5f37a$export$41c562ebe57d11e2).__b, $1a9a8ef576b7773d$var$f = (0, $fb96b826c0c5f37a$export$41c562ebe57d11e2).__r, $1a9a8ef576b7773d$var$e = (0, $fb96b826c0c5f37a$export$41c562ebe57d11e2).diffed, $1a9a8ef576b7773d$var$a = (0, $fb96b826c0c5f37a$export$41c562ebe57d11e2).__c, $1a9a8ef576b7773d$var$v = (0, $fb96b826c0c5f37a$export$41c562ebe57d11e2).unmount;\nfunction $1a9a8ef576b7773d$var$m(t1, r1) {\n    (0, $fb96b826c0c5f37a$export$41c562ebe57d11e2).__h && (0, $fb96b826c0c5f37a$export$41c562ebe57d11e2).__h($1a9a8ef576b7773d$var$u, t1, $1a9a8ef576b7773d$var$o || r1), $1a9a8ef576b7773d$var$o = 0;\n    var i1 = $1a9a8ef576b7773d$var$u.__H || ($1a9a8ef576b7773d$var$u.__H = {\n        __: [],\n        __h: []\n    });\n    return t1 >= i1.__.length && i1.__.push({}), i1.__[t1];\n}\nfunction $1a9a8ef576b7773d$export$60241385465d0a34(n1) {\n    return $1a9a8ef576b7773d$var$o = 1, $1a9a8ef576b7773d$export$13e3392192263954($1a9a8ef576b7773d$var$w, n1);\n}\nfunction $1a9a8ef576b7773d$export$13e3392192263954(n2, r2, o1) {\n    var i2 = $1a9a8ef576b7773d$var$m($1a9a8ef576b7773d$var$t++, 2);\n    return i2.t = n2, i2.__c || (i2.__ = [\n        o1 ? o1(r2) : $1a9a8ef576b7773d$var$w(void 0, r2),\n        function(n3) {\n            var t2 = i2.t(i2.__[0], n3);\n            i2.__[0] !== t2 && (i2.__ = [\n                t2,\n                i2.__[1]\n            ], i2.__c.setState({}));\n        }\n    ], i2.__c = $1a9a8ef576b7773d$var$u), i2.__;\n}\nfunction $1a9a8ef576b7773d$export$6d9c69b0de29b591(r3, o2) {\n    var i3 = $1a9a8ef576b7773d$var$m($1a9a8ef576b7773d$var$t++, 3);\n    !(0, $fb96b826c0c5f37a$export$41c562ebe57d11e2).__s && $1a9a8ef576b7773d$var$k(i3.__H, o2) && (i3.__ = r3, i3.__H = o2, $1a9a8ef576b7773d$var$u.__H.__h.push(i3));\n}\nfunction $1a9a8ef576b7773d$export$e5c5a5f917a5871c(r4, o3) {\n    var i4 = $1a9a8ef576b7773d$var$m($1a9a8ef576b7773d$var$t++, 4);\n    !(0, $fb96b826c0c5f37a$export$41c562ebe57d11e2).__s && $1a9a8ef576b7773d$var$k(i4.__H, o3) && (i4.__ = r4, i4.__H = o3, $1a9a8ef576b7773d$var$u.__h.push(i4));\n}\nfunction $1a9a8ef576b7773d$export$b8f5890fc79d6aca(n4) {\n    return $1a9a8ef576b7773d$var$o = 5, $1a9a8ef576b7773d$export$1538c33de8887b59(function() {\n        return {\n            current: n4\n        };\n    }, []);\n}\nfunction $1a9a8ef576b7773d$export$d5a552a76deda3c2(n5, t3, u1) {\n    $1a9a8ef576b7773d$var$o = 6, $1a9a8ef576b7773d$export$e5c5a5f917a5871c(function() {\n        "function" == typeof n5 ? n5(t3()) : n5 && (n5.current = t3());\n    }, null == u1 ? u1 : u1.concat(n5));\n}\nfunction $1a9a8ef576b7773d$export$1538c33de8887b59(n6, u2) {\n    var r5 = $1a9a8ef576b7773d$var$m($1a9a8ef576b7773d$var$t++, 7);\n    return $1a9a8ef576b7773d$var$k(r5.__H, u2) && (r5.__ = n6(), r5.__H = u2, r5.__h = n6), r5.__;\n}\nfunction $1a9a8ef576b7773d$export$35808ee640e87ca7(n7, t4) {\n    return $1a9a8ef576b7773d$var$o = 8, $1a9a8ef576b7773d$export$1538c33de8887b59(function() {\n        return n7;\n    }, t4);\n}\nfunction $1a9a8ef576b7773d$export$fae74005e78b1a27(n8) {\n    var r6 = $1a9a8ef576b7773d$var$u.context[n8.__c], o4 = $1a9a8ef576b7773d$var$m($1a9a8ef576b7773d$var$t++, 9);\n    return o4.c = n8, r6 ? (null == o4.__ && (o4.__ = !0, r6.sub($1a9a8ef576b7773d$var$u)), r6.props.value) : n8.__;\n}\nfunction $1a9a8ef576b7773d$export$dc8fbce3eb94dc1e(t5, u3) {\n    (0, $fb96b826c0c5f37a$export$41c562ebe57d11e2).useDebugValue && (0, $fb96b826c0c5f37a$export$41c562ebe57d11e2).useDebugValue(u3 ? u3(t5) : t5);\n}\nfunction $1a9a8ef576b7773d$export$c052f6604b7d51fe(n9) {\n    var r7 = $1a9a8ef576b7773d$var$m($1a9a8ef576b7773d$var$t++, 10), o5 = $1a9a8ef576b7773d$export$60241385465d0a34();\n    return r7.__ = n9, $1a9a8ef576b7773d$var$u.componentDidCatch || ($1a9a8ef576b7773d$var$u.componentDidCatch = function(n10) {\n        r7.__ && r7.__(n10), o5[1](n10);\n    }), [\n        o5[0],\n        function() {\n            o5[1](void 0);\n        }\n    ];\n}\nfunction $1a9a8ef576b7773d$var$x() {\n    var t6;\n    for($1a9a8ef576b7773d$var$i.sort(function(n11, t7) {\n        return n11.__v.__b - t7.__v.__b;\n    }); t6 = $1a9a8ef576b7773d$var$i.pop();)if (t6.__P) try {\n        t6.__H.__h.forEach($1a9a8ef576b7773d$var$g), t6.__H.__h.forEach($1a9a8ef576b7773d$var$j), t6.__H.__h = [];\n    } catch (u4) {\n        t6.__H.__h = [], (0, $fb96b826c0c5f37a$export$41c562ebe57d11e2).__e(u4, t6.__v);\n    }\n}\n(0, $fb96b826c0c5f37a$export$41c562ebe57d11e2).__b = function(n12) {\n    $1a9a8ef576b7773d$var$u = null, $1a9a8ef576b7773d$var$c && $1a9a8ef576b7773d$var$c(n12);\n}, (0, $fb96b826c0c5f37a$export$41c562ebe57d11e2).__r = function(n13) {\n    $1a9a8ef576b7773d$var$f && $1a9a8ef576b7773d$var$f(n13), $1a9a8ef576b7773d$var$t = 0;\n    var r8 = ($1a9a8ef576b7773d$var$u = n13.__c).__H;\n    r8 && (r8.__h.forEach($1a9a8ef576b7773d$var$g), r8.__h.forEach($1a9a8ef576b7773d$var$j), r8.__h = []);\n}, (0, $fb96b826c0c5f37a$export$41c562ebe57d11e2).diffed = function(t8) {\n    $1a9a8ef576b7773d$var$e && $1a9a8ef576b7773d$var$e(t8);\n    var o6 = t8.__c;\n    o6 && o6.__H && o6.__H.__h.length && (1 !== $1a9a8ef576b7773d$var$i.push(o6) && $1a9a8ef576b7773d$var$r === (0, $fb96b826c0c5f37a$export$41c562ebe57d11e2).requestAnimationFrame || (($1a9a8ef576b7773d$var$r = (0, $fb96b826c0c5f37a$export$41c562ebe57d11e2).requestAnimationFrame) || function(n14) {\n        var t9, u5 = function() {\n            clearTimeout(r9), $1a9a8ef576b7773d$var$b && cancelAnimationFrame(t9), setTimeout(n14);\n        }, r9 = setTimeout(u5, 100);\n        $1a9a8ef576b7773d$var$b && (t9 = requestAnimationFrame(u5));\n    })($1a9a8ef576b7773d$var$x)), $1a9a8ef576b7773d$var$u = null;\n}, (0, $fb96b826c0c5f37a$export$41c562ebe57d11e2).__c = function(t10, u6) {\n    u6.some(function(t11) {\n        try {\n            t11.__h.forEach($1a9a8ef576b7773d$var$g), t11.__h = t11.__h.filter(function(n15) {\n                return !n15.__ || $1a9a8ef576b7773d$var$j(n15);\n            });\n        } catch (r10) {\n            u6.some(function(n16) {\n                n16.__h && (n16.__h = []);\n            }), u6 = [], (0, $fb96b826c0c5f37a$export$41c562ebe57d11e2).__e(r10, t11.__v);\n        }\n    }), $1a9a8ef576b7773d$var$a && $1a9a8ef576b7773d$var$a(t10, u6);\n}, (0, $fb96b826c0c5f37a$export$41c562ebe57d11e2).unmount = function(t12) {\n    $1a9a8ef576b7773d$var$v && $1a9a8ef576b7773d$var$v(t12);\n    var u7, r11 = t12.__c;\n    r11 && r11.__H && (r11.__H.__.forEach(function(n17) {\n        try {\n            $1a9a8ef576b7773d$var$g(n17);\n        } catch (n18) {\n            u7 = n18;\n        }\n    }), u7 && (0, $fb96b826c0c5f37a$export$41c562ebe57d11e2).__e(u7, r11.__v));\n};\nvar $1a9a8ef576b7773d$var$b = "function" == typeof requestAnimationFrame;\nfunction $1a9a8ef576b7773d$var$g(n19) {\n    var t13 = $1a9a8ef576b7773d$var$u, r12 = n19.__c;\n    "function" == typeof r12 && (n19.__c = void 0, r12()), $1a9a8ef576b7773d$var$u = t13;\n}\nfunction $1a9a8ef576b7773d$var$j(n20) {\n    var t14 = $1a9a8ef576b7773d$var$u;\n    n20.__c = n20.__(), $1a9a8ef576b7773d$var$u = t14;\n}\nfunction $1a9a8ef576b7773d$var$k(n21, t15) {\n    return !n21 || n21.length !== t15.length || t15.some(function(t16, u8) {\n        return t16 !== n21[u8];\n    });\n}\nfunction $1a9a8ef576b7773d$var$w(n22, t17) {\n    return "function" == typeof t17 ? t17(n22) : t17;\n}\nfunction $dc040a17866866fa$var$S(n1, t1) {\n    for(var e1 in t1)n1[e1] = t1[e1];\n    return n1;\n}\nfunction $dc040a17866866fa$var$C(n2, t2) {\n    for(var e2 in n2)if ("__source" !== e2 && !(e2 in t2)) return !0;\n    for(var r1 in t2)if ("__source" !== r1 && n2[r1] !== t2[r1]) return !0;\n    return !1;\n}\nfunction $dc040a17866866fa$export$221d75b3f55bb0bd(n3) {\n    this.props = n3;\n}\nfunction $dc040a17866866fa$export$7c73462e0d25e514(n4, t3) {\n    function e3(n5) {\n        var e4 = this.props.ref, r3 = e4 == n5.ref;\n        return !r3 && e4 && (e4.call ? e4(null) : e4.current = null), t3 ? !t3(this.props, n5) || !r3 : $dc040a17866866fa$var$C(this.props, n5);\n    }\n    function r2(t4) {\n        return this.shouldComponentUpdate = e3, (0, $fb96b826c0c5f37a$export$c8a8987d4410bf2d)(n4, t4);\n    }\n    return r2.displayName = "Memo(" + (n4.displayName || n4.name) + ")", r2.prototype.isReactComponent = !0, r2.__f = !0, r2;\n}\n($dc040a17866866fa$export$221d75b3f55bb0bd.prototype = new (0, $fb96b826c0c5f37a$export$16fa2f45be04daa8)).isPureReactComponent = !0, $dc040a17866866fa$export$221d75b3f55bb0bd.prototype.shouldComponentUpdate = function(n6, t5) {\n    return $dc040a17866866fa$var$C(this.props, n6) || $dc040a17866866fa$var$C(this.state, t5);\n};\nvar $dc040a17866866fa$var$w = (0, $fb96b826c0c5f37a$export$41c562ebe57d11e2).__b;\n(0, $fb96b826c0c5f37a$export$41c562ebe57d11e2).__b = function(n7) {\n    n7.type && n7.type.__f && n7.ref && (n7.props.ref = n7.ref, n7.ref = null), $dc040a17866866fa$var$w && $dc040a17866866fa$var$w(n7);\n};\nvar $dc040a17866866fa$var$R = "undefined" != typeof Symbol && Symbol.for && Symbol.for("react.forward_ref") || 3911;\nfunction $dc040a17866866fa$export$257a8862b851cb5b(n8) {\n    function t6(t7, e5) {\n        var r4 = $dc040a17866866fa$var$S({}, t7);\n        return delete r4.ref, n8(r4, (e5 = t7.ref || e5) && ("object" != typeof e5 || "current" in e5) ? e5 : null);\n    }\n    return t6.$$typeof = $dc040a17866866fa$var$R, t6.render = t6, t6.prototype.isReactComponent = t6.__f = !0, t6.displayName = "ForwardRef(" + (n8.displayName || n8.name) + ")", t6;\n}\nvar $dc040a17866866fa$var$N = function(n9, t8) {\n    return null == n9 ? null : (0, $fb96b826c0c5f37a$export$47e4c5b300681277)((0, $fb96b826c0c5f37a$export$47e4c5b300681277)(n9).map(t8));\n}, $dc040a17866866fa$export$dca3b0875bd9a954 = {\n    map: $dc040a17866866fa$var$N,\n    forEach: $dc040a17866866fa$var$N,\n    count: function(n10) {\n        return n10 ? (0, $fb96b826c0c5f37a$export$47e4c5b300681277)(n10).length : 0;\n    },\n    only: function(n11) {\n        var t9 = (0, $fb96b826c0c5f37a$export$47e4c5b300681277)(n11);\n        if (1 !== t9.length) throw "Children.only";\n        return t9[0];\n    },\n    toArray: (0, $fb96b826c0c5f37a$export$47e4c5b300681277)\n}, $dc040a17866866fa$var$A = (0, $fb96b826c0c5f37a$export$41c562ebe57d11e2).__e;\n(0, $fb96b826c0c5f37a$export$41c562ebe57d11e2).__e = function(n12, t10, e6) {\n    if (n12.then) {\n        for(var r5, u1 = t10; u1 = u1.__;)if ((r5 = u1.__c) && r5.__c) return null == t10.__e && (t10.__e = e6.__e, t10.__k = e6.__k), r5.__c(n12, t10);\n    }\n    $dc040a17866866fa$var$A(n12, t10, e6);\n};\nvar $dc040a17866866fa$var$O = (0, $fb96b826c0c5f37a$export$41c562ebe57d11e2).unmount;\nfunction $dc040a17866866fa$export$74bf444e3cd11ea5() {\n    this.__u = 0, this.t = null, this.__b = null;\n}\nfunction $dc040a17866866fa$var$U(n13) {\n    var t11 = n13.__.__c;\n    return t11 && t11.__e && t11.__e(n13);\n}\nfunction $dc040a17866866fa$export$488013bae63b21da(n14) {\n    var t12, e7, r6;\n    function u2(u3) {\n        if (t12 || (t12 = n14()).then(function(n15) {\n            e7 = n15.default || n15;\n        }, function(n16) {\n            r6 = n16;\n        }), r6) throw r6;\n        if (!e7) throw t12;\n        return (0, $fb96b826c0c5f37a$export$c8a8987d4410bf2d)(e7, u3);\n    }\n    return u2.displayName = "Lazy", u2.__f = !0, u2;\n}\nfunction $dc040a17866866fa$export$998bcd577473dd93() {\n    this.u = null, this.o = null;\n}\n(0, $fb96b826c0c5f37a$export$41c562ebe57d11e2).unmount = function(n17) {\n    var t13 = n17.__c;\n    t13 && t13.__R && t13.__R(), t13 && !0 === n17.__h && (n17.type = null), $dc040a17866866fa$var$O && $dc040a17866866fa$var$O(n17);\n}, ($dc040a17866866fa$export$74bf444e3cd11ea5.prototype = new (0, $fb96b826c0c5f37a$export$16fa2f45be04daa8)).__c = function(n18, t14) {\n    var e8 = t14.__c, r7 = this;\n    null == r7.t && (r7.t = []), r7.t.push(e8);\n    var u4 = $dc040a17866866fa$var$U(r7.__v), o1 = !1, i1 = function() {\n        o1 || (o1 = !0, e8.__R = null, u4 ? u4(l1) : l1());\n    };\n    e8.__R = i1;\n    var l1 = function() {\n        if (!--r7.__u) {\n            if (r7.state.__e) {\n                var n19 = r7.state.__e;\n                r7.__v.__k[0] = function n22(t17, e9, r8) {\n                    return t17 && (t17.__v = null, t17.__k = t17.__k && t17.__k.map(function(t18) {\n                        return n22(t18, e9, r8);\n                    }), t17.__c && t17.__c.__P === e9 && (t17.__e && r8.insertBefore(t17.__e, t17.__d), t17.__c.__e = !0, t17.__c.__P = r8)), t17;\n                }(n19, n19.__c.__P, n19.__c.__O);\n            }\n            var t15;\n            for(r7.setState({\n                __e: r7.__b = null\n            }); t15 = r7.t.pop();)t15.forceUpdate();\n        }\n    }, c1 = !0 === t14.__h;\n    r7.__u++ || c1 || r7.setState({\n        __e: r7.__b = r7.__v.__k[0]\n    }), n18.then(i1, i1);\n}, $dc040a17866866fa$export$74bf444e3cd11ea5.prototype.componentWillUnmount = function() {\n    this.t = [];\n}, $dc040a17866866fa$export$74bf444e3cd11ea5.prototype.render = function(n23, t19) {\n    if (this.__b) {\n        if (this.__v.__k) {\n            var e10 = document.createElement("div"), r9 = this.__v.__k[0].__c;\n            this.__v.__k[0] = function n24(t20, e13, r12) {\n                return t20 && (t20.__c && t20.__c.__H && (t20.__c.__H.__.forEach(function(n25) {\n                    "function" == typeof n25.__c && n25.__c();\n                }), t20.__c.__H = null), null != (t20 = $dc040a17866866fa$var$S({}, t20)).__c && (t20.__c.__P === r12 && (t20.__c.__P = e13), t20.__c = null), t20.__k = t20.__k && t20.__k.map(function(t21) {\n                    return n24(t21, e13, r12);\n                })), t20;\n            }(this.__b, e10, r9.__O = r9.__P);\n        }\n        this.__b = null;\n    }\n    var u5 = t19.__e && (0, $fb96b826c0c5f37a$export$c8a8987d4410bf2d)((0, $fb96b826c0c5f37a$export$ffb0004e005737fa), null, n23.fallback);\n    return u5 && (u5.__h = null), [\n        (0, $fb96b826c0c5f37a$export$c8a8987d4410bf2d)((0, $fb96b826c0c5f37a$export$ffb0004e005737fa), null, t19.__e ? null : n23.children),\n        u5\n    ];\n};\nvar $dc040a17866866fa$var$T = function(n26, t22, e14) {\n    if (++e14[1] === e14[0] && n26.o.delete(t22), n26.props.revealOrder && ("t" !== n26.props.revealOrder[0] || !n26.o.size)) for(e14 = n26.u; e14;){\n        for(; e14.length > 3;)e14.pop()();\n        if (e14[1] < e14[0]) break;\n        n26.u = e14 = e14[2];\n    }\n};\nfunction $dc040a17866866fa$var$D(n27) {\n    return this.getChildContext = function() {\n        return n27.context;\n    }, n27.children;\n}\nfunction $dc040a17866866fa$var$I(n28) {\n    var t23 = this, e15 = n28.i;\n    t23.componentWillUnmount = function() {\n        (0, $fb96b826c0c5f37a$export$b3890eb0ae9dca99)(null, t23.l), t23.l = null, t23.i = null;\n    }, t23.i && t23.i !== e15 && t23.componentWillUnmount(), n28.__v ? (t23.l || (t23.i = e15, t23.l = {\n        nodeType: 1,\n        parentNode: e15,\n        childNodes: [],\n        appendChild: function(n29) {\n            this.childNodes.push(n29), t23.i.appendChild(n29);\n        },\n        insertBefore: function(n30, e) {\n            this.childNodes.push(n30), t23.i.appendChild(n30);\n        },\n        removeChild: function(n31) {\n            this.childNodes.splice(this.childNodes.indexOf(n31) >>> 1, 1), t23.i.removeChild(n31);\n        }\n    }), (0, $fb96b826c0c5f37a$export$b3890eb0ae9dca99)((0, $fb96b826c0c5f37a$export$c8a8987d4410bf2d)($dc040a17866866fa$var$D, {\n        context: t23.context\n    }, n28.__v), t23.l)) : t23.l && t23.componentWillUnmount();\n}\nfunction $dc040a17866866fa$export$d39a5bbd09211389(n32, t24) {\n    return (0, $fb96b826c0c5f37a$export$c8a8987d4410bf2d)($dc040a17866866fa$var$I, {\n        __v: n32,\n        i: t24\n    });\n}\n($dc040a17866866fa$export$998bcd577473dd93.prototype = new (0, $fb96b826c0c5f37a$export$16fa2f45be04daa8)).__e = function(n33) {\n    var t25 = this, e16 = $dc040a17866866fa$var$U(t25.__v), r13 = t25.o.get(n33);\n    return r13[0]++, function(u6) {\n        var o2 = function() {\n            t25.props.revealOrder ? (r13.push(u6), $dc040a17866866fa$var$T(t25, n33, r13)) : u6();\n        };\n        e16 ? e16(o2) : o2();\n    };\n}, $dc040a17866866fa$export$998bcd577473dd93.prototype.render = function(n34) {\n    this.u = null, this.o = new Map;\n    var t26 = (0, $fb96b826c0c5f37a$export$47e4c5b300681277)(n34.children);\n    n34.revealOrder && "b" === n34.revealOrder[0] && t26.reverse();\n    for(var e17 = t26.length; e17--;)this.o.set(t26[e17], this.u = [\n        1,\n        0,\n        this.u\n    ]);\n    return n34.children;\n}, $dc040a17866866fa$export$998bcd577473dd93.prototype.componentDidUpdate = $dc040a17866866fa$export$998bcd577473dd93.prototype.componentDidMount = function() {\n    var n35 = this;\n    this.o.forEach(function(t27, e18) {\n        $dc040a17866866fa$var$T(n35, e18, t27);\n    });\n};\nvar $dc040a17866866fa$var$j = "undefined" != typeof Symbol && Symbol.for && Symbol.for("react.element") || 60103, $dc040a17866866fa$var$P = /^(?:accent|alignment|arabic|baseline|cap|clip(?!PathU)|color|dominant|fill|flood|font|glyph(?!R)|horiz|marker(?!H|W|U)|overline|paint|stop|strikethrough|stroke|text(?!L)|underline|unicode|units|v|vector|vert|word|writing|x(?!C))[A-Z]/, $dc040a17866866fa$var$V = "undefined" != typeof document, $dc040a17866866fa$var$z = function(n36) {\n    return ("undefined" != typeof Symbol && "symbol" == typeof Symbol() ? /fil|che|rad/i : /fil|che|ra/i).test(n36);\n};\nfunction $dc040a17866866fa$export$b3890eb0ae9dca99(n37, t28, e19) {\n    return null == t28.__k && (t28.textContent = ""), (0, $fb96b826c0c5f37a$export$b3890eb0ae9dca99)(n37, t28), "function" == typeof e19 && e19(), n37 ? n37.__c : null;\n}\nfunction $dc040a17866866fa$export$fa8d919ba61d84db(n38, t29, e20) {\n    return (0, $fb96b826c0c5f37a$export$fa8d919ba61d84db)(n38, t29), "function" == typeof e20 && e20(), n38 ? n38.__c : null;\n}\n(0, $fb96b826c0c5f37a$export$16fa2f45be04daa8).prototype.isReactComponent = {}, [\n    "componentWillMount",\n    "componentWillReceiveProps",\n    "componentWillUpdate"\n].forEach(function(n39) {\n    Object.defineProperty((0, $fb96b826c0c5f37a$export$16fa2f45be04daa8).prototype, n39, {\n        configurable: !0,\n        get: function() {\n            return this["UNSAFE_" + n39];\n        },\n        set: function(t30) {\n            Object.defineProperty(this, n39, {\n                configurable: !0,\n                writable: !0,\n                value: t30\n            });\n        }\n    });\n});\nvar $dc040a17866866fa$var$H = (0, $fb96b826c0c5f37a$export$41c562ebe57d11e2).event;\nfunction $dc040a17866866fa$var$Z() {}\nfunction $dc040a17866866fa$var$Y() {\n    return this.cancelBubble;\n}\nfunction $dc040a17866866fa$var$q() {\n    return this.defaultPrevented;\n}\n(0, $fb96b826c0c5f37a$export$41c562ebe57d11e2).event = function(n40) {\n    return $dc040a17866866fa$var$H && (n40 = $dc040a17866866fa$var$H(n40)), n40.persist = $dc040a17866866fa$var$Z, n40.isPropagationStopped = $dc040a17866866fa$var$Y, n40.isDefaultPrevented = $dc040a17866866fa$var$q, n40.nativeEvent = n40;\n};\nvar $dc040a17866866fa$var$G, $dc040a17866866fa$var$J = {\n    configurable: !0,\n    get: function() {\n        return this.class;\n    }\n}, $dc040a17866866fa$var$K = (0, $fb96b826c0c5f37a$export$41c562ebe57d11e2).vnode;\n(0, $fb96b826c0c5f37a$export$41c562ebe57d11e2).vnode = function(n41) {\n    var t31 = n41.type, e21 = n41.props, r14 = e21;\n    if ("string" == typeof t31) {\n        var u7 = -1 === t31.indexOf("-");\n        for(var o3 in r14 = {}, e21){\n            var i2 = e21[o3];\n            $dc040a17866866fa$var$V && "children" === o3 && "noscript" === t31 || "value" === o3 && "defaultValue" in e21 && null == i2 || ("defaultValue" === o3 && "value" in e21 && null == e21.value ? o3 = "value" : "download" === o3 && !0 === i2 ? i2 = "" : /ondoubleclick/i.test(o3) ? o3 = "ondblclick" : /^onchange(textarea|input)/i.test(o3 + t31) && !$dc040a17866866fa$var$z(e21.type) ? o3 = "oninput" : /^onfocus$/i.test(o3) ? o3 = "onfocusin" : /^onblur$/i.test(o3) ? o3 = "onfocusout" : /^on(Ani|Tra|Tou|BeforeInp)/.test(o3) ? o3 = o3.toLowerCase() : u7 && $dc040a17866866fa$var$P.test(o3) ? o3 = o3.replace(/[A-Z0-9]/, "-$&").toLowerCase() : null === i2 && (i2 = void 0), r14[o3] = i2);\n        }\n        "select" == t31 && r14.multiple && Array.isArray(r14.value) && (r14.value = (0, $fb96b826c0c5f37a$export$47e4c5b300681277)(e21.children).forEach(function(n42) {\n            n42.props.selected = -1 != r14.value.indexOf(n42.props.value);\n        })), "select" == t31 && null != r14.defaultValue && (r14.value = (0, $fb96b826c0c5f37a$export$47e4c5b300681277)(e21.children).forEach(function(n43) {\n            n43.props.selected = r14.multiple ? -1 != r14.defaultValue.indexOf(n43.props.value) : r14.defaultValue == n43.props.value;\n        })), n41.props = r14, e21.class != e21.className && ($dc040a17866866fa$var$J.enumerable = "className" in e21, null != e21.className && (r14.class = e21.className), Object.defineProperty(r14, "className", $dc040a17866866fa$var$J));\n    }\n    n41.$$typeof = $dc040a17866866fa$var$j, $dc040a17866866fa$var$K && $dc040a17866866fa$var$K(n41);\n};\nvar $dc040a17866866fa$var$Q = (0, $fb96b826c0c5f37a$export$41c562ebe57d11e2).__r;\n(0, $fb96b826c0c5f37a$export$41c562ebe57d11e2).__r = function(n44) {\n    $dc040a17866866fa$var$Q && $dc040a17866866fa$var$Q(n44), $dc040a17866866fa$var$G = n44.__c;\n};\nvar $dc040a17866866fa$export$ae55be85d98224ed = {\n    ReactCurrentDispatcher: {\n        current: {\n            readContext: function(n45) {\n                return $dc040a17866866fa$var$G.__n[n45.__c].props.value;\n            }\n        }\n    }\n}, $dc040a17866866fa$export$83d89fbfd8236492 = "17.0.2";\nfunction $dc040a17866866fa$export$d38cd72104c1f0e9(n46) {\n    return (0, $fb96b826c0c5f37a$export$c8a8987d4410bf2d).bind(null, n46);\n}\nfunction $dc040a17866866fa$export$a8257692ac88316c(n47) {\n    return !!n47 && n47.$$typeof === $dc040a17866866fa$var$j;\n}\nfunction $dc040a17866866fa$export$e530037191fcd5d7(n48) {\n    return $dc040a17866866fa$export$a8257692ac88316c(n48) ? (0, $fb96b826c0c5f37a$export$e530037191fcd5d7).apply(null, arguments) : n48;\n}\nfunction $dc040a17866866fa$export$502457920280e6be(n49) {\n    return !!n49.__k && ((0, $fb96b826c0c5f37a$export$b3890eb0ae9dca99)(null, n49), !0);\n}\nfunction $dc040a17866866fa$export$466bfc07425424d5(n50) {\n    return n50 && (n50.base || 1 === n50.nodeType && n50) || null;\n}\nvar $dc040a17866866fa$export$c78a37762a8d58e1 = function(n51, t32) {\n    return n51(t32);\n}, $dc040a17866866fa$export$cd75ccfd720a3cd4 = function(n52, t33) {\n    return n52(t33);\n}, $dc040a17866866fa$export$5f8d39834fd61797 = (0, $fb96b826c0c5f37a$export$ffb0004e005737fa);\nvar $dc040a17866866fa$export$2e2bcd8739ae039 = {\n    useState: (0, $1a9a8ef576b7773d$export$60241385465d0a34),\n    useReducer: (0, $1a9a8ef576b7773d$export$13e3392192263954),\n    useEffect: (0, $1a9a8ef576b7773d$export$6d9c69b0de29b591),\n    useLayoutEffect: (0, $1a9a8ef576b7773d$export$e5c5a5f917a5871c),\n    useRef: (0, $1a9a8ef576b7773d$export$b8f5890fc79d6aca),\n    useImperativeHandle: (0, $1a9a8ef576b7773d$export$d5a552a76deda3c2),\n    useMemo: (0, $1a9a8ef576b7773d$export$1538c33de8887b59),\n    useCallback: (0, $1a9a8ef576b7773d$export$35808ee640e87ca7),\n    useContext: (0, $1a9a8ef576b7773d$export$fae74005e78b1a27),\n    useDebugValue: (0, $1a9a8ef576b7773d$export$dc8fbce3eb94dc1e),\n    version: "17.0.2",\n    Children: $dc040a17866866fa$export$dca3b0875bd9a954,\n    render: $dc040a17866866fa$export$b3890eb0ae9dca99,\n    hydrate: $dc040a17866866fa$export$fa8d919ba61d84db,\n    unmountComponentAtNode: $dc040a17866866fa$export$502457920280e6be,\n    createPortal: $dc040a17866866fa$export$d39a5bbd09211389,\n    createElement: (0, $fb96b826c0c5f37a$export$c8a8987d4410bf2d),\n    createContext: (0, $fb96b826c0c5f37a$export$fd42f52fd3ae1109),\n    createFactory: $dc040a17866866fa$export$d38cd72104c1f0e9,\n    cloneElement: $dc040a17866866fa$export$e530037191fcd5d7,\n    createRef: (0, $fb96b826c0c5f37a$export$7d1e3a5e95ceca43),\n    Fragment: (0, $fb96b826c0c5f37a$export$ffb0004e005737fa),\n    isValidElement: $dc040a17866866fa$export$a8257692ac88316c,\n    findDOMNode: $dc040a17866866fa$export$466bfc07425424d5,\n    Component: (0, $fb96b826c0c5f37a$export$16fa2f45be04daa8),\n    PureComponent: $dc040a17866866fa$export$221d75b3f55bb0bd,\n    memo: $dc040a17866866fa$export$7c73462e0d25e514,\n    forwardRef: $dc040a17866866fa$export$257a8862b851cb5b,\n    flushSync: $dc040a17866866fa$export$cd75ccfd720a3cd4,\n    unstable_batchedUpdates: $dc040a17866866fa$export$c78a37762a8d58e1,\n    StrictMode: (0, $fb96b826c0c5f37a$export$ffb0004e005737fa),\n    Suspense: $dc040a17866866fa$export$74bf444e3cd11ea5,\n    SuspenseList: $dc040a17866866fa$export$998bcd577473dd93,\n    lazy: $dc040a17866866fa$export$488013bae63b21da,\n    __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: $dc040a17866866fa$export$ae55be85d98224ed\n};\nconst $ec8c39fdad15601a$var$THEME_ICONS = {\n    light: "outline",\n    dark: "solid"\n};\nclass $ec8c39fdad15601a$export$2e2bcd8739ae039 extends (0, $dc040a17866866fa$export$221d75b3f55bb0bd) {\n    renderIcon(category) {\n        const { icon: icon } = category;\n        if (icon) {\n            if (icon.svg) return /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("span", {\n                class: "flex",\n                dangerouslySetInnerHTML: {\n                    __html: icon.svg\n                }\n            });\n            if (icon.src) return /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("img", {\n                src: icon.src\n            });\n        }\n        const categoryIcons = (0, $fcccfb36ed0cde68$export$2e2bcd8739ae039).categories[category.id] || (0, $fcccfb36ed0cde68$export$2e2bcd8739ae039).categories.custom;\n        const style = this.props.icons == "auto" ? $ec8c39fdad15601a$var$THEME_ICONS[this.props.theme] : this.props.icons;\n        return categoryIcons[style] || categoryIcons;\n    }\n    render() {\n        let selectedCategoryIndex = null;\n        return /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("nav", {\n            id: "nav",\n            class: "padding",\n            "data-position": this.props.position,\n            dir: this.props.dir,\n            children: /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("div", {\n                class: "flex relative",\n                children: [\n                    this.categories.map((category, i)=>{\n                        const title = category.name || (0, $7adb23b0109cc36a$export$dbe3113d60765c1a).categories[category.id];\n                        const selected = !this.props.unfocused && category.id == this.state.categoryId;\n                        if (selected) selectedCategoryIndex = i;\n                        return /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("button", {\n                            "aria-label": title,\n                            "aria-selected": selected || undefined,\n                            title: title,\n                            type: "button",\n                            class: "flex flex-grow flex-center",\n                            onMouseDown: (e)=>e.preventDefault(),\n                            onClick: ()=>{\n                                this.props.onClick({\n                                    category: category,\n                                    i: i\n                                });\n                            },\n                            children: this.renderIcon(category)\n                        });\n                    }),\n                    /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("div", {\n                        class: "bar",\n                        style: {\n                            width: `${100 / this.categories.length}%`,\n                            opacity: selectedCategoryIndex == null ? 0 : 1,\n                            transform: this.props.dir === "rtl" ? `scaleX(-1) translateX(${selectedCategoryIndex * 100}%)` : `translateX(${selectedCategoryIndex * 100}%)`\n                        }\n                    })\n                ]\n            })\n        });\n    }\n    constructor(){\n        super();\n        this.categories = (0, $7adb23b0109cc36a$export$2d0294657ab35f1b).categories.filter((category)=>{\n            return !category.target;\n        });\n        this.state = {\n            categoryId: this.categories[0].id\n        };\n    }\n}\nclass $e0d4dda61265ff1e$export$2e2bcd8739ae039 extends (0, $dc040a17866866fa$export$221d75b3f55bb0bd) {\n    shouldComponentUpdate(nextProps) {\n        for(let k in nextProps){\n            if (k == "children") continue;\n            if (nextProps[k] != this.props[k]) return true;\n        }\n        return false;\n    }\n    render() {\n        return this.props.children;\n    }\n}\nconst $89bd6bb200cc8fef$var$Performance = {\n    rowsPerRender: 10\n};\nclass $89bd6bb200cc8fef$export$2e2bcd8739ae039 extends (0, $fb96b826c0c5f37a$export$16fa2f45be04daa8) {\n    getInitialState(props = this.props) {\n        return {\n            skin: (0, $f72b75cf796873c7$export$2e2bcd8739ae039).get("skin") || props.skin,\n            theme: this.initTheme(props.theme)\n        };\n    }\n    componentWillMount() {\n        this.dir = (0, $7adb23b0109cc36a$export$dbe3113d60765c1a).rtl ? "rtl" : "ltr";\n        this.refs = {\n            menu: (0, $fb96b826c0c5f37a$export$7d1e3a5e95ceca43)(),\n            navigation: (0, $fb96b826c0c5f37a$export$7d1e3a5e95ceca43)(),\n            scroll: (0, $fb96b826c0c5f37a$export$7d1e3a5e95ceca43)(),\n            search: (0, $fb96b826c0c5f37a$export$7d1e3a5e95ceca43)(),\n            searchInput: (0, $fb96b826c0c5f37a$export$7d1e3a5e95ceca43)(),\n            skinToneButton: (0, $fb96b826c0c5f37a$export$7d1e3a5e95ceca43)(),\n            skinToneRadio: (0, $fb96b826c0c5f37a$export$7d1e3a5e95ceca43)()\n        };\n        this.initGrid();\n        if (this.props.stickySearch == false && this.props.searchPosition == "sticky") {\n            console.warn("[EmojiMart] Deprecation warning: `stickySearch` has been renamed `searchPosition`.");\n            this.props.searchPosition = "static";\n        }\n    }\n    componentDidMount() {\n        this.register();\n        this.shadowRoot = this.base.parentNode;\n        if (this.props.autoFocus) {\n            const { searchInput: searchInput } = this.refs;\n            if (searchInput.current) searchInput.current.focus();\n        }\n    }\n    componentWillReceiveProps(nextProps) {\n        this.nextState || (this.nextState = {});\n        for(const k1 in nextProps)this.nextState[k1] = nextProps[k1];\n        clearTimeout(this.nextStateTimer);\n        this.nextStateTimer = setTimeout(()=>{\n            let requiresGridReset = false;\n            for(const k in this.nextState){\n                this.props[k] = this.nextState[k];\n                if (k === "custom" || k === "categories") requiresGridReset = true;\n            }\n            delete this.nextState;\n            const nextState = this.getInitialState();\n            if (requiresGridReset) return this.reset(nextState);\n            this.setState(nextState);\n        });\n    }\n    componentWillUnmount() {\n        this.unregister();\n    }\n    async reset(nextState = {}) {\n        await (0, $7adb23b0109cc36a$export$2cd8252107eb640b)(this.props);\n        this.initGrid();\n        this.unobserve();\n        this.setState(nextState, ()=>{\n            this.observeCategories();\n            this.observeRows();\n        });\n    }\n    register() {\n        document.addEventListener("click", this.handleClickOutside);\n        this.observe();\n    }\n    unregister() {\n        document.removeEventListener("click", this.handleClickOutside);\n        this.unobserve();\n    }\n    observe() {\n        this.observeCategories();\n        this.observeRows();\n    }\n    unobserve({ except: except = [] } = {}) {\n        if (!Array.isArray(except)) except = [\n            except\n        ];\n        for (const observer of this.observers){\n            if (except.includes(observer)) continue;\n            observer.disconnect();\n        }\n        this.observers = [].concat(except);\n    }\n    initGrid() {\n        const { categories: categories } = (0, $7adb23b0109cc36a$export$2d0294657ab35f1b);\n        this.refs.categories = new Map();\n        const navKey = (0, $7adb23b0109cc36a$export$2d0294657ab35f1b).categories.map((category)=>category.id).join(",");\n        if (this.navKey && this.navKey != navKey) this.refs.scroll.current && (this.refs.scroll.current.scrollTop = 0);\n        this.navKey = navKey;\n        this.grid = [];\n        this.grid.setsize = 0;\n        const addRow = (rows, category)=>{\n            const row = [];\n            row.__categoryId = category.id;\n            row.__index = rows.length;\n            this.grid.push(row);\n            const rowIndex = this.grid.length - 1;\n            const rowRef = rowIndex % $89bd6bb200cc8fef$var$Performance.rowsPerRender ? {} : (0, $fb96b826c0c5f37a$export$7d1e3a5e95ceca43)();\n            rowRef.index = rowIndex;\n            rowRef.posinset = this.grid.setsize + 1;\n            rows.push(rowRef);\n            return row;\n        };\n        for (let category1 of categories){\n            const rows = [];\n            let row = addRow(rows, category1);\n            for (let emoji of category1.emojis){\n                if (row.length == this.getPerLine()) row = addRow(rows, category1);\n                this.grid.setsize += 1;\n                row.push(emoji);\n            }\n            this.refs.categories.set(category1.id, {\n                root: (0, $fb96b826c0c5f37a$export$7d1e3a5e95ceca43)(),\n                rows: rows\n            });\n        }\n    }\n    initTheme(theme) {\n        if (theme != "auto") return theme;\n        if (!this.darkMedia) {\n            this.darkMedia = matchMedia("(prefers-color-scheme: dark)");\n            if (this.darkMedia.media.match(/^not/)) return "light";\n            this.darkMedia.addListener(()=>{\n                if (this.props.theme != "auto") return;\n                this.setState({\n                    theme: this.darkMedia.matches ? "dark" : "light"\n                });\n            });\n        }\n        return this.darkMedia.matches ? "dark" : "light";\n    }\n    initDynamicPerLine(props = this.props) {\n        if (!props.dynamicWidth) return;\n        const { element: element, emojiButtonSize: emojiButtonSize } = props;\n        const calculatePerLine = ()=>{\n            const { width: width } = element.getBoundingClientRect();\n            return Math.floor(width / emojiButtonSize);\n        };\n        const observer = new ResizeObserver(()=>{\n            this.unobserve({\n                except: observer\n            });\n            this.setState({\n                perLine: calculatePerLine()\n            }, ()=>{\n                this.initGrid();\n                this.forceUpdate(()=>{\n                    this.observeCategories();\n                    this.observeRows();\n                });\n            });\n        });\n        observer.observe(element);\n        this.observers.push(observer);\n        return calculatePerLine();\n    }\n    getPerLine() {\n        return this.state.perLine || this.props.perLine;\n    }\n    getEmojiByPos([p1, p2]) {\n        const grid = this.state.searchResults || this.grid;\n        const emoji = grid[p1] && grid[p1][p2];\n        if (!emoji) return;\n        return (0, $c4d155af13ad4d4b$export$2e2bcd8739ae039).get(emoji);\n    }\n    observeCategories() {\n        const navigation = this.refs.navigation.current;\n        if (!navigation) return;\n        const visibleCategories = new Map();\n        const setFocusedCategory = (categoryId)=>{\n            if (categoryId != navigation.state.categoryId) navigation.setState({\n                categoryId: categoryId\n            });\n        };\n        const observerOptions = {\n            root: this.refs.scroll.current,\n            threshold: [\n                0.0,\n                1.0\n            ]\n        };\n        const observer = new IntersectionObserver((entries)=>{\n            for (const entry of entries){\n                const id = entry.target.dataset.id;\n                visibleCategories.set(id, entry.intersectionRatio);\n            }\n            const ratios = [\n                ...visibleCategories\n            ];\n            for (const [id, ratio] of ratios)if (ratio) {\n                setFocusedCategory(id);\n                break;\n            }\n        }, observerOptions);\n        for (const { root: root } of this.refs.categories.values())observer.observe(root.current);\n        this.observers.push(observer);\n    }\n    observeRows() {\n        const visibleRows = {\n            ...this.state.visibleRows\n        };\n        const observer = new IntersectionObserver((entries)=>{\n            for (const entry of entries){\n                const index = parseInt(entry.target.dataset.index);\n                if (entry.isIntersecting) visibleRows[index] = true;\n                else delete visibleRows[index];\n            }\n            this.setState({\n                visibleRows: visibleRows\n            });\n        }, {\n            root: this.refs.scroll.current,\n            rootMargin: `${this.props.emojiButtonSize * ($89bd6bb200cc8fef$var$Performance.rowsPerRender + 5)}px 0px ${this.props.emojiButtonSize * $89bd6bb200cc8fef$var$Performance.rowsPerRender}px`\n        });\n        for (const { rows: rows } of this.refs.categories.values()){\n            for (const row of rows)if (row.current) observer.observe(row.current);\n        }\n        this.observers.push(observer);\n    }\n    preventDefault(e) {\n        e.preventDefault();\n    }\n    unfocusSearch() {\n        const input = this.refs.searchInput.current;\n        if (!input) return;\n        input.blur();\n    }\n    navigate({ e: e, input: input, left: left, right: right, up: up, down: down }) {\n        const grid = this.state.searchResults || this.grid;\n        if (!grid.length) return;\n        let [p1, p2] = this.state.pos;\n        const pos = (()=>{\n            if (p1 == 0) {\n                if (p2 == 0 && !e.repeat && (left || up)) return null;\n            }\n            if (p1 == -1) {\n                if (!e.repeat && (right || down) && input.selectionStart == input.value.length) return [\n                    0,\n                    0\n                ];\n                return null;\n            }\n            if (left || right) {\n                let row = grid[p1];\n                const increment = left ? -1 : 1;\n                p2 += increment;\n                if (!row[p2]) {\n                    p1 += increment;\n                    row = grid[p1];\n                    if (!row) {\n                        p1 = left ? 0 : grid.length - 1;\n                        p2 = left ? 0 : grid[p1].length - 1;\n                        return [\n                            p1,\n                            p2\n                        ];\n                    }\n                    p2 = left ? row.length - 1 : 0;\n                }\n                return [\n                    p1,\n                    p2\n                ];\n            }\n            if (up || down) {\n                p1 += up ? -1 : 1;\n                const row = grid[p1];\n                if (!row) {\n                    p1 = up ? 0 : grid.length - 1;\n                    p2 = up ? 0 : grid[p1].length - 1;\n                    return [\n                        p1,\n                        p2\n                    ];\n                }\n                if (!row[p2]) p2 = row.length - 1;\n                return [\n                    p1,\n                    p2\n                ];\n            }\n        })();\n        if (pos) e.preventDefault();\n        else {\n            if (this.state.pos[0] > -1) this.setState({\n                pos: [\n                    -1,\n                    -1\n                ]\n            });\n            return;\n        }\n        this.setState({\n            pos: pos,\n            keyboard: true\n        }, ()=>{\n            this.scrollTo({\n                row: pos[0]\n            });\n        });\n    }\n    scrollTo({ categoryId: categoryId, row: row }) {\n        const grid = this.state.searchResults || this.grid;\n        if (!grid.length) return;\n        const scroll = this.refs.scroll.current;\n        const scrollRect = scroll.getBoundingClientRect();\n        let scrollTop = 0;\n        if (row >= 0) categoryId = grid[row].__categoryId;\n        if (categoryId) {\n            const ref = this.refs[categoryId] || this.refs.categories.get(categoryId).root;\n            const categoryRect = ref.current.getBoundingClientRect();\n            scrollTop = categoryRect.top - (scrollRect.top - scroll.scrollTop) + 1;\n        }\n        if (row >= 0) {\n            if (!row) scrollTop = 0;\n            else {\n                const rowIndex = grid[row].__index;\n                const rowTop = scrollTop + rowIndex * this.props.emojiButtonSize;\n                const rowBot = rowTop + this.props.emojiButtonSize + this.props.emojiButtonSize * 0.88;\n                if (rowTop < scroll.scrollTop) scrollTop = rowTop;\n                else if (rowBot > scroll.scrollTop + scrollRect.height) scrollTop = rowBot - scrollRect.height;\n                else return;\n            }\n        }\n        this.ignoreMouse();\n        scroll.scrollTop = scrollTop;\n    }\n    ignoreMouse() {\n        this.mouseIsIgnored = true;\n        clearTimeout(this.ignoreMouseTimer);\n        this.ignoreMouseTimer = setTimeout(()=>{\n            delete this.mouseIsIgnored;\n        }, 100);\n    }\n    handleEmojiOver(pos) {\n        if (this.mouseIsIgnored || this.state.showSkins) return;\n        this.setState({\n            pos: pos || [\n                -1,\n                -1\n            ],\n            keyboard: false\n        });\n    }\n    handleEmojiClick({ e: e, emoji: emoji, pos: pos }) {\n        if (!this.props.onEmojiSelect) return;\n        if (!emoji && pos) emoji = this.getEmojiByPos(pos);\n        if (emoji) {\n            const emojiData = (0, $693b183b0a78708f$export$d10ac59fbe52a745)(emoji, {\n                skinIndex: this.state.skin - 1\n            });\n            if (this.props.maxFrequentRows) (0, $b22cfd0a55410b4f$export$2e2bcd8739ae039).add(emojiData, this.props);\n            this.props.onEmojiSelect(emojiData, e);\n        }\n    }\n    closeSkins() {\n        if (!this.state.showSkins) return;\n        this.setState({\n            showSkins: null,\n            tempSkin: null\n        });\n        this.base.removeEventListener("click", this.handleBaseClick);\n        this.base.removeEventListener("keydown", this.handleBaseKeydown);\n    }\n    handleSkinMouseOver(tempSkin) {\n        this.setState({\n            tempSkin: tempSkin\n        });\n    }\n    handleSkinClick(skin) {\n        this.ignoreMouse();\n        this.closeSkins();\n        this.setState({\n            skin: skin,\n            tempSkin: null\n        });\n        (0, $f72b75cf796873c7$export$2e2bcd8739ae039).set("skin", skin);\n    }\n    renderNav() {\n        return /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)((0, $ec8c39fdad15601a$export$2e2bcd8739ae039), {\n            ref: this.refs.navigation,\n            icons: this.props.icons,\n            theme: this.state.theme,\n            dir: this.dir,\n            unfocused: !!this.state.searchResults,\n            position: this.props.navPosition,\n            onClick: this.handleCategoryClick\n        }, this.navKey);\n    }\n    renderPreview() {\n        const emoji = this.getEmojiByPos(this.state.pos);\n        const noSearchResults = this.state.searchResults && !this.state.searchResults.length;\n        return /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("div", {\n            id: "preview",\n            class: "flex flex-middle",\n            dir: this.dir,\n            "data-position": this.props.previewPosition,\n            children: [\n                /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("div", {\n                    class: "flex flex-middle flex-grow",\n                    children: [\n                        /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("div", {\n                            class: "flex flex-auto flex-middle flex-center",\n                            style: {\n                                height: this.props.emojiButtonSize,\n                                fontSize: this.props.emojiButtonSize\n                            },\n                            children: /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)((0, $254755d3f438722f$export$2e2bcd8739ae039), {\n                                emoji: emoji,\n                                id: noSearchResults ? this.props.noResultsEmoji || "cry" : this.props.previewEmoji || (this.props.previewPosition == "top" ? "point_down" : "point_up"),\n                                set: this.props.set,\n                                size: this.props.emojiButtonSize,\n                                skin: this.state.tempSkin || this.state.skin,\n                                spritesheet: true,\n                                getSpritesheetURL: this.props.getSpritesheetURL\n                            })\n                        }),\n                        /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("div", {\n                            class: `margin-${this.dir[0]}`,\n                            children: emoji || noSearchResults ? /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("div", {\n                                class: `padding-${this.dir[2]} align-${this.dir[0]}`,\n                                children: [\n                                    /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("div", {\n                                        class: "preview-title ellipsis",\n                                        children: emoji ? emoji.name : (0, $7adb23b0109cc36a$export$dbe3113d60765c1a).search_no_results_1\n                                    }),\n                                    /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("div", {\n                                        class: "preview-subtitle ellipsis color-c",\n                                        children: emoji ? emoji.skins[0].shortcodes : (0, $7adb23b0109cc36a$export$dbe3113d60765c1a).search_no_results_2\n                                    })\n                                ]\n                            }) : /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("div", {\n                                class: "preview-placeholder color-c",\n                                children: (0, $7adb23b0109cc36a$export$dbe3113d60765c1a).pick\n                            })\n                        })\n                    ]\n                }),\n                !emoji && this.props.skinTonePosition == "preview" && this.renderSkinToneButton()\n            ]\n        });\n    }\n    renderEmojiButton(emoji, { pos: pos, posinset: posinset, grid: grid }) {\n        const size = this.props.emojiButtonSize;\n        const skin = this.state.tempSkin || this.state.skin;\n        const emojiSkin = emoji.skins[skin - 1] || emoji.skins[0];\n        const native = emojiSkin.native;\n        const selected = (0, $693b183b0a78708f$export$9cb4719e2e525b7a)(this.state.pos, pos);\n        const key = pos.concat(emoji.id).join("");\n        return /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)((0, $e0d4dda61265ff1e$export$2e2bcd8739ae039), {\n            selected: selected,\n            skin: skin,\n            size: size,\n            children: /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("button", {\n                "aria-label": native,\n                "aria-selected": selected || undefined,\n                "aria-posinset": posinset,\n                "aria-setsize": grid.setsize,\n                "data-keyboard": this.state.keyboard,\n                title: this.props.previewPosition == "none" ? emoji.name : undefined,\n                type: "button",\n                class: "flex flex-center flex-middle",\n                tabindex: "-1",\n                onClick: (e)=>this.handleEmojiClick({\n                        e: e,\n                        emoji: emoji\n                    }),\n                onMouseEnter: ()=>this.handleEmojiOver(pos),\n                onMouseLeave: ()=>this.handleEmojiOver(),\n                style: {\n                    width: this.props.emojiButtonSize,\n                    height: this.props.emojiButtonSize,\n                    fontSize: this.props.emojiSize,\n                    lineHeight: 0\n                },\n                children: [\n                    /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("div", {\n                        "aria-hidden": "true",\n                        class: "background",\n                        style: {\n                            borderRadius: this.props.emojiButtonRadius,\n                            backgroundColor: this.props.emojiButtonColors ? this.props.emojiButtonColors[(posinset - 1) % this.props.emojiButtonColors.length] : undefined\n                        }\n                    }),\n                    /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)((0, $254755d3f438722f$export$2e2bcd8739ae039), {\n                        emoji: emoji,\n                        set: this.props.set,\n                        size: this.props.emojiSize,\n                        skin: skin,\n                        spritesheet: true,\n                        getSpritesheetURL: this.props.getSpritesheetURL\n                    })\n                ]\n            })\n        }, key);\n    }\n    renderSearch() {\n        const renderSkinTone = this.props.previewPosition == "none" || this.props.skinTonePosition == "search";\n        return /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("div", {\n            children: [\n                /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("div", {\n                    class: "spacer"\n                }),\n                /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("div", {\n                    class: "flex flex-middle",\n                    children: [\n                        /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("div", {\n                            class: "search relative flex-grow",\n                            children: [\n                                /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("input", {\n                                    type: "search",\n                                    ref: this.refs.searchInput,\n                                    placeholder: (0, $7adb23b0109cc36a$export$dbe3113d60765c1a).search,\n                                    onClick: this.handleSearchClick,\n                                    onInput: this.handleSearchInput,\n                                    onKeyDown: this.handleSearchKeyDown,\n                                    autoComplete: "off"\n                                }),\n                                /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("span", {\n                                    class: "icon loupe flex",\n                                    children: (0, $fcccfb36ed0cde68$export$2e2bcd8739ae039).search.loupe\n                                }),\n                                this.state.searchResults && /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("button", {\n                                    title: "Clear",\n                                    "aria-label": "Clear",\n                                    type: "button",\n                                    class: "icon delete flex",\n                                    onClick: this.clearSearch,\n                                    onMouseDown: this.preventDefault,\n                                    children: (0, $fcccfb36ed0cde68$export$2e2bcd8739ae039).search.delete\n                                })\n                            ]\n                        }),\n                        renderSkinTone && this.renderSkinToneButton()\n                    ]\n                })\n            ]\n        });\n    }\n    renderSearchResults() {\n        const { searchResults: searchResults } = this.state;\n        if (!searchResults) return null;\n        return /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("div", {\n            class: "category",\n            ref: this.refs.search,\n            children: [\n                /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("div", {\n                    class: `sticky padding-small align-${this.dir[0]}`,\n                    children: (0, $7adb23b0109cc36a$export$dbe3113d60765c1a).categories.search\n                }),\n                /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("div", {\n                    children: !searchResults.length ? /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("div", {\n                        class: `padding-small align-${this.dir[0]}`,\n                        children: this.props.onAddCustomEmoji && /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("a", {\n                            onClick: this.props.onAddCustomEmoji,\n                            children: (0, $7adb23b0109cc36a$export$dbe3113d60765c1a).add_custom\n                        })\n                    }) : searchResults.map((row, i)=>{\n                        return /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("div", {\n                            class: "flex",\n                            children: row.map((emoji, ii)=>{\n                                return this.renderEmojiButton(emoji, {\n                                    pos: [\n                                        i,\n                                        ii\n                                    ],\n                                    posinset: i * this.props.perLine + ii + 1,\n                                    grid: searchResults\n                                });\n                            })\n                        });\n                    })\n                })\n            ]\n        });\n    }\n    renderCategories() {\n        const { categories: categories } = (0, $7adb23b0109cc36a$export$2d0294657ab35f1b);\n        const hidden = !!this.state.searchResults;\n        const perLine = this.getPerLine();\n        return /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("div", {\n            style: {\n                visibility: hidden ? "hidden" : undefined,\n                display: hidden ? "none" : undefined,\n                height: "100%"\n            },\n            children: categories.map((category)=>{\n                const { root: root, rows: rows } = this.refs.categories.get(category.id);\n                return /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("div", {\n                    "data-id": category.target ? category.target.id : category.id,\n                    class: "category",\n                    ref: root,\n                    children: [\n                        /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("div", {\n                            class: `sticky padding-small align-${this.dir[0]}`,\n                            children: category.name || (0, $7adb23b0109cc36a$export$dbe3113d60765c1a).categories[category.id]\n                        }),\n                        /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("div", {\n                            class: "relative",\n                            style: {\n                                height: rows.length * this.props.emojiButtonSize\n                            },\n                            children: rows.map((row, i)=>{\n                                const targetRow = row.index - row.index % $89bd6bb200cc8fef$var$Performance.rowsPerRender;\n                                const visible = this.state.visibleRows[targetRow];\n                                const ref = "current" in row ? row : undefined;\n                                if (!visible && !ref) return null;\n                                const start = i * perLine;\n                                const end = start + perLine;\n                                const emojiIds = category.emojis.slice(start, end);\n                                if (emojiIds.length < perLine) emojiIds.push(...new Array(perLine - emojiIds.length));\n                                return /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("div", {\n                                    "data-index": row.index,\n                                    ref: ref,\n                                    class: "flex row",\n                                    style: {\n                                        top: i * this.props.emojiButtonSize\n                                    },\n                                    children: visible && emojiIds.map((emojiId, ii)=>{\n                                        if (!emojiId) return /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("div", {\n                                            style: {\n                                                width: this.props.emojiButtonSize,\n                                                height: this.props.emojiButtonSize\n                                            }\n                                        });\n                                        const emoji = (0, $c4d155af13ad4d4b$export$2e2bcd8739ae039).get(emojiId);\n                                        return this.renderEmojiButton(emoji, {\n                                            pos: [\n                                                row.index,\n                                                ii\n                                            ],\n                                            posinset: row.posinset + ii,\n                                            grid: this.grid\n                                        });\n                                    })\n                                }, row.index);\n                            })\n                        })\n                    ]\n                });\n            })\n        });\n    }\n    renderSkinToneButton() {\n        if (this.props.skinTonePosition == "none") return null;\n        return /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("div", {\n            class: "flex flex-auto flex-center flex-middle",\n            style: {\n                position: "relative",\n                width: this.props.emojiButtonSize,\n                height: this.props.emojiButtonSize\n            },\n            children: /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("button", {\n                type: "button",\n                ref: this.refs.skinToneButton,\n                class: "skin-tone-button flex flex-auto flex-center flex-middle",\n                "aria-selected": this.state.showSkins ? "" : undefined,\n                "aria-label": (0, $7adb23b0109cc36a$export$dbe3113d60765c1a).skins.choose,\n                title: (0, $7adb23b0109cc36a$export$dbe3113d60765c1a).skins.choose,\n                onClick: this.openSkins,\n                style: {\n                    width: this.props.emojiSize,\n                    height: this.props.emojiSize\n                },\n                children: /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("span", {\n                    class: `skin-tone skin-tone-${this.state.skin}`\n                })\n            })\n        });\n    }\n    renderLiveRegion() {\n        const emoji = this.getEmojiByPos(this.state.pos);\n        const contents = emoji ? emoji.name : "";\n        return /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("div", {\n            "aria-live": "polite",\n            class: "sr-only",\n            children: contents\n        });\n    }\n    renderSkins() {\n        const skinToneButton = this.refs.skinToneButton.current;\n        const skinToneButtonRect = skinToneButton.getBoundingClientRect();\n        const baseRect = this.base.getBoundingClientRect();\n        const position = {};\n        if (this.dir == "ltr") position.right = baseRect.right - skinToneButtonRect.right - 3;\n        else position.left = skinToneButtonRect.left - baseRect.left - 3;\n        if (this.props.previewPosition == "bottom" && this.props.skinTonePosition == "preview") position.bottom = baseRect.bottom - skinToneButtonRect.top + 6;\n        else {\n            position.top = skinToneButtonRect.bottom - baseRect.top + 3;\n            position.bottom = "auto";\n        }\n        return /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("div", {\n            ref: this.refs.menu,\n            role: "radiogroup",\n            dir: this.dir,\n            "aria-label": (0, $7adb23b0109cc36a$export$dbe3113d60765c1a).skins.choose,\n            class: "menu hidden",\n            "data-position": position.top ? "top" : "bottom",\n            style: position,\n            children: [\n                ...Array(6).keys()\n            ].map((i)=>{\n                const skin = i + 1;\n                const checked = this.state.skin == skin;\n                return /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("div", {\n                    children: [\n                        /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("input", {\n                            type: "radio",\n                            name: "skin-tone",\n                            value: skin,\n                            "aria-label": (0, $7adb23b0109cc36a$export$dbe3113d60765c1a).skins[skin],\n                            ref: checked ? this.refs.skinToneRadio : null,\n                            defaultChecked: checked,\n                            onChange: ()=>this.handleSkinMouseOver(skin),\n                            onKeyDown: (e)=>{\n                                if (e.code == "Enter" || e.code == "Space" || e.code == "Tab") {\n                                    e.preventDefault();\n                                    this.handleSkinClick(skin);\n                                }\n                            }\n                        }),\n                        /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("button", {\n                            "aria-hidden": "true",\n                            tabindex: "-1",\n                            onClick: ()=>this.handleSkinClick(skin),\n                            onMouseEnter: ()=>this.handleSkinMouseOver(skin),\n                            onMouseLeave: ()=>this.handleSkinMouseOver(),\n                            class: "option flex flex-grow flex-middle",\n                            children: [\n                                /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("span", {\n                                    class: `skin-tone skin-tone-${skin}`\n                                }),\n                                /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("span", {\n                                    class: "margin-small-lr",\n                                    children: (0, $7adb23b0109cc36a$export$dbe3113d60765c1a).skins[skin]\n                                })\n                            ]\n                        })\n                    ]\n                });\n            })\n        });\n    }\n    render() {\n        const lineWidth = this.props.perLine * this.props.emojiButtonSize;\n        return /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("section", {\n            id: "root",\n            class: "flex flex-column",\n            dir: this.dir,\n            style: {\n                width: this.props.dynamicWidth ? "100%" : `calc(${lineWidth}px + (var(--padding) + var(--sidebar-width)))`\n            },\n            "data-emoji-set": this.props.set,\n            "data-theme": this.state.theme,\n            "data-menu": this.state.showSkins ? "" : undefined,\n            children: [\n                this.props.previewPosition == "top" && this.renderPreview(),\n                this.props.navPosition == "top" && this.renderNav(),\n                this.props.searchPosition == "sticky" && /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("div", {\n                    class: "padding-lr",\n                    children: this.renderSearch()\n                }),\n                /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("div", {\n                    ref: this.refs.scroll,\n                    class: "scroll flex-grow padding-lr",\n                    children: /*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)("div", {\n                        style: {\n                            width: this.props.dynamicWidth ? "100%" : lineWidth,\n                            height: "100%"\n                        },\n                        children: [\n                            this.props.searchPosition == "static" && this.renderSearch(),\n                            this.renderSearchResults(),\n                            this.renderCategories()\n                        ]\n                    })\n                }),\n                this.props.navPosition == "bottom" && this.renderNav(),\n                this.props.previewPosition == "bottom" && this.renderPreview(),\n                this.state.showSkins && this.renderSkins(),\n                this.renderLiveRegion()\n            ]\n        });\n    }\n    constructor(props){\n        super();\n        (0, $c770c458706daa72$export$2e2bcd8739ae039)(this, "handleClickOutside", (e)=>{\n            const { element: element } = this.props;\n            if (e.target != element) {\n                if (this.state.showSkins) this.closeSkins();\n                if (this.props.onClickOutside) this.props.onClickOutside(e);\n            }\n        });\n        (0, $c770c458706daa72$export$2e2bcd8739ae039)(this, "handleBaseClick", (e)=>{\n            if (!this.state.showSkins) return;\n            if (!e.target.closest(".menu")) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                this.closeSkins();\n            }\n        });\n        (0, $c770c458706daa72$export$2e2bcd8739ae039)(this, "handleBaseKeydown", (e)=>{\n            if (!this.state.showSkins) return;\n            if (e.key == "Escape") {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                this.closeSkins();\n            }\n        });\n        (0, $c770c458706daa72$export$2e2bcd8739ae039)(this, "handleSearchClick", ()=>{\n            const emoji = this.getEmojiByPos(this.state.pos);\n            if (!emoji) return;\n            this.setState({\n                pos: [\n                    -1,\n                    -1\n                ]\n            });\n        });\n        (0, $c770c458706daa72$export$2e2bcd8739ae039)(this, "handleSearchInput", async ()=>{\n            const input = this.refs.searchInput.current;\n            if (!input) return;\n            const { value: value } = input;\n            const searchResults = await (0, $c4d155af13ad4d4b$export$2e2bcd8739ae039).search(value);\n            const afterRender = ()=>{\n                if (!this.refs.scroll.current) return;\n                this.refs.scroll.current.scrollTop = 0;\n            };\n            if (!searchResults) return this.setState({\n                searchResults: searchResults,\n                pos: [\n                    -1,\n                    -1\n                ]\n            }, afterRender);\n            const pos = input.selectionStart == input.value.length ? [\n                0,\n                0\n            ] : [\n                -1,\n                -1\n            ];\n            const grid = [];\n            grid.setsize = searchResults.length;\n            let row = null;\n            for (let emoji of searchResults){\n                if (!grid.length || row.length == this.getPerLine()) {\n                    row = [];\n                    row.__categoryId = "search";\n                    row.__index = grid.length;\n                    grid.push(row);\n                }\n                row.push(emoji);\n            }\n            this.ignoreMouse();\n            this.setState({\n                searchResults: grid,\n                pos: pos\n            }, afterRender);\n        });\n        (0, $c770c458706daa72$export$2e2bcd8739ae039)(this, "handleSearchKeyDown", (e)=>{\n            // const specialKey = e.altKey || e.ctrlKey || e.metaKey\n            const input = e.currentTarget;\n            e.stopImmediatePropagation();\n            switch(e.key){\n                case "ArrowLeft":\n                    // if (specialKey) return\n                    // e.preventDefault()\n                    this.navigate({\n                        e: e,\n                        input: input,\n                        left: true\n                    });\n                    break;\n                case "ArrowRight":\n                    // if (specialKey) return\n                    // e.preventDefault()\n                    this.navigate({\n                        e: e,\n                        input: input,\n                        right: true\n                    });\n                    break;\n                case "ArrowUp":\n                    // if (specialKey) return\n                    // e.preventDefault()\n                    this.navigate({\n                        e: e,\n                        input: input,\n                        up: true\n                    });\n                    break;\n                case "ArrowDown":\n                    // if (specialKey) return\n                    // e.preventDefault()\n                    this.navigate({\n                        e: e,\n                        input: input,\n                        down: true\n                    });\n                    break;\n                case "Enter":\n                    e.preventDefault();\n                    this.handleEmojiClick({\n                        e: e,\n                        pos: this.state.pos\n                    });\n                    break;\n                case "Escape":\n                    e.preventDefault();\n                    if (this.state.searchResults) this.clearSearch();\n                    else this.unfocusSearch();\n                    break;\n                default:\n                    break;\n            }\n        });\n        (0, $c770c458706daa72$export$2e2bcd8739ae039)(this, "clearSearch", ()=>{\n            const input = this.refs.searchInput.current;\n            if (!input) return;\n            input.value = "";\n            input.focus();\n            this.handleSearchInput();\n        });\n        (0, $c770c458706daa72$export$2e2bcd8739ae039)(this, "handleCategoryClick", ({ category: category, i: i })=>{\n            this.scrollTo(i == 0 ? {\n                row: -1\n            } : {\n                categoryId: category.id\n            });\n        });\n        (0, $c770c458706daa72$export$2e2bcd8739ae039)(this, "openSkins", (e)=>{\n            const { currentTarget: currentTarget } = e;\n            const rect = currentTarget.getBoundingClientRect();\n            this.setState({\n                showSkins: rect\n            }, async ()=>{\n                // Firefox requires 2 frames for the transition to consistenly work\n                await (0, $693b183b0a78708f$export$e772c8ff12451969)(2);\n                const menu = this.refs.menu.current;\n                if (!menu) return;\n                menu.classList.remove("hidden");\n                this.refs.skinToneRadio.current.focus();\n                this.base.addEventListener("click", this.handleBaseClick, true);\n                this.base.addEventListener("keydown", this.handleBaseKeydown, true);\n            });\n        });\n        this.observers = [];\n        this.state = {\n            pos: [\n                -1,\n                -1\n            ],\n            perLine: this.initDynamicPerLine(props),\n            visibleRows: {\n                0: true\n            },\n            ...this.getInitialState(props)\n        };\n    }\n}\nclass $efa000751917694d$export$2e2bcd8739ae039 extends (0, $26f27c338a96b1a6$export$2e2bcd8739ae039) {\n    async connectedCallback() {\n        const props = (0, $7adb23b0109cc36a$export$75fe5f91d452f94b)(this.props, (0, $b247ea80b67298d5$export$2e2bcd8739ae039), this);\n        props.element = this;\n        props.ref = (component)=>{\n            this.component = component;\n        };\n        await (0, $7adb23b0109cc36a$export$2cd8252107eb640b)(props);\n        if (this.disconnected) return;\n        (0, $fb96b826c0c5f37a$export$b3890eb0ae9dca99)(/*#__PURE__*/ (0, $bd9dd35321b03dd4$export$34b9dba7ce09269b)((0, $89bd6bb200cc8fef$export$2e2bcd8739ae039), {\n            ...props\n        }), this.shadowRoot);\n    }\n    constructor(props){\n        super(props, {\n            styles: (0, /*@__PURE__*/ $parcel$interopDefault($329d53ba9fd7125f$exports))\n        });\n    }\n}\n(0, $c770c458706daa72$export$2e2bcd8739ae039)($efa000751917694d$export$2e2bcd8739ae039, "Props", (0, $b247ea80b67298d5$export$2e2bcd8739ae039));\nif (typeof customElements !== "undefined" && !customElements.get("em-emoji-picker")) customElements.define("em-emoji-picker", $efa000751917694d$export$2e2bcd8739ae039);\nvar $329d53ba9fd7125f$exports = {};\n$329d53ba9fd7125f$exports = \':host {\\n  width: min-content;\\n  height: 435px;\\n  min-height: 230px;\\n  border-radius: var(--border-radius);\\n  box-shadow: var(--shadow);\\n  --border-radius: 10px;\\n  --category-icon-size: 18px;\\n  --font-family: -apple-system, BlinkMacSystemFont, "Helvetica Neue", sans-serif;\\n  --font-size: 15px;\\n  --preview-placeholder-size: 21px;\\n  --preview-title-size: 1.1em;\\n  --preview-subtitle-size: .9em;\\n  --shadow-color: 0deg 0% 0%;\\n  --shadow: .3px .5px 2.7px hsl(var(--shadow-color) / .14), .4px .8px 1px -3.2px hsl(var(--shadow-color) / .14), 1px 2px 2.5px -4.5px hsl(var(--shadow-color) / .14);\\n  display: flex;\\n}\\n\\n[data-theme="light"] {\\n  --em-rgb-color: var(--rgb-color, 34, 36, 39);\\n  --em-rgb-accent: var(--rgb-accent, 34, 102, 237);\\n  --em-rgb-background: var(--rgb-background, 255, 255, 255);\\n  --em-rgb-input: var(--rgb-input, 255, 255, 255);\\n  --em-color-border: var(--color-border, rgba(0, 0, 0, .05));\\n  --em-color-border-over: var(--color-border-over, rgba(0, 0, 0, .1));\\n}\\n\\n[data-theme="dark"] {\\n  --em-rgb-color: var(--rgb-color, 222, 222, 221);\\n  --em-rgb-accent: var(--rgb-accent, 58, 130, 247);\\n  --em-rgb-background: var(--rgb-background, 21, 22, 23);\\n  --em-rgb-input: var(--rgb-input, 0, 0, 0);\\n  --em-color-border: var(--color-border, rgba(255, 255, 255, .1));\\n  --em-color-border-over: var(--color-border-over, rgba(255, 255, 255, .2));\\n}\\n\\n#root {\\n  --color-a: rgb(var(--em-rgb-color));\\n  --color-b: rgba(var(--em-rgb-color), .65);\\n  --color-c: rgba(var(--em-rgb-color), .45);\\n  --padding: 12px;\\n  --padding-small: calc(var(--padding) / 2);\\n  --sidebar-width: 16px;\\n  --duration: 225ms;\\n  --duration-fast: 125ms;\\n  --duration-instant: 50ms;\\n  --easing: cubic-bezier(.4, 0, .2, 1);\\n  width: 100%;\\n  text-align: left;\\n  border-radius: var(--border-radius);\\n  background-color: rgb(var(--em-rgb-background));\\n  position: relative;\\n}\\n\\n@media (prefers-reduced-motion) {\\n  #root {\\n    --duration: 0;\\n    --duration-fast: 0;\\n    --duration-instant: 0;\\n  }\\n}\\n\\n#root[data-menu] button {\\n  cursor: auto;\\n}\\n\\n#root[data-menu] .menu button {\\n  cursor: pointer;\\n}\\n\\n:host, #root, input, button {\\n  color: rgb(var(--em-rgb-color));\\n  font-family: var(--font-family);\\n  font-size: var(--font-size);\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  line-height: normal;\\n}\\n\\n*, :before, :after {\\n  box-sizing: border-box;\\n  min-width: 0;\\n  margin: 0;\\n  padding: 0;\\n}\\n\\n.relative {\\n  position: relative;\\n}\\n\\n.flex {\\n  display: flex;\\n}\\n\\n.flex-auto {\\n  flex: none;\\n}\\n\\n.flex-center {\\n  justify-content: center;\\n}\\n\\n.flex-column {\\n  flex-direction: column;\\n}\\n\\n.flex-grow {\\n  flex: auto;\\n}\\n\\n.flex-middle {\\n  align-items: center;\\n}\\n\\n.flex-wrap {\\n  flex-wrap: wrap;\\n}\\n\\n.padding {\\n  padding: var(--padding);\\n}\\n\\n.padding-t {\\n  padding-top: var(--padding);\\n}\\n\\n.padding-lr {\\n  padding-left: var(--padding);\\n  padding-right: var(--padding);\\n}\\n\\n.padding-r {\\n  padding-right: var(--padding);\\n}\\n\\n.padding-small {\\n  padding: var(--padding-small);\\n}\\n\\n.padding-small-b {\\n  padding-bottom: var(--padding-small);\\n}\\n\\n.padding-small-lr {\\n  padding-left: var(--padding-small);\\n  padding-right: var(--padding-small);\\n}\\n\\n.margin {\\n  margin: var(--padding);\\n}\\n\\n.margin-r {\\n  margin-right: var(--padding);\\n}\\n\\n.margin-l {\\n  margin-left: var(--padding);\\n}\\n\\n.margin-small-l {\\n  margin-left: var(--padding-small);\\n}\\n\\n.margin-small-lr {\\n  margin-left: var(--padding-small);\\n  margin-right: var(--padding-small);\\n}\\n\\n.align-l {\\n  text-align: left;\\n}\\n\\n.align-r {\\n  text-align: right;\\n}\\n\\n.color-a {\\n  color: var(--color-a);\\n}\\n\\n.color-b {\\n  color: var(--color-b);\\n}\\n\\n.color-c {\\n  color: var(--color-c);\\n}\\n\\n.ellipsis {\\n  white-space: nowrap;\\n  max-width: 100%;\\n  width: auto;\\n  text-overflow: ellipsis;\\n  overflow: hidden;\\n}\\n\\n.sr-only {\\n  width: 1px;\\n  height: 1px;\\n  position: absolute;\\n  top: auto;\\n  left: -10000px;\\n  overflow: hidden;\\n}\\n\\na {\\n  cursor: pointer;\\n  color: rgb(var(--em-rgb-accent));\\n}\\n\\na:hover {\\n  text-decoration: underline;\\n}\\n\\n.spacer {\\n  height: 10px;\\n}\\n\\n[dir="rtl"] .scroll {\\n  padding-left: 0;\\n  padding-right: var(--padding);\\n}\\n\\n.scroll {\\n  padding-right: 0;\\n  overflow-x: hidden;\\n  overflow-y: auto;\\n}\\n\\n.scroll::-webkit-scrollbar {\\n  width: var(--sidebar-width);\\n  height: var(--sidebar-width);\\n}\\n\\n.scroll::-webkit-scrollbar-track {\\n  border: 0;\\n}\\n\\n.scroll::-webkit-scrollbar-button {\\n  width: 0;\\n  height: 0;\\n  display: none;\\n}\\n\\n.scroll::-webkit-scrollbar-corner {\\n  background-color: rgba(0, 0, 0, 0);\\n}\\n\\n.scroll::-webkit-scrollbar-thumb {\\n  min-height: 20%;\\n  min-height: 65px;\\n  border: 4px solid rgb(var(--em-rgb-background));\\n  border-radius: 8px;\\n}\\n\\n.scroll::-webkit-scrollbar-thumb:hover {\\n  background-color: var(--em-color-border-over) !important;\\n}\\n\\n.scroll:hover::-webkit-scrollbar-thumb {\\n  background-color: var(--em-color-border);\\n}\\n\\n.sticky {\\n  z-index: 1;\\n  background-color: rgba(var(--em-rgb-background), .9);\\n  -webkit-backdrop-filter: blur(4px);\\n  backdrop-filter: blur(4px);\\n  font-weight: 500;\\n  position: sticky;\\n  top: -1px;\\n}\\n\\n[dir="rtl"] .search input[type="search"] {\\n  padding: 10px 2.2em 10px 2em;\\n}\\n\\n[dir="rtl"] .search .loupe {\\n  left: auto;\\n  right: .7em;\\n}\\n\\n[dir="rtl"] .search .delete {\\n  left: .7em;\\n  right: auto;\\n}\\n\\n.search {\\n  z-index: 2;\\n  position: relative;\\n}\\n\\n.search input, .search button {\\n  font-size: calc(var(--font-size)  - 1px);\\n}\\n\\n.search input[type="search"] {\\n  width: 100%;\\n  background-color: var(--em-color-border);\\n  transition-duration: var(--duration);\\n  transition-property: background-color, box-shadow;\\n  transition-timing-function: var(--easing);\\n  border: 0;\\n  border-radius: 10px;\\n  outline: 0;\\n  padding: 10px 2em 10px 2.2em;\\n  display: block;\\n}\\n\\n.search input[type="search"]::-ms-input-placeholder {\\n  color: inherit;\\n  opacity: .6;\\n}\\n\\n.search input[type="search"]::placeholder {\\n  color: inherit;\\n  opacity: .6;\\n}\\n\\n.search input[type="search"], .search input[type="search"]::-webkit-search-decoration, .search input[type="search"]::-webkit-search-cancel-button, .search input[type="search"]::-webkit-search-results-button, .search input[type="search"]::-webkit-search-results-decoration {\\n  -webkit-appearance: none;\\n  -ms-appearance: none;\\n  appearance: none;\\n}\\n\\n.search input[type="search"]:focus {\\n  background-color: rgb(var(--em-rgb-input));\\n  box-shadow: inset 0 0 0 1px rgb(var(--em-rgb-accent)), 0 1px 3px rgba(65, 69, 73, .2);\\n}\\n\\n.search .icon {\\n  z-index: 1;\\n  color: rgba(var(--em-rgb-color), .7);\\n  position: absolute;\\n  top: 50%;\\n  transform: translateY(-50%);\\n}\\n\\n.search .loupe {\\n  pointer-events: none;\\n  left: .7em;\\n}\\n\\n.search .delete {\\n  right: .7em;\\n}\\n\\nsvg {\\n  fill: currentColor;\\n  width: 1em;\\n  height: 1em;\\n}\\n\\nbutton {\\n  -webkit-appearance: none;\\n  -ms-appearance: none;\\n  appearance: none;\\n  cursor: pointer;\\n  color: currentColor;\\n  background-color: rgba(0, 0, 0, 0);\\n  border: 0;\\n}\\n\\n#nav {\\n  z-index: 2;\\n  padding-top: 12px;\\n  padding-bottom: 12px;\\n  padding-right: var(--sidebar-width);\\n  position: relative;\\n}\\n\\n#nav button {\\n  color: var(--color-b);\\n  transition: color var(--duration) var(--easing);\\n}\\n\\n#nav button:hover {\\n  color: var(--color-a);\\n}\\n\\n#nav svg, #nav img {\\n  width: var(--category-icon-size);\\n  height: var(--category-icon-size);\\n}\\n\\n#nav[dir="rtl"] .bar {\\n  left: auto;\\n  right: 0;\\n}\\n\\n#nav .bar {\\n  width: 100%;\\n  height: 3px;\\n  background-color: rgb(var(--em-rgb-accent));\\n  transition: transform var(--duration) var(--easing);\\n  border-radius: 3px 3px 0 0;\\n  position: absolute;\\n  bottom: -12px;\\n  left: 0;\\n}\\n\\n#nav button[aria-selected] {\\n  color: rgb(var(--em-rgb-accent));\\n}\\n\\n#preview {\\n  z-index: 2;\\n  padding: calc(var(--padding)  + 4px) var(--padding);\\n  padding-right: var(--sidebar-width);\\n  position: relative;\\n}\\n\\n#preview .preview-placeholder {\\n  font-size: var(--preview-placeholder-size);\\n}\\n\\n#preview .preview-title {\\n  font-size: var(--preview-title-size);\\n}\\n\\n#preview .preview-subtitle {\\n  font-size: var(--preview-subtitle-size);\\n}\\n\\n#nav:before, #preview:before {\\n  content: "";\\n  height: 2px;\\n  position: absolute;\\n  left: 0;\\n  right: 0;\\n}\\n\\n#nav[data-position="top"]:before, #preview[data-position="top"]:before {\\n  background: linear-gradient(to bottom, var(--em-color-border), transparent);\\n  top: 100%;\\n}\\n\\n#nav[data-position="bottom"]:before, #preview[data-position="bottom"]:before {\\n  background: linear-gradient(to top, var(--em-color-border), transparent);\\n  bottom: 100%;\\n}\\n\\n.category:last-child {\\n  min-height: calc(100% + 1px);\\n}\\n\\n.category button {\\n  font-family: -apple-system, BlinkMacSystemFont, Helvetica Neue, sans-serif;\\n  position: relative;\\n}\\n\\n.category button > * {\\n  position: relative;\\n}\\n\\n.category button .background {\\n  opacity: 0;\\n  background-color: var(--em-color-border);\\n  transition: opacity var(--duration-fast) var(--easing) var(--duration-instant);\\n  position: absolute;\\n  top: 0;\\n  bottom: 0;\\n  left: 0;\\n  right: 0;\\n}\\n\\n.category button:hover .background {\\n  transition-duration: var(--duration-instant);\\n  transition-delay: 0s;\\n}\\n\\n.category button[aria-selected] .background {\\n  opacity: 1;\\n}\\n\\n.category button[data-keyboard] .background {\\n  transition: none;\\n}\\n\\n.row {\\n  width: 100%;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n}\\n\\n.skin-tone-button {\\n  border: 1px solid rgba(0, 0, 0, 0);\\n  border-radius: 100%;\\n}\\n\\n.skin-tone-button:hover {\\n  border-color: var(--em-color-border);\\n}\\n\\n.skin-tone-button:active .skin-tone {\\n  transform: scale(.85) !important;\\n}\\n\\n.skin-tone-button .skin-tone {\\n  transition: transform var(--duration) var(--easing);\\n}\\n\\n.skin-tone-button[aria-selected] {\\n  background-color: var(--em-color-border);\\n  border-top-color: rgba(0, 0, 0, .05);\\n  border-bottom-color: rgba(0, 0, 0, 0);\\n  border-left-width: 0;\\n  border-right-width: 0;\\n}\\n\\n.skin-tone-button[aria-selected] .skin-tone {\\n  transform: scale(.9);\\n}\\n\\n.menu {\\n  z-index: 2;\\n  white-space: nowrap;\\n  border: 1px solid var(--em-color-border);\\n  background-color: rgba(var(--em-rgb-background), .9);\\n  -webkit-backdrop-filter: blur(4px);\\n  backdrop-filter: blur(4px);\\n  transition-property: opacity, transform;\\n  transition-duration: var(--duration);\\n  transition-timing-function: var(--easing);\\n  border-radius: 10px;\\n  padding: 4px;\\n  position: absolute;\\n  box-shadow: 1px 1px 5px rgba(0, 0, 0, .05);\\n}\\n\\n.menu.hidden {\\n  opacity: 0;\\n}\\n\\n.menu[data-position="bottom"] {\\n  transform-origin: 100% 100%;\\n}\\n\\n.menu[data-position="bottom"].hidden {\\n  transform: scale(.9)rotate(-3deg)translateY(5%);\\n}\\n\\n.menu[data-position="top"] {\\n  transform-origin: 100% 0;\\n}\\n\\n.menu[data-position="top"].hidden {\\n  transform: scale(.9)rotate(3deg)translateY(-5%);\\n}\\n\\n.menu input[type="radio"] {\\n  clip: rect(0 0 0 0);\\n  width: 1px;\\n  height: 1px;\\n  border: 0;\\n  margin: 0;\\n  padding: 0;\\n  position: absolute;\\n  overflow: hidden;\\n}\\n\\n.menu input[type="radio"]:checked + .option {\\n  box-shadow: 0 0 0 2px rgb(var(--em-rgb-accent));\\n}\\n\\n.option {\\n  width: 100%;\\n  border-radius: 6px;\\n  padding: 4px 6px;\\n}\\n\\n.option:hover {\\n  color: #fff;\\n  background-color: rgb(var(--em-rgb-accent));\\n}\\n\\n.skin-tone {\\n  width: 16px;\\n  height: 16px;\\n  border-radius: 100%;\\n  display: inline-block;\\n  position: relative;\\n  overflow: hidden;\\n}\\n\\n.skin-tone:after {\\n  content: "";\\n  mix-blend-mode: overlay;\\n  background: linear-gradient(rgba(255, 255, 255, .2), rgba(0, 0, 0, 0));\\n  border: 1px solid rgba(0, 0, 0, .8);\\n  border-radius: 100%;\\n  position: absolute;\\n  top: 0;\\n  bottom: 0;\\n  left: 0;\\n  right: 0;\\n  box-shadow: inset 0 -2px 3px #000, inset 0 1px 2px #fff;\\n}\\n\\n.skin-tone-1 {\\n  background-color: #ffc93a;\\n}\\n\\n.skin-tone-2 {\\n  background-color: #ffdab7;\\n}\\n\\n.skin-tone-3 {\\n  background-color: #e7b98f;\\n}\\n\\n.skin-tone-4 {\\n  background-color: #c88c61;\\n}\\n\\n.skin-tone-5 {\\n  background-color: #a46134;\\n}\\n\\n.skin-tone-6 {\\n  background-color: #5d4437;\\n}\\n\\n[data-index] {\\n  justify-content: space-between;\\n}\\n\\n[data-emoji-set="twitter"] .skin-tone:after {\\n  box-shadow: none;\\n  border-color: rgba(0, 0, 0, .5);\\n}\\n\\n[data-emoji-set="twitter"] .skin-tone-1 {\\n  background-color: #fade72;\\n}\\n\\n[data-emoji-set="twitter"] .skin-tone-2 {\\n  background-color: #f3dfd0;\\n}\\n\\n[data-emoji-set="twitter"] .skin-tone-3 {\\n  background-color: #eed3a8;\\n}\\n\\n[data-emoji-set="twitter"] .skin-tone-4 {\\n  background-color: #cfad8d;\\n}\\n\\n[data-emoji-set="twitter"] .skin-tone-5 {\\n  background-color: #a8805d;\\n}\\n\\n[data-emoji-set="twitter"] .skin-tone-6 {\\n  background-color: #765542;\\n}\\n\\n[data-emoji-set="google"] .skin-tone:after {\\n  box-shadow: inset 0 0 2px 2px rgba(0, 0, 0, .4);\\n}\\n\\n[data-emoji-set="google"] .skin-tone-1 {\\n  background-color: #f5c748;\\n}\\n\\n[data-emoji-set="google"] .skin-tone-2 {\\n  background-color: #f1d5aa;\\n}\\n\\n[data-emoji-set="google"] .skin-tone-3 {\\n  background-color: #d4b48d;\\n}\\n\\n[data-emoji-set="google"] .skin-tone-4 {\\n  background-color: #aa876b;\\n}\\n\\n[data-emoji-set="google"] .skin-tone-5 {\\n  background-color: #916544;\\n}\\n\\n[data-emoji-set="google"] .skin-tone-6 {\\n  background-color: #61493f;\\n}\\n\\n[data-emoji-set="facebook"] .skin-tone:after {\\n  border-color: rgba(0, 0, 0, .4);\\n  box-shadow: inset 0 -2px 3px #000, inset 0 1px 4px #fff;\\n}\\n\\n[data-emoji-set="facebook"] .skin-tone-1 {\\n  background-color: #f5c748;\\n}\\n\\n[data-emoji-set="facebook"] .skin-tone-2 {\\n  background-color: #f1d5aa;\\n}\\n\\n[data-emoji-set="facebook"] .skin-tone-3 {\\n  background-color: #d4b48d;\\n}\\n\\n[data-emoji-set="facebook"] .skin-tone-4 {\\n  background-color: #aa876b;\\n}\\n\\n[data-emoji-set="facebook"] .skin-tone-5 {\\n  background-color: #916544;\\n}\\n\\n[data-emoji-set="facebook"] .skin-tone-6 {\\n  background-color: #61493f;\\n}\\n\\n\';\n //# sourceMappingURL=module.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/emoji-mart/dist/module.js\n',
      );

      /***/
    },
};
