"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@tanstack";
exports.ids = ["vendor-chunks/@tanstack"];
exports.modules = {
  /***/ "(ssr)/../node_modules/@tanstack/query-core/build/modern/focusManager.js":
    /*!*************************************************************************!*\
  !*** ../node_modules/@tanstack/query-core/build/modern/focusManager.js ***!
  \*************************************************************************/
    /***/ (
      __unused_webpack___webpack_module__,
      __webpack_exports__,
      __webpack_require__,
    ) => {
      eval(
        '__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FocusManager: () => (/* binding */ FocusManager),\n/* harmony export */   focusManager: () => (/* binding */ focusManager)\n/* harmony export */ });\n/* harmony import */ var _subscribable_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./subscribable.js */ "(ssr)/../node_modules/@tanstack/query-core/build/modern/subscribable.js");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ "(ssr)/../node_modules/@tanstack/query-core/build/modern/utils.js");\n// src/focusManager.ts\n\n\nvar FocusManager = class extends _subscribable_js__WEBPACK_IMPORTED_MODULE_0__.Subscribable {\n    #focused;\n    #cleanup;\n    #setup;\n    constructor(){\n        super();\n        this.#setup = (onFocus)=>{\n            if (!_utils_js__WEBPACK_IMPORTED_MODULE_1__.isServer && window.addEventListener) {\n                const listener = ()=>onFocus();\n                window.addEventListener("visibilitychange", listener, false);\n                return ()=>{\n                    window.removeEventListener("visibilitychange", listener);\n                };\n            }\n            return;\n        };\n    }\n    onSubscribe() {\n        if (!this.#cleanup) {\n            this.setEventListener(this.#setup);\n        }\n    }\n    onUnsubscribe() {\n        if (!this.hasListeners()) {\n            this.#cleanup?.();\n            this.#cleanup = void 0;\n        }\n    }\n    setEventListener(setup) {\n        this.#setup = setup;\n        this.#cleanup?.();\n        this.#cleanup = setup((focused)=>{\n            if (typeof focused === "boolean") {\n                this.setFocused(focused);\n            } else {\n                this.onFocus();\n            }\n        });\n    }\n    setFocused(focused) {\n        const changed = this.#focused !== focused;\n        if (changed) {\n            this.#focused = focused;\n            this.onFocus();\n        }\n    }\n    onFocus() {\n        this.listeners.forEach((listener)=>{\n            listener();\n        });\n    }\n    isFocused() {\n        if (typeof this.#focused === "boolean") {\n            return this.#focused;\n        }\n        return globalThis.document?.visibilityState !== "hidden";\n    }\n};\nvar focusManager = new FocusManager();\n //# sourceMappingURL=focusManager.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9xdWVyeS1jb3JlL2J1aWxkL21vZGVybi9mb2N1c01hbmFnZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBLHNCQUFzQjtBQUMyQjtBQUNYO0FBQ3RDLElBQUlFLGVBQWUsY0FBY0YsMERBQVlBO0lBQzNDLENBQUNHLE9BQU8sQ0FBQztJQUNULENBQUNDLE9BQU8sQ0FBQztJQUNULENBQUNDLEtBQUssQ0FBQztJQUNQQyxhQUFjO1FBQ1osS0FBSztRQUNMLElBQUksQ0FBQyxDQUFDRCxLQUFLLEdBQUcsQ0FBQ0U7WUFDYixJQUFJLENBQUNOLCtDQUFRQSxJQUFJTyxPQUFPQyxnQkFBZ0IsRUFBRTtnQkFDeEMsTUFBTUMsV0FBVyxJQUFNSDtnQkFDdkJDLE9BQU9DLGdCQUFnQixDQUFDLG9CQUFvQkMsVUFBVTtnQkFDdEQsT0FBTztvQkFDTEYsT0FBT0csbUJBQW1CLENBQUMsb0JBQW9CRDtnQkFDakQ7WUFDRjtZQUNBO1FBQ0Y7SUFDRjtJQUNBRSxjQUFjO1FBQ1osSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDUixPQUFPLEVBQUU7WUFDbEIsSUFBSSxDQUFDUyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsQ0FBQ1IsS0FBSztRQUNuQztJQUNGO0lBQ0FTLGdCQUFnQjtRQUNkLElBQUksQ0FBQyxJQUFJLENBQUNDLFlBQVksSUFBSTtZQUN4QixJQUFJLENBQUMsQ0FBQ1gsT0FBTztZQUNiLElBQUksQ0FBQyxDQUFDQSxPQUFPLEdBQUcsS0FBSztRQUN2QjtJQUNGO0lBQ0FTLGlCQUFpQlIsS0FBSyxFQUFFO1FBQ3RCLElBQUksQ0FBQyxDQUFDQSxLQUFLLEdBQUdBO1FBQ2QsSUFBSSxDQUFDLENBQUNELE9BQU87UUFDYixJQUFJLENBQUMsQ0FBQ0EsT0FBTyxHQUFHQyxNQUFNLENBQUNGO1lBQ3JCLElBQUksT0FBT0EsWUFBWSxXQUFXO2dCQUNoQyxJQUFJLENBQUNhLFVBQVUsQ0FBQ2I7WUFDbEIsT0FBTztnQkFDTCxJQUFJLENBQUNJLE9BQU87WUFDZDtRQUNGO0lBQ0Y7SUFDQVMsV0FBV2IsT0FBTyxFQUFFO1FBQ2xCLE1BQU1jLFVBQVUsSUFBSSxDQUFDLENBQUNkLE9BQU8sS0FBS0E7UUFDbEMsSUFBSWMsU0FBUztZQUNYLElBQUksQ0FBQyxDQUFDZCxPQUFPLEdBQUdBO1lBQ2hCLElBQUksQ0FBQ0ksT0FBTztRQUNkO0lBQ0Y7SUFDQUEsVUFBVTtRQUNSLElBQUksQ0FBQ1csU0FBUyxDQUFDQyxPQUFPLENBQUMsQ0FBQ1Q7WUFDdEJBO1FBQ0Y7SUFDRjtJQUNBVSxZQUFZO1FBQ1YsSUFBSSxPQUFPLElBQUksQ0FBQyxDQUFDakIsT0FBTyxLQUFLLFdBQVc7WUFDdEMsT0FBTyxJQUFJLENBQUMsQ0FBQ0EsT0FBTztRQUN0QjtRQUNBLE9BQU9rQixXQUFXQyxRQUFRLEVBQUVDLG9CQUFvQjtJQUNsRDtBQUNGO0FBQ0EsSUFBSUMsZUFBZSxJQUFJdEI7QUFJckIsQ0FDRix3Q0FBd0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oYWNraHViYi8uLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3F1ZXJ5LWNvcmUvYnVpbGQvbW9kZXJuL2ZvY3VzTWFuYWdlci5qcz8zMTI5Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9mb2N1c01hbmFnZXIudHNcbmltcG9ydCB7IFN1YnNjcmliYWJsZSB9IGZyb20gXCIuL3N1YnNjcmliYWJsZS5qc1wiO1xuaW1wb3J0IHsgaXNTZXJ2ZXIgfSBmcm9tIFwiLi91dGlscy5qc1wiO1xudmFyIEZvY3VzTWFuYWdlciA9IGNsYXNzIGV4dGVuZHMgU3Vic2NyaWJhYmxlIHtcbiAgI2ZvY3VzZWQ7XG4gICNjbGVhbnVwO1xuICAjc2V0dXA7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy4jc2V0dXAgPSAob25Gb2N1cykgPT4ge1xuICAgICAgaWYgKCFpc1NlcnZlciAmJiB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcikge1xuICAgICAgICBjb25zdCBsaXN0ZW5lciA9ICgpID0+IG9uRm9jdXMoKTtcbiAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJ2aXNpYmlsaXR5Y2hhbmdlXCIsIGxpc3RlbmVyLCBmYWxzZSk7XG4gICAgICAgIHJldHVybiAoKSA9PiB7XG4gICAgICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJ2aXNpYmlsaXR5Y2hhbmdlXCIsIGxpc3RlbmVyKTtcbiAgICAgICAgfTtcbiAgICAgIH1cbiAgICAgIHJldHVybjtcbiAgICB9O1xuICB9XG4gIG9uU3Vic2NyaWJlKCkge1xuICAgIGlmICghdGhpcy4jY2xlYW51cCkge1xuICAgICAgdGhpcy5zZXRFdmVudExpc3RlbmVyKHRoaXMuI3NldHVwKTtcbiAgICB9XG4gIH1cbiAgb25VbnN1YnNjcmliZSgpIHtcbiAgICBpZiAoIXRoaXMuaGFzTGlzdGVuZXJzKCkpIHtcbiAgICAgIHRoaXMuI2NsZWFudXA/LigpO1xuICAgICAgdGhpcy4jY2xlYW51cCA9IHZvaWQgMDtcbiAgICB9XG4gIH1cbiAgc2V0RXZlbnRMaXN0ZW5lcihzZXR1cCkge1xuICAgIHRoaXMuI3NldHVwID0gc2V0dXA7XG4gICAgdGhpcy4jY2xlYW51cD8uKCk7XG4gICAgdGhpcy4jY2xlYW51cCA9IHNldHVwKChmb2N1c2VkKSA9PiB7XG4gICAgICBpZiAodHlwZW9mIGZvY3VzZWQgPT09IFwiYm9vbGVhblwiKSB7XG4gICAgICAgIHRoaXMuc2V0Rm9jdXNlZChmb2N1c2VkKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMub25Gb2N1cygpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG4gIHNldEZvY3VzZWQoZm9jdXNlZCkge1xuICAgIGNvbnN0IGNoYW5nZWQgPSB0aGlzLiNmb2N1c2VkICE9PSBmb2N1c2VkO1xuICAgIGlmIChjaGFuZ2VkKSB7XG4gICAgICB0aGlzLiNmb2N1c2VkID0gZm9jdXNlZDtcbiAgICAgIHRoaXMub25Gb2N1cygpO1xuICAgIH1cbiAgfVxuICBvbkZvY3VzKCkge1xuICAgIHRoaXMubGlzdGVuZXJzLmZvckVhY2goKGxpc3RlbmVyKSA9PiB7XG4gICAgICBsaXN0ZW5lcigpO1xuICAgIH0pO1xuICB9XG4gIGlzRm9jdXNlZCgpIHtcbiAgICBpZiAodHlwZW9mIHRoaXMuI2ZvY3VzZWQgPT09IFwiYm9vbGVhblwiKSB7XG4gICAgICByZXR1cm4gdGhpcy4jZm9jdXNlZDtcbiAgICB9XG4gICAgcmV0dXJuIGdsb2JhbFRoaXMuZG9jdW1lbnQ/LnZpc2liaWxpdHlTdGF0ZSAhPT0gXCJoaWRkZW5cIjtcbiAgfVxufTtcbnZhciBmb2N1c01hbmFnZXIgPSBuZXcgRm9jdXNNYW5hZ2VyKCk7XG5leHBvcnQge1xuICBGb2N1c01hbmFnZXIsXG4gIGZvY3VzTWFuYWdlclxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWZvY3VzTWFuYWdlci5qcy5tYXAiXSwibmFtZXMiOlsiU3Vic2NyaWJhYmxlIiwiaXNTZXJ2ZXIiLCJGb2N1c01hbmFnZXIiLCJmb2N1c2VkIiwiY2xlYW51cCIsInNldHVwIiwiY29uc3RydWN0b3IiLCJvbkZvY3VzIiwid2luZG93IiwiYWRkRXZlbnRMaXN0ZW5lciIsImxpc3RlbmVyIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsIm9uU3Vic2NyaWJlIiwic2V0RXZlbnRMaXN0ZW5lciIsIm9uVW5zdWJzY3JpYmUiLCJoYXNMaXN0ZW5lcnMiLCJzZXRGb2N1c2VkIiwiY2hhbmdlZCIsImxpc3RlbmVycyIsImZvckVhY2giLCJpc0ZvY3VzZWQiLCJnbG9iYWxUaGlzIiwiZG9jdW1lbnQiLCJ2aXNpYmlsaXR5U3RhdGUiLCJmb2N1c01hbmFnZXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@tanstack/query-core/build/modern/focusManager.js\n',
      );

      /***/
    },

  /***/ "(ssr)/../node_modules/@tanstack/query-core/build/modern/infiniteQueryBehavior.js":
    /*!**********************************************************************************!*\
  !*** ../node_modules/@tanstack/query-core/build/modern/infiniteQueryBehavior.js ***!
  \**********************************************************************************/
    /***/ (
      __unused_webpack___webpack_module__,
      __webpack_exports__,
      __webpack_require__,
    ) => {
      eval(
        '__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   hasNextPage: () => (/* binding */ hasNextPage),\n/* harmony export */   hasPreviousPage: () => (/* binding */ hasPreviousPage),\n/* harmony export */   infiniteQueryBehavior: () => (/* binding */ infiniteQueryBehavior)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ "(ssr)/../node_modules/@tanstack/query-core/build/modern/utils.js");\n// src/infiniteQueryBehavior.ts\n\nfunction infiniteQueryBehavior(pages) {\n    return {\n        onFetch: (context, query)=>{\n            const fetchFn = async ()=>{\n                const options = context.options;\n                const direction = context.fetchOptions?.meta?.fetchMore?.direction;\n                const oldPages = context.state.data?.pages || [];\n                const oldPageParams = context.state.data?.pageParams || [];\n                const empty = {\n                    pages: [],\n                    pageParams: []\n                };\n                let cancelled = false;\n                const addSignalProperty = (object)=>{\n                    Object.defineProperty(object, "signal", {\n                        enumerable: true,\n                        get: ()=>{\n                            if (context.signal.aborted) {\n                                cancelled = true;\n                            } else {\n                                context.signal.addEventListener("abort", ()=>{\n                                    cancelled = true;\n                                });\n                            }\n                            return context.signal;\n                        }\n                    });\n                };\n                const queryFn = context.options.queryFn || (()=>Promise.reject(new Error(`Missing queryFn: \'${context.options.queryHash}\'`)));\n                const fetchPage = async (data, param, previous)=>{\n                    if (cancelled) {\n                        return Promise.reject();\n                    }\n                    if (param == null && data.pages.length) {\n                        return Promise.resolve(data);\n                    }\n                    const queryFnContext = {\n                        queryKey: context.queryKey,\n                        pageParam: param,\n                        direction: previous ? "backward" : "forward",\n                        meta: context.options.meta\n                    };\n                    addSignalProperty(queryFnContext);\n                    const page = await queryFn(queryFnContext);\n                    const { maxPages } = context.options;\n                    const addTo = previous ? _utils_js__WEBPACK_IMPORTED_MODULE_0__.addToStart : _utils_js__WEBPACK_IMPORTED_MODULE_0__.addToEnd;\n                    return {\n                        pages: addTo(data.pages, page, maxPages),\n                        pageParams: addTo(data.pageParams, param, maxPages)\n                    };\n                };\n                let result;\n                if (direction && oldPages.length) {\n                    const previous = direction === "backward";\n                    const pageParamFn = previous ? getPreviousPageParam : getNextPageParam;\n                    const oldData = {\n                        pages: oldPages,\n                        pageParams: oldPageParams\n                    };\n                    const param = pageParamFn(options, oldData);\n                    result = await fetchPage(oldData, param, previous);\n                } else {\n                    result = await fetchPage(empty, oldPageParams[0] ?? options.initialPageParam);\n                    const remainingPages = pages ?? oldPages.length;\n                    for(let i = 1; i < remainingPages; i++){\n                        const param = getNextPageParam(options, result);\n                        result = await fetchPage(result, param);\n                    }\n                }\n                return result;\n            };\n            if (context.options.persister) {\n                context.fetchFn = ()=>{\n                    return context.options.persister?.(fetchFn, {\n                        queryKey: context.queryKey,\n                        meta: context.options.meta,\n                        signal: context.signal\n                    }, query);\n                };\n            } else {\n                context.fetchFn = fetchFn;\n            }\n        }\n    };\n}\nfunction getNextPageParam(options, { pages, pageParams }) {\n    const lastIndex = pages.length - 1;\n    return options.getNextPageParam(pages[lastIndex], pages, pageParams[lastIndex], pageParams);\n}\nfunction getPreviousPageParam(options, { pages, pageParams }) {\n    return options.getPreviousPageParam?.(pages[0], pages, pageParams[0], pageParams);\n}\nfunction hasNextPage(options, data) {\n    if (!data) return false;\n    return getNextPageParam(options, data) != null;\n}\nfunction hasPreviousPage(options, data) {\n    if (!data || !options.getPreviousPageParam) return false;\n    return getPreviousPageParam(options, data) != null;\n}\n //# sourceMappingURL=infiniteQueryBehavior.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@tanstack/query-core/build/modern/infiniteQueryBehavior.js\n',
      );

      /***/
    },

  /***/ "(ssr)/../node_modules/@tanstack/query-core/build/modern/infiniteQueryObserver.js":
    /*!**********************************************************************************!*\
  !*** ../node_modules/@tanstack/query-core/build/modern/infiniteQueryObserver.js ***!
  \**********************************************************************************/
    /***/ (
      __unused_webpack___webpack_module__,
      __webpack_exports__,
      __webpack_require__,
    ) => {
      eval(
        '__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   InfiniteQueryObserver: () => (/* binding */ InfiniteQueryObserver)\n/* harmony export */ });\n/* harmony import */ var _queryObserver_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./queryObserver.js */ "(ssr)/../node_modules/@tanstack/query-core/build/modern/queryObserver.js");\n/* harmony import */ var _infiniteQueryBehavior_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./infiniteQueryBehavior.js */ "(ssr)/../node_modules/@tanstack/query-core/build/modern/infiniteQueryBehavior.js");\n// src/infiniteQueryObserver.ts\n\n\nvar InfiniteQueryObserver = class extends _queryObserver_js__WEBPACK_IMPORTED_MODULE_0__.QueryObserver {\n    // eslint-disable-next-line @typescript-eslint/no-useless-constructor\n    constructor(client, options){\n        super(client, options);\n    }\n    bindMethods() {\n        super.bindMethods();\n        this.fetchNextPage = this.fetchNextPage.bind(this);\n        this.fetchPreviousPage = this.fetchPreviousPage.bind(this);\n    }\n    setOptions(options, notifyOptions) {\n        super.setOptions({\n            ...options,\n            behavior: (0,_infiniteQueryBehavior_js__WEBPACK_IMPORTED_MODULE_1__.infiniteQueryBehavior)()\n        }, notifyOptions);\n    }\n    getOptimisticResult(options) {\n        options.behavior = (0,_infiniteQueryBehavior_js__WEBPACK_IMPORTED_MODULE_1__.infiniteQueryBehavior)();\n        return super.getOptimisticResult(options);\n    }\n    fetchNextPage(options) {\n        return this.fetch({\n            ...options,\n            meta: {\n                fetchMore: {\n                    direction: "forward"\n                }\n            }\n        });\n    }\n    fetchPreviousPage(options) {\n        return this.fetch({\n            ...options,\n            meta: {\n                fetchMore: {\n                    direction: "backward"\n                }\n            }\n        });\n    }\n    createResult(query, options) {\n        const { state } = query;\n        const result = super.createResult(query, options);\n        const { isFetching, isRefetching } = result;\n        const isFetchingNextPage = isFetching && state.fetchMeta?.fetchMore?.direction === "forward";\n        const isFetchingPreviousPage = isFetching && state.fetchMeta?.fetchMore?.direction === "backward";\n        return {\n            ...result,\n            fetchNextPage: this.fetchNextPage,\n            fetchPreviousPage: this.fetchPreviousPage,\n            hasNextPage: (0,_infiniteQueryBehavior_js__WEBPACK_IMPORTED_MODULE_1__.hasNextPage)(options, state.data),\n            hasPreviousPage: (0,_infiniteQueryBehavior_js__WEBPACK_IMPORTED_MODULE_1__.hasPreviousPage)(options, state.data),\n            isFetchingNextPage,\n            isFetchingPreviousPage,\n            isRefetching: isRefetching && !isFetchingNextPage && !isFetchingPreviousPage\n        };\n    }\n};\n //# sourceMappingURL=infiniteQueryObserver.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9xdWVyeS1jb3JlL2J1aWxkL21vZGVybi9pbmZpbml0ZVF1ZXJ5T2JzZXJ2ZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsK0JBQStCO0FBQ29CO0FBS2Y7QUFDcEMsSUFBSUksd0JBQXdCLGNBQWNKLDREQUFhQTtJQUNyRCxxRUFBcUU7SUFDckVLLFlBQVlDLE1BQU0sRUFBRUMsT0FBTyxDQUFFO1FBQzNCLEtBQUssQ0FBQ0QsUUFBUUM7SUFDaEI7SUFDQUMsY0FBYztRQUNaLEtBQUssQ0FBQ0E7UUFDTixJQUFJLENBQUNDLGFBQWEsR0FBRyxJQUFJLENBQUNBLGFBQWEsQ0FBQ0MsSUFBSSxDQUFDLElBQUk7UUFDakQsSUFBSSxDQUFDQyxpQkFBaUIsR0FBRyxJQUFJLENBQUNBLGlCQUFpQixDQUFDRCxJQUFJLENBQUMsSUFBSTtJQUMzRDtJQUNBRSxXQUFXTCxPQUFPLEVBQUVNLGFBQWEsRUFBRTtRQUNqQyxLQUFLLENBQUNELFdBQ0o7WUFDRSxHQUFHTCxPQUFPO1lBQ1ZPLFVBQVVYLGdGQUFxQkE7UUFDakMsR0FDQVU7SUFFSjtJQUNBRSxvQkFBb0JSLE9BQU8sRUFBRTtRQUMzQkEsUUFBUU8sUUFBUSxHQUFHWCxnRkFBcUJBO1FBQ3hDLE9BQU8sS0FBSyxDQUFDWSxvQkFBb0JSO0lBQ25DO0lBQ0FFLGNBQWNGLE9BQU8sRUFBRTtRQUNyQixPQUFPLElBQUksQ0FBQ1MsS0FBSyxDQUFDO1lBQ2hCLEdBQUdULE9BQU87WUFDVlUsTUFBTTtnQkFDSkMsV0FBVztvQkFBRUMsV0FBVztnQkFBVTtZQUNwQztRQUNGO0lBQ0Y7SUFDQVIsa0JBQWtCSixPQUFPLEVBQUU7UUFDekIsT0FBTyxJQUFJLENBQUNTLEtBQUssQ0FBQztZQUNoQixHQUFHVCxPQUFPO1lBQ1ZVLE1BQU07Z0JBQ0pDLFdBQVc7b0JBQUVDLFdBQVc7Z0JBQVc7WUFDckM7UUFDRjtJQUNGO0lBQ0FDLGFBQWFDLEtBQUssRUFBRWQsT0FBTyxFQUFFO1FBQzNCLE1BQU0sRUFBRWUsS0FBSyxFQUFFLEdBQUdEO1FBQ2xCLE1BQU1FLFNBQVMsS0FBSyxDQUFDSCxhQUFhQyxPQUFPZDtRQUN6QyxNQUFNLEVBQUVpQixVQUFVLEVBQUVDLFlBQVksRUFBRSxHQUFHRjtRQUNyQyxNQUFNRyxxQkFBcUJGLGNBQWNGLE1BQU1LLFNBQVMsRUFBRVQsV0FBV0MsY0FBYztRQUNuRixNQUFNUyx5QkFBeUJKLGNBQWNGLE1BQU1LLFNBQVMsRUFBRVQsV0FBV0MsY0FBYztRQUN2RixPQUFPO1lBQ0wsR0FBR0ksTUFBTTtZQUNUZCxlQUFlLElBQUksQ0FBQ0EsYUFBYTtZQUNqQ0UsbUJBQW1CLElBQUksQ0FBQ0EsaUJBQWlCO1lBQ3pDVixhQUFhQSxzRUFBV0EsQ0FBQ00sU0FBU2UsTUFBTU8sSUFBSTtZQUM1QzNCLGlCQUFpQkEsMEVBQWVBLENBQUNLLFNBQVNlLE1BQU1PLElBQUk7WUFDcERIO1lBQ0FFO1lBQ0FILGNBQWNBLGdCQUFnQixDQUFDQyxzQkFBc0IsQ0FBQ0U7UUFDeEQ7SUFDRjtBQUNGO0FBR0UsQ0FDRixpREFBaUQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oYWNraHViYi8uLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3F1ZXJ5LWNvcmUvYnVpbGQvbW9kZXJuL2luZmluaXRlUXVlcnlPYnNlcnZlci5qcz9jYzE5Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9pbmZpbml0ZVF1ZXJ5T2JzZXJ2ZXIudHNcbmltcG9ydCB7IFF1ZXJ5T2JzZXJ2ZXIgfSBmcm9tIFwiLi9xdWVyeU9ic2VydmVyLmpzXCI7XG5pbXBvcnQge1xuICBoYXNOZXh0UGFnZSxcbiAgaGFzUHJldmlvdXNQYWdlLFxuICBpbmZpbml0ZVF1ZXJ5QmVoYXZpb3Jcbn0gZnJvbSBcIi4vaW5maW5pdGVRdWVyeUJlaGF2aW9yLmpzXCI7XG52YXIgSW5maW5pdGVRdWVyeU9ic2VydmVyID0gY2xhc3MgZXh0ZW5kcyBRdWVyeU9ic2VydmVyIHtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11c2VsZXNzLWNvbnN0cnVjdG9yXG4gIGNvbnN0cnVjdG9yKGNsaWVudCwgb3B0aW9ucykge1xuICAgIHN1cGVyKGNsaWVudCwgb3B0aW9ucyk7XG4gIH1cbiAgYmluZE1ldGhvZHMoKSB7XG4gICAgc3VwZXIuYmluZE1ldGhvZHMoKTtcbiAgICB0aGlzLmZldGNoTmV4dFBhZ2UgPSB0aGlzLmZldGNoTmV4dFBhZ2UuYmluZCh0aGlzKTtcbiAgICB0aGlzLmZldGNoUHJldmlvdXNQYWdlID0gdGhpcy5mZXRjaFByZXZpb3VzUGFnZS5iaW5kKHRoaXMpO1xuICB9XG4gIHNldE9wdGlvbnMob3B0aW9ucywgbm90aWZ5T3B0aW9ucykge1xuICAgIHN1cGVyLnNldE9wdGlvbnMoXG4gICAgICB7XG4gICAgICAgIC4uLm9wdGlvbnMsXG4gICAgICAgIGJlaGF2aW9yOiBpbmZpbml0ZVF1ZXJ5QmVoYXZpb3IoKVxuICAgICAgfSxcbiAgICAgIG5vdGlmeU9wdGlvbnNcbiAgICApO1xuICB9XG4gIGdldE9wdGltaXN0aWNSZXN1bHQob3B0aW9ucykge1xuICAgIG9wdGlvbnMuYmVoYXZpb3IgPSBpbmZpbml0ZVF1ZXJ5QmVoYXZpb3IoKTtcbiAgICByZXR1cm4gc3VwZXIuZ2V0T3B0aW1pc3RpY1Jlc3VsdChvcHRpb25zKTtcbiAgfVxuICBmZXRjaE5leHRQYWdlKG9wdGlvbnMpIHtcbiAgICByZXR1cm4gdGhpcy5mZXRjaCh7XG4gICAgICAuLi5vcHRpb25zLFxuICAgICAgbWV0YToge1xuICAgICAgICBmZXRjaE1vcmU6IHsgZGlyZWN0aW9uOiBcImZvcndhcmRcIiB9XG4gICAgICB9XG4gICAgfSk7XG4gIH1cbiAgZmV0Y2hQcmV2aW91c1BhZ2Uob3B0aW9ucykge1xuICAgIHJldHVybiB0aGlzLmZldGNoKHtcbiAgICAgIC4uLm9wdGlvbnMsXG4gICAgICBtZXRhOiB7XG4gICAgICAgIGZldGNoTW9yZTogeyBkaXJlY3Rpb246IFwiYmFja3dhcmRcIiB9XG4gICAgICB9XG4gICAgfSk7XG4gIH1cbiAgY3JlYXRlUmVzdWx0KHF1ZXJ5LCBvcHRpb25zKSB7XG4gICAgY29uc3QgeyBzdGF0ZSB9ID0gcXVlcnk7XG4gICAgY29uc3QgcmVzdWx0ID0gc3VwZXIuY3JlYXRlUmVzdWx0KHF1ZXJ5LCBvcHRpb25zKTtcbiAgICBjb25zdCB7IGlzRmV0Y2hpbmcsIGlzUmVmZXRjaGluZyB9ID0gcmVzdWx0O1xuICAgIGNvbnN0IGlzRmV0Y2hpbmdOZXh0UGFnZSA9IGlzRmV0Y2hpbmcgJiYgc3RhdGUuZmV0Y2hNZXRhPy5mZXRjaE1vcmU/LmRpcmVjdGlvbiA9PT0gXCJmb3J3YXJkXCI7XG4gICAgY29uc3QgaXNGZXRjaGluZ1ByZXZpb3VzUGFnZSA9IGlzRmV0Y2hpbmcgJiYgc3RhdGUuZmV0Y2hNZXRhPy5mZXRjaE1vcmU/LmRpcmVjdGlvbiA9PT0gXCJiYWNrd2FyZFwiO1xuICAgIHJldHVybiB7XG4gICAgICAuLi5yZXN1bHQsXG4gICAgICBmZXRjaE5leHRQYWdlOiB0aGlzLmZldGNoTmV4dFBhZ2UsXG4gICAgICBmZXRjaFByZXZpb3VzUGFnZTogdGhpcy5mZXRjaFByZXZpb3VzUGFnZSxcbiAgICAgIGhhc05leHRQYWdlOiBoYXNOZXh0UGFnZShvcHRpb25zLCBzdGF0ZS5kYXRhKSxcbiAgICAgIGhhc1ByZXZpb3VzUGFnZTogaGFzUHJldmlvdXNQYWdlKG9wdGlvbnMsIHN0YXRlLmRhdGEpLFxuICAgICAgaXNGZXRjaGluZ05leHRQYWdlLFxuICAgICAgaXNGZXRjaGluZ1ByZXZpb3VzUGFnZSxcbiAgICAgIGlzUmVmZXRjaGluZzogaXNSZWZldGNoaW5nICYmICFpc0ZldGNoaW5nTmV4dFBhZ2UgJiYgIWlzRmV0Y2hpbmdQcmV2aW91c1BhZ2VcbiAgICB9O1xuICB9XG59O1xuZXhwb3J0IHtcbiAgSW5maW5pdGVRdWVyeU9ic2VydmVyXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5maW5pdGVRdWVyeU9ic2VydmVyLmpzLm1hcCJdLCJuYW1lcyI6WyJRdWVyeU9ic2VydmVyIiwiaGFzTmV4dFBhZ2UiLCJoYXNQcmV2aW91c1BhZ2UiLCJpbmZpbml0ZVF1ZXJ5QmVoYXZpb3IiLCJJbmZpbml0ZVF1ZXJ5T2JzZXJ2ZXIiLCJjb25zdHJ1Y3RvciIsImNsaWVudCIsIm9wdGlvbnMiLCJiaW5kTWV0aG9kcyIsImZldGNoTmV4dFBhZ2UiLCJiaW5kIiwiZmV0Y2hQcmV2aW91c1BhZ2UiLCJzZXRPcHRpb25zIiwibm90aWZ5T3B0aW9ucyIsImJlaGF2aW9yIiwiZ2V0T3B0aW1pc3RpY1Jlc3VsdCIsImZldGNoIiwibWV0YSIsImZldGNoTW9yZSIsImRpcmVjdGlvbiIsImNyZWF0ZVJlc3VsdCIsInF1ZXJ5Iiwic3RhdGUiLCJyZXN1bHQiLCJpc0ZldGNoaW5nIiwiaXNSZWZldGNoaW5nIiwiaXNGZXRjaGluZ05leHRQYWdlIiwiZmV0Y2hNZXRhIiwiaXNGZXRjaGluZ1ByZXZpb3VzUGFnZSIsImRhdGEiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@tanstack/query-core/build/modern/infiniteQueryObserver.js\n',
      );

      /***/
    },

  /***/ "(ssr)/../node_modules/@tanstack/query-core/build/modern/mutation.js":
    /*!*********************************************************************!*\
  !*** ../node_modules/@tanstack/query-core/build/modern/mutation.js ***!
  \*********************************************************************/
    /***/ (
      __unused_webpack___webpack_module__,
      __webpack_exports__,
      __webpack_require__,
    ) => {
      eval(
        '__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Mutation: () => (/* binding */ Mutation),\n/* harmony export */   getDefaultState: () => (/* binding */ getDefaultState)\n/* harmony export */ });\n/* harmony import */ var _notifyManager_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./notifyManager.js */ "(ssr)/../node_modules/@tanstack/query-core/build/modern/notifyManager.js");\n/* harmony import */ var _removable_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./removable.js */ "(ssr)/../node_modules/@tanstack/query-core/build/modern/removable.js");\n/* harmony import */ var _retryer_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./retryer.js */ "(ssr)/../node_modules/@tanstack/query-core/build/modern/retryer.js");\n// src/mutation.ts\n\n\n\nvar Mutation = class extends _removable_js__WEBPACK_IMPORTED_MODULE_0__.Removable {\n    constructor(config){\n        super();\n        this.mutationId = config.mutationId;\n        this.#defaultOptions = config.defaultOptions;\n        this.#mutationCache = config.mutationCache;\n        this.#observers = [];\n        this.state = config.state || getDefaultState();\n        this.setOptions(config.options);\n        this.scheduleGc();\n    }\n    #observers;\n    #defaultOptions;\n    #mutationCache;\n    #retryer;\n    setOptions(options) {\n        this.options = {\n            ...this.#defaultOptions,\n            ...options\n        };\n        this.updateGcTime(this.options.gcTime);\n    }\n    get meta() {\n        return this.options.meta;\n    }\n    addObserver(observer) {\n        if (!this.#observers.includes(observer)) {\n            this.#observers.push(observer);\n            this.clearGcTimeout();\n            this.#mutationCache.notify({\n                type: "observerAdded",\n                mutation: this,\n                observer\n            });\n        }\n    }\n    removeObserver(observer) {\n        this.#observers = this.#observers.filter((x)=>x !== observer);\n        this.scheduleGc();\n        this.#mutationCache.notify({\n            type: "observerRemoved",\n            mutation: this,\n            observer\n        });\n    }\n    optionalRemove() {\n        if (!this.#observers.length) {\n            if (this.state.status === "pending") {\n                this.scheduleGc();\n            } else {\n                this.#mutationCache.remove(this);\n            }\n        }\n    }\n    continue() {\n        return this.#retryer?.continue() ?? // continuing a mutation assumes that variables are set, mutation must have been dehydrated before\n        this.execute(this.state.variables);\n    }\n    async execute(variables) {\n        const executeMutation = ()=>{\n            this.#retryer = (0,_retryer_js__WEBPACK_IMPORTED_MODULE_1__.createRetryer)({\n                fn: ()=>{\n                    if (!this.options.mutationFn) {\n                        return Promise.reject(new Error("No mutationFn found"));\n                    }\n                    return this.options.mutationFn(variables);\n                },\n                onFail: (failureCount, error)=>{\n                    this.#dispatch({\n                        type: "failed",\n                        failureCount,\n                        error\n                    });\n                },\n                onPause: ()=>{\n                    this.#dispatch({\n                        type: "pause"\n                    });\n                },\n                onContinue: ()=>{\n                    this.#dispatch({\n                        type: "continue"\n                    });\n                },\n                retry: this.options.retry ?? 0,\n                retryDelay: this.options.retryDelay,\n                networkMode: this.options.networkMode\n            });\n            return this.#retryer.promise;\n        };\n        const restored = this.state.status === "pending";\n        try {\n            if (!restored) {\n                this.#dispatch({\n                    type: "pending",\n                    variables\n                });\n                await this.#mutationCache.config.onMutate?.(variables, this);\n                const context = await this.options.onMutate?.(variables);\n                if (context !== this.state.context) {\n                    this.#dispatch({\n                        type: "pending",\n                        context,\n                        variables\n                    });\n                }\n            }\n            const data = await executeMutation();\n            await this.#mutationCache.config.onSuccess?.(data, variables, this.state.context, this);\n            await this.options.onSuccess?.(data, variables, this.state.context);\n            await this.#mutationCache.config.onSettled?.(data, null, this.state.variables, this.state.context, this);\n            await this.options.onSettled?.(data, null, variables, this.state.context);\n            this.#dispatch({\n                type: "success",\n                data\n            });\n            return data;\n        } catch (error) {\n            try {\n                await this.#mutationCache.config.onError?.(error, variables, this.state.context, this);\n                await this.options.onError?.(error, variables, this.state.context);\n                await this.#mutationCache.config.onSettled?.(void 0, error, this.state.variables, this.state.context, this);\n                await this.options.onSettled?.(void 0, error, variables, this.state.context);\n                throw error;\n            } finally{\n                this.#dispatch({\n                    type: "error",\n                    error\n                });\n            }\n        }\n    }\n    #dispatch(action) {\n        const reducer = (state)=>{\n            switch(action.type){\n                case "failed":\n                    return {\n                        ...state,\n                        failureCount: action.failureCount,\n                        failureReason: action.error\n                    };\n                case "pause":\n                    return {\n                        ...state,\n                        isPaused: true\n                    };\n                case "continue":\n                    return {\n                        ...state,\n                        isPaused: false\n                    };\n                case "pending":\n                    return {\n                        ...state,\n                        context: action.context,\n                        data: void 0,\n                        failureCount: 0,\n                        failureReason: null,\n                        error: null,\n                        isPaused: !(0,_retryer_js__WEBPACK_IMPORTED_MODULE_1__.canFetch)(this.options.networkMode),\n                        status: "pending",\n                        variables: action.variables,\n                        submittedAt: Date.now()\n                    };\n                case "success":\n                    return {\n                        ...state,\n                        data: action.data,\n                        failureCount: 0,\n                        failureReason: null,\n                        error: null,\n                        status: "success",\n                        isPaused: false\n                    };\n                case "error":\n                    return {\n                        ...state,\n                        data: void 0,\n                        error: action.error,\n                        failureCount: state.failureCount + 1,\n                        failureReason: action.error,\n                        isPaused: false,\n                        status: "error"\n                    };\n            }\n        };\n        this.state = reducer(this.state);\n        _notifyManager_js__WEBPACK_IMPORTED_MODULE_2__.notifyManager.batch(()=>{\n            this.#observers.forEach((observer)=>{\n                observer.onMutationUpdate(action);\n            });\n            this.#mutationCache.notify({\n                mutation: this,\n                type: "updated",\n                action\n            });\n        });\n    }\n};\nfunction getDefaultState() {\n    return {\n        context: void 0,\n        data: void 0,\n        error: null,\n        failureCount: 0,\n        failureReason: null,\n        isPaused: false,\n        status: "idle",\n        variables: void 0,\n        submittedAt: 0\n    };\n}\n //# sourceMappingURL=mutation.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@tanstack/query-core/build/modern/mutation.js\n',
      );

      /***/
    },

  /***/ "(ssr)/../node_modules/@tanstack/query-core/build/modern/mutationCache.js":
    /*!**************************************************************************!*\
  !*** ../node_modules/@tanstack/query-core/build/modern/mutationCache.js ***!
  \**************************************************************************/
    /***/ (
      __unused_webpack___webpack_module__,
      __webpack_exports__,
      __webpack_require__,
    ) => {
      eval(
        '__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MutationCache: () => (/* binding */ MutationCache)\n/* harmony export */ });\n/* harmony import */ var _notifyManager_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./notifyManager.js */ "(ssr)/../node_modules/@tanstack/query-core/build/modern/notifyManager.js");\n/* harmony import */ var _mutation_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mutation.js */ "(ssr)/../node_modules/@tanstack/query-core/build/modern/mutation.js");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils.js */ "(ssr)/../node_modules/@tanstack/query-core/build/modern/utils.js");\n/* harmony import */ var _subscribable_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./subscribable.js */ "(ssr)/../node_modules/@tanstack/query-core/build/modern/subscribable.js");\n// src/mutationCache.ts\n\n\n\n\nvar MutationCache = class extends _subscribable_js__WEBPACK_IMPORTED_MODULE_0__.Subscribable {\n    constructor(config = {}){\n        super();\n        this.config = config;\n        this.#mutations = [];\n        this.#mutationId = 0;\n    }\n    #mutations;\n    #mutationId;\n    #resuming;\n    build(client, options, state) {\n        const mutation = new _mutation_js__WEBPACK_IMPORTED_MODULE_1__.Mutation({\n            mutationCache: this,\n            mutationId: ++this.#mutationId,\n            options: client.defaultMutationOptions(options),\n            state\n        });\n        this.add(mutation);\n        return mutation;\n    }\n    add(mutation) {\n        this.#mutations.push(mutation);\n        this.notify({\n            type: "added",\n            mutation\n        });\n    }\n    remove(mutation) {\n        this.#mutations = this.#mutations.filter((x)=>x !== mutation);\n        this.notify({\n            type: "removed",\n            mutation\n        });\n    }\n    clear() {\n        _notifyManager_js__WEBPACK_IMPORTED_MODULE_2__.notifyManager.batch(()=>{\n            this.#mutations.forEach((mutation)=>{\n                this.remove(mutation);\n            });\n        });\n    }\n    getAll() {\n        return this.#mutations;\n    }\n    find(filters) {\n        const defaultedFilters = {\n            exact: true,\n            ...filters\n        };\n        return this.#mutations.find((mutation)=>(0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.matchMutation)(defaultedFilters, mutation));\n    }\n    findAll(filters = {}) {\n        return this.#mutations.filter((mutation)=>(0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.matchMutation)(filters, mutation));\n    }\n    notify(event) {\n        _notifyManager_js__WEBPACK_IMPORTED_MODULE_2__.notifyManager.batch(()=>{\n            this.listeners.forEach((listener)=>{\n                listener(event);\n            });\n        });\n    }\n    resumePausedMutations() {\n        this.#resuming = (this.#resuming ?? Promise.resolve()).then(()=>{\n            const pausedMutations = this.#mutations.filter((x)=>x.state.isPaused);\n            return _notifyManager_js__WEBPACK_IMPORTED_MODULE_2__.notifyManager.batch(()=>pausedMutations.reduce((promise, mutation)=>promise.then(()=>mutation.continue().catch(_utils_js__WEBPACK_IMPORTED_MODULE_3__.noop)), Promise.resolve()));\n        }).then(()=>{\n            this.#resuming = void 0;\n        });\n        return this.#resuming;\n    }\n};\n //# sourceMappingURL=mutationCache.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9xdWVyeS1jb3JlL2J1aWxkL21vZGVybi9tdXRhdGlvbkNhY2hlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUEsdUJBQXVCO0FBQzRCO0FBQ1Y7QUFDUTtBQUNBO0FBQ2pELElBQUlLLGdCQUFnQixjQUFjRCwwREFBWUE7SUFDNUNFLFlBQVlDLFNBQVMsQ0FBQyxDQUFDLENBQUU7UUFDdkIsS0FBSztRQUNMLElBQUksQ0FBQ0EsTUFBTSxHQUFHQTtRQUNkLElBQUksQ0FBQyxDQUFDQyxTQUFTLEdBQUcsRUFBRTtRQUNwQixJQUFJLENBQUMsQ0FBQ0MsVUFBVSxHQUFHO0lBQ3JCO0lBQ0EsQ0FBQ0QsU0FBUyxDQUFDO0lBQ1gsQ0FBQ0MsVUFBVSxDQUFDO0lBQ1osQ0FBQ0MsUUFBUSxDQUFDO0lBQ1ZDLE1BQU1DLE1BQU0sRUFBRUMsT0FBTyxFQUFFQyxLQUFLLEVBQUU7UUFDNUIsTUFBTUMsV0FBVyxJQUFJZCxrREFBUUEsQ0FBQztZQUM1QmUsZUFBZSxJQUFJO1lBQ25CUCxZQUFZLEVBQUUsSUFBSSxDQUFDLENBQUNBLFVBQVU7WUFDOUJJLFNBQVNELE9BQU9LLHNCQUFzQixDQUFDSjtZQUN2Q0M7UUFDRjtRQUNBLElBQUksQ0FBQ0ksR0FBRyxDQUFDSDtRQUNULE9BQU9BO0lBQ1Q7SUFDQUcsSUFBSUgsUUFBUSxFQUFFO1FBQ1osSUFBSSxDQUFDLENBQUNQLFNBQVMsQ0FBQ1csSUFBSSxDQUFDSjtRQUNyQixJQUFJLENBQUNLLE1BQU0sQ0FBQztZQUFFQyxNQUFNO1lBQVNOO1FBQVM7SUFDeEM7SUFDQU8sT0FBT1AsUUFBUSxFQUFFO1FBQ2YsSUFBSSxDQUFDLENBQUNQLFNBQVMsR0FBRyxJQUFJLENBQUMsQ0FBQ0EsU0FBUyxDQUFDZSxNQUFNLENBQUMsQ0FBQ0MsSUFBTUEsTUFBTVQ7UUFDdEQsSUFBSSxDQUFDSyxNQUFNLENBQUM7WUFBRUMsTUFBTTtZQUFXTjtRQUFTO0lBQzFDO0lBQ0FVLFFBQVE7UUFDTnpCLDREQUFhQSxDQUFDMEIsS0FBSyxDQUFDO1lBQ2xCLElBQUksQ0FBQyxDQUFDbEIsU0FBUyxDQUFDbUIsT0FBTyxDQUFDLENBQUNaO2dCQUN2QixJQUFJLENBQUNPLE1BQU0sQ0FBQ1A7WUFDZDtRQUNGO0lBQ0Y7SUFDQWEsU0FBUztRQUNQLE9BQU8sSUFBSSxDQUFDLENBQUNwQixTQUFTO0lBQ3hCO0lBQ0FxQixLQUFLQyxPQUFPLEVBQUU7UUFDWixNQUFNQyxtQkFBbUI7WUFBRUMsT0FBTztZQUFNLEdBQUdGLE9BQU87UUFBQztRQUNuRCxPQUFPLElBQUksQ0FBQyxDQUFDdEIsU0FBUyxDQUFDcUIsSUFBSSxDQUN6QixDQUFDZCxXQUFhYix3REFBYUEsQ0FBQzZCLGtCQUFrQmhCO0lBRWxEO0lBQ0FrQixRQUFRSCxVQUFVLENBQUMsQ0FBQyxFQUFFO1FBQ3BCLE9BQU8sSUFBSSxDQUFDLENBQUN0QixTQUFTLENBQUNlLE1BQU0sQ0FDM0IsQ0FBQ1IsV0FBYWIsd0RBQWFBLENBQUM0QixTQUFTZjtJQUV6QztJQUNBSyxPQUFPYyxLQUFLLEVBQUU7UUFDWmxDLDREQUFhQSxDQUFDMEIsS0FBSyxDQUFDO1lBQ2xCLElBQUksQ0FBQ1MsU0FBUyxDQUFDUixPQUFPLENBQUMsQ0FBQ1M7Z0JBQ3RCQSxTQUFTRjtZQUNYO1FBQ0Y7SUFDRjtJQUNBRyx3QkFBd0I7UUFDdEIsSUFBSSxDQUFDLENBQUMzQixRQUFRLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQ0EsUUFBUSxJQUFJNEIsUUFBUUMsT0FBTyxFQUFDLEVBQUdDLElBQUksQ0FBQztZQUMxRCxNQUFNQyxrQkFBa0IsSUFBSSxDQUFDLENBQUNqQyxTQUFTLENBQUNlLE1BQU0sQ0FBQyxDQUFDQyxJQUFNQSxFQUFFVixLQUFLLENBQUM0QixRQUFRO1lBQ3RFLE9BQU8xQyw0REFBYUEsQ0FBQzBCLEtBQUssQ0FDeEIsSUFBTWUsZ0JBQWdCRSxNQUFNLENBQzFCLENBQUNDLFNBQVM3QixXQUFhNkIsUUFBUUosSUFBSSxDQUFDLElBQU16QixTQUFTOEIsUUFBUSxHQUFHQyxLQUFLLENBQUMzQywyQ0FBSUEsSUFDeEVtQyxRQUFRQyxPQUFPO1FBR3JCLEdBQUdDLElBQUksQ0FBQztZQUNOLElBQUksQ0FBQyxDQUFDOUIsUUFBUSxHQUFHLEtBQUs7UUFDeEI7UUFDQSxPQUFPLElBQUksQ0FBQyxDQUFDQSxRQUFRO0lBQ3ZCO0FBQ0Y7QUFHRSxDQUNGLHlDQUF5QyIsInNvdXJjZXMiOlsid2VicGFjazovL2hhY2todWJiLy4uL25vZGVfbW9kdWxlcy9AdGFuc3RhY2svcXVlcnktY29yZS9idWlsZC9tb2Rlcm4vbXV0YXRpb25DYWNoZS5qcz84ZTFlIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9tdXRhdGlvbkNhY2hlLnRzXG5pbXBvcnQgeyBub3RpZnlNYW5hZ2VyIH0gZnJvbSBcIi4vbm90aWZ5TWFuYWdlci5qc1wiO1xuaW1wb3J0IHsgTXV0YXRpb24gfSBmcm9tIFwiLi9tdXRhdGlvbi5qc1wiO1xuaW1wb3J0IHsgbWF0Y2hNdXRhdGlvbiwgbm9vcCB9IGZyb20gXCIuL3V0aWxzLmpzXCI7XG5pbXBvcnQgeyBTdWJzY3JpYmFibGUgfSBmcm9tIFwiLi9zdWJzY3JpYmFibGUuanNcIjtcbnZhciBNdXRhdGlvbkNhY2hlID0gY2xhc3MgZXh0ZW5kcyBTdWJzY3JpYmFibGUge1xuICBjb25zdHJ1Y3Rvcihjb25maWcgPSB7fSkge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5jb25maWcgPSBjb25maWc7XG4gICAgdGhpcy4jbXV0YXRpb25zID0gW107XG4gICAgdGhpcy4jbXV0YXRpb25JZCA9IDA7XG4gIH1cbiAgI211dGF0aW9ucztcbiAgI211dGF0aW9uSWQ7XG4gICNyZXN1bWluZztcbiAgYnVpbGQoY2xpZW50LCBvcHRpb25zLCBzdGF0ZSkge1xuICAgIGNvbnN0IG11dGF0aW9uID0gbmV3IE11dGF0aW9uKHtcbiAgICAgIG11dGF0aW9uQ2FjaGU6IHRoaXMsXG4gICAgICBtdXRhdGlvbklkOiArK3RoaXMuI211dGF0aW9uSWQsXG4gICAgICBvcHRpb25zOiBjbGllbnQuZGVmYXVsdE11dGF0aW9uT3B0aW9ucyhvcHRpb25zKSxcbiAgICAgIHN0YXRlXG4gICAgfSk7XG4gICAgdGhpcy5hZGQobXV0YXRpb24pO1xuICAgIHJldHVybiBtdXRhdGlvbjtcbiAgfVxuICBhZGQobXV0YXRpb24pIHtcbiAgICB0aGlzLiNtdXRhdGlvbnMucHVzaChtdXRhdGlvbik7XG4gICAgdGhpcy5ub3RpZnkoeyB0eXBlOiBcImFkZGVkXCIsIG11dGF0aW9uIH0pO1xuICB9XG4gIHJlbW92ZShtdXRhdGlvbikge1xuICAgIHRoaXMuI211dGF0aW9ucyA9IHRoaXMuI211dGF0aW9ucy5maWx0ZXIoKHgpID0+IHggIT09IG11dGF0aW9uKTtcbiAgICB0aGlzLm5vdGlmeSh7IHR5cGU6IFwicmVtb3ZlZFwiLCBtdXRhdGlvbiB9KTtcbiAgfVxuICBjbGVhcigpIHtcbiAgICBub3RpZnlNYW5hZ2VyLmJhdGNoKCgpID0+IHtcbiAgICAgIHRoaXMuI211dGF0aW9ucy5mb3JFYWNoKChtdXRhdGlvbikgPT4ge1xuICAgICAgICB0aGlzLnJlbW92ZShtdXRhdGlvbik7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuICBnZXRBbGwoKSB7XG4gICAgcmV0dXJuIHRoaXMuI211dGF0aW9ucztcbiAgfVxuICBmaW5kKGZpbHRlcnMpIHtcbiAgICBjb25zdCBkZWZhdWx0ZWRGaWx0ZXJzID0geyBleGFjdDogdHJ1ZSwgLi4uZmlsdGVycyB9O1xuICAgIHJldHVybiB0aGlzLiNtdXRhdGlvbnMuZmluZChcbiAgICAgIChtdXRhdGlvbikgPT4gbWF0Y2hNdXRhdGlvbihkZWZhdWx0ZWRGaWx0ZXJzLCBtdXRhdGlvbilcbiAgICApO1xuICB9XG4gIGZpbmRBbGwoZmlsdGVycyA9IHt9KSB7XG4gICAgcmV0dXJuIHRoaXMuI211dGF0aW9ucy5maWx0ZXIoXG4gICAgICAobXV0YXRpb24pID0+IG1hdGNoTXV0YXRpb24oZmlsdGVycywgbXV0YXRpb24pXG4gICAgKTtcbiAgfVxuICBub3RpZnkoZXZlbnQpIHtcbiAgICBub3RpZnlNYW5hZ2VyLmJhdGNoKCgpID0+IHtcbiAgICAgIHRoaXMubGlzdGVuZXJzLmZvckVhY2goKGxpc3RlbmVyKSA9PiB7XG4gICAgICAgIGxpc3RlbmVyKGV2ZW50KTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG4gIHJlc3VtZVBhdXNlZE11dGF0aW9ucygpIHtcbiAgICB0aGlzLiNyZXN1bWluZyA9ICh0aGlzLiNyZXN1bWluZyA/PyBQcm9taXNlLnJlc29sdmUoKSkudGhlbigoKSA9PiB7XG4gICAgICBjb25zdCBwYXVzZWRNdXRhdGlvbnMgPSB0aGlzLiNtdXRhdGlvbnMuZmlsdGVyKCh4KSA9PiB4LnN0YXRlLmlzUGF1c2VkKTtcbiAgICAgIHJldHVybiBub3RpZnlNYW5hZ2VyLmJhdGNoKFxuICAgICAgICAoKSA9PiBwYXVzZWRNdXRhdGlvbnMucmVkdWNlKFxuICAgICAgICAgIChwcm9taXNlLCBtdXRhdGlvbikgPT4gcHJvbWlzZS50aGVuKCgpID0+IG11dGF0aW9uLmNvbnRpbnVlKCkuY2F0Y2gobm9vcCkpLFxuICAgICAgICAgIFByb21pc2UucmVzb2x2ZSgpXG4gICAgICAgIClcbiAgICAgICk7XG4gICAgfSkudGhlbigoKSA9PiB7XG4gICAgICB0aGlzLiNyZXN1bWluZyA9IHZvaWQgMDtcbiAgICB9KTtcbiAgICByZXR1cm4gdGhpcy4jcmVzdW1pbmc7XG4gIH1cbn07XG5leHBvcnQge1xuICBNdXRhdGlvbkNhY2hlXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bXV0YXRpb25DYWNoZS5qcy5tYXAiXSwibmFtZXMiOlsibm90aWZ5TWFuYWdlciIsIk11dGF0aW9uIiwibWF0Y2hNdXRhdGlvbiIsIm5vb3AiLCJTdWJzY3JpYmFibGUiLCJNdXRhdGlvbkNhY2hlIiwiY29uc3RydWN0b3IiLCJjb25maWciLCJtdXRhdGlvbnMiLCJtdXRhdGlvbklkIiwicmVzdW1pbmciLCJidWlsZCIsImNsaWVudCIsIm9wdGlvbnMiLCJzdGF0ZSIsIm11dGF0aW9uIiwibXV0YXRpb25DYWNoZSIsImRlZmF1bHRNdXRhdGlvbk9wdGlvbnMiLCJhZGQiLCJwdXNoIiwibm90aWZ5IiwidHlwZSIsInJlbW92ZSIsImZpbHRlciIsIngiLCJjbGVhciIsImJhdGNoIiwiZm9yRWFjaCIsImdldEFsbCIsImZpbmQiLCJmaWx0ZXJzIiwiZGVmYXVsdGVkRmlsdGVycyIsImV4YWN0IiwiZmluZEFsbCIsImV2ZW50IiwibGlzdGVuZXJzIiwibGlzdGVuZXIiLCJyZXN1bWVQYXVzZWRNdXRhdGlvbnMiLCJQcm9taXNlIiwicmVzb2x2ZSIsInRoZW4iLCJwYXVzZWRNdXRhdGlvbnMiLCJpc1BhdXNlZCIsInJlZHVjZSIsInByb21pc2UiLCJjb250aW51ZSIsImNhdGNoIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@tanstack/query-core/build/modern/mutationCache.js\n',
      );

      /***/
    },

  /***/ "(ssr)/../node_modules/@tanstack/query-core/build/modern/notifyManager.js":
    /*!**************************************************************************!*\
  !*** ../node_modules/@tanstack/query-core/build/modern/notifyManager.js ***!
  \**************************************************************************/
    /***/ (
      __unused_webpack___webpack_module__,
      __webpack_exports__,
      __webpack_require__,
    ) => {
      eval(
        "__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createNotifyManager: () => (/* binding */ createNotifyManager),\n/* harmony export */   notifyManager: () => (/* binding */ notifyManager)\n/* harmony export */ });\n// src/notifyManager.ts\nfunction createNotifyManager() {\n    let queue = [];\n    let transactions = 0;\n    let notifyFn = (callback)=>{\n        callback();\n    };\n    let batchNotifyFn = (callback)=>{\n        callback();\n    };\n    let scheduleFn = (cb)=>setTimeout(cb, 0);\n    const setScheduler = (fn)=>{\n        scheduleFn = fn;\n    };\n    const batch = (callback)=>{\n        let result;\n        transactions++;\n        try {\n            result = callback();\n        } finally{\n            transactions--;\n            if (!transactions) {\n                flush();\n            }\n        }\n        return result;\n    };\n    const schedule = (callback)=>{\n        if (transactions) {\n            queue.push(callback);\n        } else {\n            scheduleFn(()=>{\n                notifyFn(callback);\n            });\n        }\n    };\n    const batchCalls = (callback)=>{\n        return (...args)=>{\n            schedule(()=>{\n                callback(...args);\n            });\n        };\n    };\n    const flush = ()=>{\n        const originalQueue = queue;\n        queue = [];\n        if (originalQueue.length) {\n            scheduleFn(()=>{\n                batchNotifyFn(()=>{\n                    originalQueue.forEach((callback)=>{\n                        notifyFn(callback);\n                    });\n                });\n            });\n        }\n    };\n    const setNotifyFunction = (fn)=>{\n        notifyFn = fn;\n    };\n    const setBatchNotifyFunction = (fn)=>{\n        batchNotifyFn = fn;\n    };\n    return {\n        batch,\n        batchCalls,\n        schedule,\n        setNotifyFunction,\n        setBatchNotifyFunction,\n        setScheduler\n    };\n}\nvar notifyManager = createNotifyManager();\n //# sourceMappingURL=notifyManager.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9xdWVyeS1jb3JlL2J1aWxkL21vZGVybi9ub3RpZnlNYW5hZ2VyLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsdUJBQXVCO0FBQ3ZCLFNBQVNBO0lBQ1AsSUFBSUMsUUFBUSxFQUFFO0lBQ2QsSUFBSUMsZUFBZTtJQUNuQixJQUFJQyxXQUFXLENBQUNDO1FBQ2RBO0lBQ0Y7SUFDQSxJQUFJQyxnQkFBZ0IsQ0FBQ0Q7UUFDbkJBO0lBQ0Y7SUFDQSxJQUFJRSxhQUFhLENBQUNDLEtBQU9DLFdBQVdELElBQUk7SUFDeEMsTUFBTUUsZUFBZSxDQUFDQztRQUNwQkosYUFBYUk7SUFDZjtJQUNBLE1BQU1DLFFBQVEsQ0FBQ1A7UUFDYixJQUFJUTtRQUNKVjtRQUNBLElBQUk7WUFDRlUsU0FBU1I7UUFDWCxTQUFVO1lBQ1JGO1lBQ0EsSUFBSSxDQUFDQSxjQUFjO2dCQUNqQlc7WUFDRjtRQUNGO1FBQ0EsT0FBT0Q7SUFDVDtJQUNBLE1BQU1FLFdBQVcsQ0FBQ1Y7UUFDaEIsSUFBSUYsY0FBYztZQUNoQkQsTUFBTWMsSUFBSSxDQUFDWDtRQUNiLE9BQU87WUFDTEUsV0FBVztnQkFDVEgsU0FBU0M7WUFDWDtRQUNGO0lBQ0Y7SUFDQSxNQUFNWSxhQUFhLENBQUNaO1FBQ2xCLE9BQU8sQ0FBQyxHQUFHYTtZQUNUSCxTQUFTO2dCQUNQVixZQUFZYTtZQUNkO1FBQ0Y7SUFDRjtJQUNBLE1BQU1KLFFBQVE7UUFDWixNQUFNSyxnQkFBZ0JqQjtRQUN0QkEsUUFBUSxFQUFFO1FBQ1YsSUFBSWlCLGNBQWNDLE1BQU0sRUFBRTtZQUN4QmIsV0FBVztnQkFDVEQsY0FBYztvQkFDWmEsY0FBY0UsT0FBTyxDQUFDLENBQUNoQjt3QkFDckJELFNBQVNDO29CQUNYO2dCQUNGO1lBQ0Y7UUFDRjtJQUNGO0lBQ0EsTUFBTWlCLG9CQUFvQixDQUFDWDtRQUN6QlAsV0FBV087SUFDYjtJQUNBLE1BQU1ZLHlCQUF5QixDQUFDWjtRQUM5QkwsZ0JBQWdCSztJQUNsQjtJQUNBLE9BQU87UUFDTEM7UUFDQUs7UUFDQUY7UUFDQU87UUFDQUM7UUFDQWI7SUFDRjtBQUNGO0FBQ0EsSUFBSWMsZ0JBQWdCdkI7QUFJbEIsQ0FDRix5Q0FBeUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oYWNraHViYi8uLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3F1ZXJ5LWNvcmUvYnVpbGQvbW9kZXJuL25vdGlmeU1hbmFnZXIuanM/MWEwZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvbm90aWZ5TWFuYWdlci50c1xuZnVuY3Rpb24gY3JlYXRlTm90aWZ5TWFuYWdlcigpIHtcbiAgbGV0IHF1ZXVlID0gW107XG4gIGxldCB0cmFuc2FjdGlvbnMgPSAwO1xuICBsZXQgbm90aWZ5Rm4gPSAoY2FsbGJhY2spID0+IHtcbiAgICBjYWxsYmFjaygpO1xuICB9O1xuICBsZXQgYmF0Y2hOb3RpZnlGbiA9IChjYWxsYmFjaykgPT4ge1xuICAgIGNhbGxiYWNrKCk7XG4gIH07XG4gIGxldCBzY2hlZHVsZUZuID0gKGNiKSA9PiBzZXRUaW1lb3V0KGNiLCAwKTtcbiAgY29uc3Qgc2V0U2NoZWR1bGVyID0gKGZuKSA9PiB7XG4gICAgc2NoZWR1bGVGbiA9IGZuO1xuICB9O1xuICBjb25zdCBiYXRjaCA9IChjYWxsYmFjaykgPT4ge1xuICAgIGxldCByZXN1bHQ7XG4gICAgdHJhbnNhY3Rpb25zKys7XG4gICAgdHJ5IHtcbiAgICAgIHJlc3VsdCA9IGNhbGxiYWNrKCk7XG4gICAgfSBmaW5hbGx5IHtcbiAgICAgIHRyYW5zYWN0aW9ucy0tO1xuICAgICAgaWYgKCF0cmFuc2FjdGlvbnMpIHtcbiAgICAgICAgZmx1c2goKTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfTtcbiAgY29uc3Qgc2NoZWR1bGUgPSAoY2FsbGJhY2spID0+IHtcbiAgICBpZiAodHJhbnNhY3Rpb25zKSB7XG4gICAgICBxdWV1ZS5wdXNoKGNhbGxiYWNrKTtcbiAgICB9IGVsc2Uge1xuICAgICAgc2NoZWR1bGVGbigoKSA9PiB7XG4gICAgICAgIG5vdGlmeUZuKGNhbGxiYWNrKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfTtcbiAgY29uc3QgYmF0Y2hDYWxscyA9IChjYWxsYmFjaykgPT4ge1xuICAgIHJldHVybiAoLi4uYXJncykgPT4ge1xuICAgICAgc2NoZWR1bGUoKCkgPT4ge1xuICAgICAgICBjYWxsYmFjayguLi5hcmdzKTtcbiAgICAgIH0pO1xuICAgIH07XG4gIH07XG4gIGNvbnN0IGZsdXNoID0gKCkgPT4ge1xuICAgIGNvbnN0IG9yaWdpbmFsUXVldWUgPSBxdWV1ZTtcbiAgICBxdWV1ZSA9IFtdO1xuICAgIGlmIChvcmlnaW5hbFF1ZXVlLmxlbmd0aCkge1xuICAgICAgc2NoZWR1bGVGbigoKSA9PiB7XG4gICAgICAgIGJhdGNoTm90aWZ5Rm4oKCkgPT4ge1xuICAgICAgICAgIG9yaWdpbmFsUXVldWUuZm9yRWFjaCgoY2FsbGJhY2spID0+IHtcbiAgICAgICAgICAgIG5vdGlmeUZuKGNhbGxiYWNrKTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgICB9XG4gIH07XG4gIGNvbnN0IHNldE5vdGlmeUZ1bmN0aW9uID0gKGZuKSA9PiB7XG4gICAgbm90aWZ5Rm4gPSBmbjtcbiAgfTtcbiAgY29uc3Qgc2V0QmF0Y2hOb3RpZnlGdW5jdGlvbiA9IChmbikgPT4ge1xuICAgIGJhdGNoTm90aWZ5Rm4gPSBmbjtcbiAgfTtcbiAgcmV0dXJuIHtcbiAgICBiYXRjaCxcbiAgICBiYXRjaENhbGxzLFxuICAgIHNjaGVkdWxlLFxuICAgIHNldE5vdGlmeUZ1bmN0aW9uLFxuICAgIHNldEJhdGNoTm90aWZ5RnVuY3Rpb24sXG4gICAgc2V0U2NoZWR1bGVyXG4gIH07XG59XG52YXIgbm90aWZ5TWFuYWdlciA9IGNyZWF0ZU5vdGlmeU1hbmFnZXIoKTtcbmV4cG9ydCB7XG4gIGNyZWF0ZU5vdGlmeU1hbmFnZXIsXG4gIG5vdGlmeU1hbmFnZXJcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1ub3RpZnlNYW5hZ2VyLmpzLm1hcCJdLCJuYW1lcyI6WyJjcmVhdGVOb3RpZnlNYW5hZ2VyIiwicXVldWUiLCJ0cmFuc2FjdGlvbnMiLCJub3RpZnlGbiIsImNhbGxiYWNrIiwiYmF0Y2hOb3RpZnlGbiIsInNjaGVkdWxlRm4iLCJjYiIsInNldFRpbWVvdXQiLCJzZXRTY2hlZHVsZXIiLCJmbiIsImJhdGNoIiwicmVzdWx0IiwiZmx1c2giLCJzY2hlZHVsZSIsInB1c2giLCJiYXRjaENhbGxzIiwiYXJncyIsIm9yaWdpbmFsUXVldWUiLCJsZW5ndGgiLCJmb3JFYWNoIiwic2V0Tm90aWZ5RnVuY3Rpb24iLCJzZXRCYXRjaE5vdGlmeUZ1bmN0aW9uIiwibm90aWZ5TWFuYWdlciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@tanstack/query-core/build/modern/notifyManager.js\n",
      );

      /***/
    },

  /***/ "(ssr)/../node_modules/@tanstack/query-core/build/modern/onlineManager.js":
    /*!**************************************************************************!*\
  !*** ../node_modules/@tanstack/query-core/build/modern/onlineManager.js ***!
  \**************************************************************************/
    /***/ (
      __unused_webpack___webpack_module__,
      __webpack_exports__,
      __webpack_require__,
    ) => {
      eval(
        '__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OnlineManager: () => (/* binding */ OnlineManager),\n/* harmony export */   onlineManager: () => (/* binding */ onlineManager)\n/* harmony export */ });\n/* harmony import */ var _subscribable_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./subscribable.js */ "(ssr)/../node_modules/@tanstack/query-core/build/modern/subscribable.js");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ "(ssr)/../node_modules/@tanstack/query-core/build/modern/utils.js");\n// src/onlineManager.ts\n\n\nvar OnlineManager = class extends _subscribable_js__WEBPACK_IMPORTED_MODULE_0__.Subscribable {\n    #online;\n    #cleanup;\n    #setup;\n    constructor(){\n        super();\n        this.#online = true;\n        this.#setup = (onOnline)=>{\n            if (!_utils_js__WEBPACK_IMPORTED_MODULE_1__.isServer && window.addEventListener) {\n                const onlineListener = ()=>onOnline(true);\n                const offlineListener = ()=>onOnline(false);\n                window.addEventListener("online", onlineListener, false);\n                window.addEventListener("offline", offlineListener, false);\n                return ()=>{\n                    window.removeEventListener("online", onlineListener);\n                    window.removeEventListener("offline", offlineListener);\n                };\n            }\n            return;\n        };\n    }\n    onSubscribe() {\n        if (!this.#cleanup) {\n            this.setEventListener(this.#setup);\n        }\n    }\n    onUnsubscribe() {\n        if (!this.hasListeners()) {\n            this.#cleanup?.();\n            this.#cleanup = void 0;\n        }\n    }\n    setEventListener(setup) {\n        this.#setup = setup;\n        this.#cleanup?.();\n        this.#cleanup = setup(this.setOnline.bind(this));\n    }\n    setOnline(online) {\n        const changed = this.#online !== online;\n        if (changed) {\n            this.#online = online;\n            this.listeners.forEach((listener)=>{\n                listener(online);\n            });\n        }\n    }\n    isOnline() {\n        return this.#online;\n    }\n};\nvar onlineManager = new OnlineManager();\n //# sourceMappingURL=onlineManager.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9xdWVyeS1jb3JlL2J1aWxkL21vZGVybi9vbmxpbmVNYW5hZ2VyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQSx1QkFBdUI7QUFDMEI7QUFDWDtBQUN0QyxJQUFJRSxnQkFBZ0IsY0FBY0YsMERBQVlBO0lBQzVDLENBQUNHLE1BQU0sQ0FBUTtJQUNmLENBQUNDLE9BQU8sQ0FBQztJQUNULENBQUNDLEtBQUssQ0FBQztJQUNQQyxhQUFjO1FBQ1osS0FBSzthQUpQLENBQUNILE1BQU0sR0FBRztRQUtSLElBQUksQ0FBQyxDQUFDRSxLQUFLLEdBQUcsQ0FBQ0U7WUFDYixJQUFJLENBQUNOLCtDQUFRQSxJQUFJTyxPQUFPQyxnQkFBZ0IsRUFBRTtnQkFDeEMsTUFBTUMsaUJBQWlCLElBQU1ILFNBQVM7Z0JBQ3RDLE1BQU1JLGtCQUFrQixJQUFNSixTQUFTO2dCQUN2Q0MsT0FBT0MsZ0JBQWdCLENBQUMsVUFBVUMsZ0JBQWdCO2dCQUNsREYsT0FBT0MsZ0JBQWdCLENBQUMsV0FBV0UsaUJBQWlCO2dCQUNwRCxPQUFPO29CQUNMSCxPQUFPSSxtQkFBbUIsQ0FBQyxVQUFVRjtvQkFDckNGLE9BQU9JLG1CQUFtQixDQUFDLFdBQVdEO2dCQUN4QztZQUNGO1lBQ0E7UUFDRjtJQUNGO0lBQ0FFLGNBQWM7UUFDWixJQUFJLENBQUMsSUFBSSxDQUFDLENBQUNULE9BQU8sRUFBRTtZQUNsQixJQUFJLENBQUNVLGdCQUFnQixDQUFDLElBQUksQ0FBQyxDQUFDVCxLQUFLO1FBQ25DO0lBQ0Y7SUFDQVUsZ0JBQWdCO1FBQ2QsSUFBSSxDQUFDLElBQUksQ0FBQ0MsWUFBWSxJQUFJO1lBQ3hCLElBQUksQ0FBQyxDQUFDWixPQUFPO1lBQ2IsSUFBSSxDQUFDLENBQUNBLE9BQU8sR0FBRyxLQUFLO1FBQ3ZCO0lBQ0Y7SUFDQVUsaUJBQWlCVCxLQUFLLEVBQUU7UUFDdEIsSUFBSSxDQUFDLENBQUNBLEtBQUssR0FBR0E7UUFDZCxJQUFJLENBQUMsQ0FBQ0QsT0FBTztRQUNiLElBQUksQ0FBQyxDQUFDQSxPQUFPLEdBQUdDLE1BQU0sSUFBSSxDQUFDWSxTQUFTLENBQUNDLElBQUksQ0FBQyxJQUFJO0lBQ2hEO0lBQ0FELFVBQVVkLE1BQU0sRUFBRTtRQUNoQixNQUFNZ0IsVUFBVSxJQUFJLENBQUMsQ0FBQ2hCLE1BQU0sS0FBS0E7UUFDakMsSUFBSWdCLFNBQVM7WUFDWCxJQUFJLENBQUMsQ0FBQ2hCLE1BQU0sR0FBR0E7WUFDZixJQUFJLENBQUNpQixTQUFTLENBQUNDLE9BQU8sQ0FBQyxDQUFDQztnQkFDdEJBLFNBQVNuQjtZQUNYO1FBQ0Y7SUFDRjtJQUNBb0IsV0FBVztRQUNULE9BQU8sSUFBSSxDQUFDLENBQUNwQixNQUFNO0lBQ3JCO0FBQ0Y7QUFDQSxJQUFJcUIsZ0JBQWdCLElBQUl0QjtBQUl0QixDQUNGLHlDQUF5QyIsInNvdXJjZXMiOlsid2VicGFjazovL2hhY2todWJiLy4uL25vZGVfbW9kdWxlcy9AdGFuc3RhY2svcXVlcnktY29yZS9idWlsZC9tb2Rlcm4vb25saW5lTWFuYWdlci5qcz84MzgzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9vbmxpbmVNYW5hZ2VyLnRzXG5pbXBvcnQgeyBTdWJzY3JpYmFibGUgfSBmcm9tIFwiLi9zdWJzY3JpYmFibGUuanNcIjtcbmltcG9ydCB7IGlzU2VydmVyIH0gZnJvbSBcIi4vdXRpbHMuanNcIjtcbnZhciBPbmxpbmVNYW5hZ2VyID0gY2xhc3MgZXh0ZW5kcyBTdWJzY3JpYmFibGUge1xuICAjb25saW5lID0gdHJ1ZTtcbiAgI2NsZWFudXA7XG4gICNzZXR1cDtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLiNzZXR1cCA9IChvbk9ubGluZSkgPT4ge1xuICAgICAgaWYgKCFpc1NlcnZlciAmJiB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcikge1xuICAgICAgICBjb25zdCBvbmxpbmVMaXN0ZW5lciA9ICgpID0+IG9uT25saW5lKHRydWUpO1xuICAgICAgICBjb25zdCBvZmZsaW5lTGlzdGVuZXIgPSAoKSA9PiBvbk9ubGluZShmYWxzZSk7XG4gICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwib25saW5lXCIsIG9ubGluZUxpc3RlbmVyLCBmYWxzZSk7XG4gICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwib2ZmbGluZVwiLCBvZmZsaW5lTGlzdGVuZXIsIGZhbHNlKTtcbiAgICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihcIm9ubGluZVwiLCBvbmxpbmVMaXN0ZW5lcik7XG4gICAgICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJvZmZsaW5lXCIsIG9mZmxpbmVMaXN0ZW5lcik7XG4gICAgICAgIH07XG4gICAgICB9XG4gICAgICByZXR1cm47XG4gICAgfTtcbiAgfVxuICBvblN1YnNjcmliZSgpIHtcbiAgICBpZiAoIXRoaXMuI2NsZWFudXApIHtcbiAgICAgIHRoaXMuc2V0RXZlbnRMaXN0ZW5lcih0aGlzLiNzZXR1cCk7XG4gICAgfVxuICB9XG4gIG9uVW5zdWJzY3JpYmUoKSB7XG4gICAgaWYgKCF0aGlzLmhhc0xpc3RlbmVycygpKSB7XG4gICAgICB0aGlzLiNjbGVhbnVwPy4oKTtcbiAgICAgIHRoaXMuI2NsZWFudXAgPSB2b2lkIDA7XG4gICAgfVxuICB9XG4gIHNldEV2ZW50TGlzdGVuZXIoc2V0dXApIHtcbiAgICB0aGlzLiNzZXR1cCA9IHNldHVwO1xuICAgIHRoaXMuI2NsZWFudXA/LigpO1xuICAgIHRoaXMuI2NsZWFudXAgPSBzZXR1cCh0aGlzLnNldE9ubGluZS5iaW5kKHRoaXMpKTtcbiAgfVxuICBzZXRPbmxpbmUob25saW5lKSB7XG4gICAgY29uc3QgY2hhbmdlZCA9IHRoaXMuI29ubGluZSAhPT0gb25saW5lO1xuICAgIGlmIChjaGFuZ2VkKSB7XG4gICAgICB0aGlzLiNvbmxpbmUgPSBvbmxpbmU7XG4gICAgICB0aGlzLmxpc3RlbmVycy5mb3JFYWNoKChsaXN0ZW5lcikgPT4ge1xuICAgICAgICBsaXN0ZW5lcihvbmxpbmUpO1xuICAgICAgfSk7XG4gICAgfVxuICB9XG4gIGlzT25saW5lKCkge1xuICAgIHJldHVybiB0aGlzLiNvbmxpbmU7XG4gIH1cbn07XG52YXIgb25saW5lTWFuYWdlciA9IG5ldyBPbmxpbmVNYW5hZ2VyKCk7XG5leHBvcnQge1xuICBPbmxpbmVNYW5hZ2VyLFxuICBvbmxpbmVNYW5hZ2VyXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9b25saW5lTWFuYWdlci5qcy5tYXAiXSwibmFtZXMiOlsiU3Vic2NyaWJhYmxlIiwiaXNTZXJ2ZXIiLCJPbmxpbmVNYW5hZ2VyIiwib25saW5lIiwiY2xlYW51cCIsInNldHVwIiwiY29uc3RydWN0b3IiLCJvbk9ubGluZSIsIndpbmRvdyIsImFkZEV2ZW50TGlzdGVuZXIiLCJvbmxpbmVMaXN0ZW5lciIsIm9mZmxpbmVMaXN0ZW5lciIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJvblN1YnNjcmliZSIsInNldEV2ZW50TGlzdGVuZXIiLCJvblVuc3Vic2NyaWJlIiwiaGFzTGlzdGVuZXJzIiwic2V0T25saW5lIiwiYmluZCIsImNoYW5nZWQiLCJsaXN0ZW5lcnMiLCJmb3JFYWNoIiwibGlzdGVuZXIiLCJpc09ubGluZSIsIm9ubGluZU1hbmFnZXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@tanstack/query-core/build/modern/onlineManager.js\n',
      );

      /***/
    },

  /***/ "(ssr)/../node_modules/@tanstack/query-core/build/modern/query.js":
    /*!******************************************************************!*\
  !*** ../node_modules/@tanstack/query-core/build/modern/query.js ***!
  \******************************************************************/
    /***/ (
      __unused_webpack___webpack_module__,
      __webpack_exports__,
      __webpack_require__,
    ) => {
      eval(
        '__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Query: () => (/* binding */ Query)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ "(ssr)/../node_modules/@tanstack/query-core/build/modern/utils.js");\n/* harmony import */ var _notifyManager_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./notifyManager.js */ "(ssr)/../node_modules/@tanstack/query-core/build/modern/notifyManager.js");\n/* harmony import */ var _retryer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./retryer.js */ "(ssr)/../node_modules/@tanstack/query-core/build/modern/retryer.js");\n/* harmony import */ var _removable_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./removable.js */ "(ssr)/../node_modules/@tanstack/query-core/build/modern/removable.js");\n// src/query.ts\n\n\n\n\nvar Query = class extends _removable_js__WEBPACK_IMPORTED_MODULE_0__.Removable {\n    constructor(config){\n        super();\n        this.#abortSignalConsumed = false;\n        this.#defaultOptions = config.defaultOptions;\n        this.#setOptions(config.options);\n        this.#observers = [];\n        this.#cache = config.cache;\n        this.queryKey = config.queryKey;\n        this.queryHash = config.queryHash;\n        this.#initialState = config.state || getDefaultState(this.options);\n        this.state = this.#initialState;\n        this.scheduleGc();\n    }\n    #initialState;\n    #revertState;\n    #cache;\n    #promise;\n    #retryer;\n    #observers;\n    #defaultOptions;\n    #abortSignalConsumed;\n    get meta() {\n        return this.options.meta;\n    }\n    #setOptions(options) {\n        this.options = {\n            ...this.#defaultOptions,\n            ...options\n        };\n        this.updateGcTime(this.options.gcTime);\n    }\n    optionalRemove() {\n        if (!this.#observers.length && this.state.fetchStatus === "idle") {\n            this.#cache.remove(this);\n        }\n    }\n    setData(newData, options) {\n        const data = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.replaceData)(this.state.data, newData, this.options);\n        this.#dispatch({\n            data,\n            type: "success",\n            dataUpdatedAt: options?.updatedAt,\n            manual: options?.manual\n        });\n        return data;\n    }\n    setState(state, setStateOptions) {\n        this.#dispatch({\n            type: "setState",\n            state,\n            setStateOptions\n        });\n    }\n    cancel(options) {\n        const promise = this.#promise;\n        this.#retryer?.cancel(options);\n        return promise ? promise.then(_utils_js__WEBPACK_IMPORTED_MODULE_1__.noop).catch(_utils_js__WEBPACK_IMPORTED_MODULE_1__.noop) : Promise.resolve();\n    }\n    destroy() {\n        super.destroy();\n        this.cancel({\n            silent: true\n        });\n    }\n    reset() {\n        this.destroy();\n        this.setState(this.#initialState);\n    }\n    isActive() {\n        return this.#observers.some((observer)=>observer.options.enabled !== false);\n    }\n    isDisabled() {\n        return this.getObserversCount() > 0 && !this.isActive();\n    }\n    isStale() {\n        return this.state.isInvalidated || !this.state.dataUpdatedAt || this.#observers.some((observer)=>observer.getCurrentResult().isStale);\n    }\n    isStaleByTime(staleTime = 0) {\n        return this.state.isInvalidated || !this.state.dataUpdatedAt || !(0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.timeUntilStale)(this.state.dataUpdatedAt, staleTime);\n    }\n    onFocus() {\n        const observer = this.#observers.find((x)=>x.shouldFetchOnWindowFocus());\n        observer?.refetch({\n            cancelRefetch: false\n        });\n        this.#retryer?.continue();\n    }\n    onOnline() {\n        const observer = this.#observers.find((x)=>x.shouldFetchOnReconnect());\n        observer?.refetch({\n            cancelRefetch: false\n        });\n        this.#retryer?.continue();\n    }\n    addObserver(observer) {\n        if (!this.#observers.includes(observer)) {\n            this.#observers.push(observer);\n            this.clearGcTimeout();\n            this.#cache.notify({\n                type: "observerAdded",\n                query: this,\n                observer\n            });\n        }\n    }\n    removeObserver(observer) {\n        if (this.#observers.includes(observer)) {\n            this.#observers = this.#observers.filter((x)=>x !== observer);\n            if (!this.#observers.length) {\n                if (this.#retryer) {\n                    if (this.#abortSignalConsumed) {\n                        this.#retryer.cancel({\n                            revert: true\n                        });\n                    } else {\n                        this.#retryer.cancelRetry();\n                    }\n                }\n                this.scheduleGc();\n            }\n            this.#cache.notify({\n                type: "observerRemoved",\n                query: this,\n                observer\n            });\n        }\n    }\n    getObserversCount() {\n        return this.#observers.length;\n    }\n    invalidate() {\n        if (!this.state.isInvalidated) {\n            this.#dispatch({\n                type: "invalidate"\n            });\n        }\n    }\n    fetch(options, fetchOptions) {\n        if (this.state.fetchStatus !== "idle") {\n            if (this.state.dataUpdatedAt && fetchOptions?.cancelRefetch) {\n                this.cancel({\n                    silent: true\n                });\n            } else if (this.#promise) {\n                this.#retryer?.continueRetry();\n                return this.#promise;\n            }\n        }\n        if (options) {\n            this.#setOptions(options);\n        }\n        if (!this.options.queryFn) {\n            const observer = this.#observers.find((x)=>x.options.queryFn);\n            if (observer) {\n                this.#setOptions(observer.options);\n            }\n        }\n        if (true) {\n            if (!Array.isArray(this.options.queryKey)) {\n                console.error(`As of v4, queryKey needs to be an Array. If you are using a string like \'repoData\', please change it to an Array, e.g. [\'repoData\']`);\n            }\n        }\n        const abortController = new AbortController();\n        const queryFnContext = {\n            queryKey: this.queryKey,\n            meta: this.meta\n        };\n        const addSignalProperty = (object)=>{\n            Object.defineProperty(object, "signal", {\n                enumerable: true,\n                get: ()=>{\n                    this.#abortSignalConsumed = true;\n                    return abortController.signal;\n                }\n            });\n        };\n        addSignalProperty(queryFnContext);\n        const fetchFn = ()=>{\n            if (!this.options.queryFn) {\n                return Promise.reject(new Error(`Missing queryFn: \'${this.options.queryHash}\'`));\n            }\n            this.#abortSignalConsumed = false;\n            if (this.options.persister) {\n                return this.options.persister(this.options.queryFn, queryFnContext, this);\n            }\n            return this.options.queryFn(queryFnContext);\n        };\n        const context = {\n            fetchOptions,\n            options: this.options,\n            queryKey: this.queryKey,\n            state: this.state,\n            fetchFn\n        };\n        addSignalProperty(context);\n        this.options.behavior?.onFetch(context, this);\n        this.#revertState = this.state;\n        if (this.state.fetchStatus === "idle" || this.state.fetchMeta !== context.fetchOptions?.meta) {\n            this.#dispatch({\n                type: "fetch",\n                meta: context.fetchOptions?.meta\n            });\n        }\n        const onError = (error)=>{\n            if (!((0,_retryer_js__WEBPACK_IMPORTED_MODULE_2__.isCancelledError)(error) && error.silent)) {\n                this.#dispatch({\n                    type: "error",\n                    error\n                });\n            }\n            if (!(0,_retryer_js__WEBPACK_IMPORTED_MODULE_2__.isCancelledError)(error)) {\n                this.#cache.config.onError?.(error, this);\n                this.#cache.config.onSettled?.(this.state.data, error, this);\n            }\n            if (!this.isFetchingOptimistic) {\n                this.scheduleGc();\n            }\n            this.isFetchingOptimistic = false;\n        };\n        this.#retryer = (0,_retryer_js__WEBPACK_IMPORTED_MODULE_2__.createRetryer)({\n            fn: context.fetchFn,\n            abort: abortController.abort.bind(abortController),\n            onSuccess: (data)=>{\n                if (typeof data === "undefined") {\n                    if (true) {\n                        console.error(`Query data cannot be undefined. Please make sure to return a value other than undefined from your query function. Affected query key: ${this.queryHash}`);\n                    }\n                    onError(new Error(`${this.queryHash} data is undefined`));\n                    return;\n                }\n                this.setData(data);\n                this.#cache.config.onSuccess?.(data, this);\n                this.#cache.config.onSettled?.(data, this.state.error, this);\n                if (!this.isFetchingOptimistic) {\n                    this.scheduleGc();\n                }\n                this.isFetchingOptimistic = false;\n            },\n            onError,\n            onFail: (failureCount, error)=>{\n                this.#dispatch({\n                    type: "failed",\n                    failureCount,\n                    error\n                });\n            },\n            onPause: ()=>{\n                this.#dispatch({\n                    type: "pause"\n                });\n            },\n            onContinue: ()=>{\n                this.#dispatch({\n                    type: "continue"\n                });\n            },\n            retry: context.options.retry,\n            retryDelay: context.options.retryDelay,\n            networkMode: context.options.networkMode\n        });\n        this.#promise = this.#retryer.promise;\n        return this.#promise;\n    }\n    #dispatch(action) {\n        const reducer = (state)=>{\n            switch(action.type){\n                case "failed":\n                    return {\n                        ...state,\n                        fetchFailureCount: action.failureCount,\n                        fetchFailureReason: action.error\n                    };\n                case "pause":\n                    return {\n                        ...state,\n                        fetchStatus: "paused"\n                    };\n                case "continue":\n                    return {\n                        ...state,\n                        fetchStatus: "fetching"\n                    };\n                case "fetch":\n                    return {\n                        ...state,\n                        fetchFailureCount: 0,\n                        fetchFailureReason: null,\n                        fetchMeta: action.meta ?? null,\n                        fetchStatus: (0,_retryer_js__WEBPACK_IMPORTED_MODULE_2__.canFetch)(this.options.networkMode) ? "fetching" : "paused",\n                        ...!state.dataUpdatedAt && {\n                            error: null,\n                            status: "pending"\n                        }\n                    };\n                case "success":\n                    return {\n                        ...state,\n                        data: action.data,\n                        dataUpdateCount: state.dataUpdateCount + 1,\n                        dataUpdatedAt: action.dataUpdatedAt ?? Date.now(),\n                        error: null,\n                        isInvalidated: false,\n                        status: "success",\n                        ...!action.manual && {\n                            fetchStatus: "idle",\n                            fetchFailureCount: 0,\n                            fetchFailureReason: null\n                        }\n                    };\n                case "error":\n                    const error = action.error;\n                    if ((0,_retryer_js__WEBPACK_IMPORTED_MODULE_2__.isCancelledError)(error) && error.revert && this.#revertState) {\n                        return {\n                            ...this.#revertState,\n                            fetchStatus: "idle"\n                        };\n                    }\n                    return {\n                        ...state,\n                        error,\n                        errorUpdateCount: state.errorUpdateCount + 1,\n                        errorUpdatedAt: Date.now(),\n                        fetchFailureCount: state.fetchFailureCount + 1,\n                        fetchFailureReason: error,\n                        fetchStatus: "idle",\n                        status: "error"\n                    };\n                case "invalidate":\n                    return {\n                        ...state,\n                        isInvalidated: true\n                    };\n                case "setState":\n                    return {\n                        ...state,\n                        ...action.state\n                    };\n            }\n        };\n        this.state = reducer(this.state);\n        _notifyManager_js__WEBPACK_IMPORTED_MODULE_3__.notifyManager.batch(()=>{\n            this.#observers.forEach((observer)=>{\n                observer.onQueryUpdate();\n            });\n            this.#cache.notify({\n                query: this,\n                type: "updated",\n                action\n            });\n        });\n    }\n};\nfunction getDefaultState(options) {\n    const data = typeof options.initialData === "function" ? options.initialData() : options.initialData;\n    const hasData = typeof data !== "undefined";\n    const initialDataUpdatedAt = hasData ? typeof options.initialDataUpdatedAt === "function" ? options.initialDataUpdatedAt() : options.initialDataUpdatedAt : 0;\n    return {\n        data,\n        dataUpdateCount: 0,\n        dataUpdatedAt: hasData ? initialDataUpdatedAt ?? Date.now() : 0,\n        error: null,\n        errorUpdateCount: 0,\n        errorUpdatedAt: 0,\n        fetchFailureCount: 0,\n        fetchFailureReason: null,\n        fetchMeta: null,\n        isInvalidated: false,\n        status: hasData ? "success" : "pending",\n        fetchStatus: "idle"\n    };\n}\n //# sourceMappingURL=query.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@tanstack/query-core/build/modern/query.js\n',
      );

      /***/
    },

  /***/ "(ssr)/../node_modules/@tanstack/query-core/build/modern/queryCache.js":
    /*!***********************************************************************!*\
  !*** ../node_modules/@tanstack/query-core/build/modern/queryCache.js ***!
  \***********************************************************************/
    /***/ (
      __unused_webpack___webpack_module__,
      __webpack_exports__,
      __webpack_require__,
    ) => {
      eval(
        '__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   QueryCache: () => (/* binding */ QueryCache)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ "(ssr)/../node_modules/@tanstack/query-core/build/modern/utils.js");\n/* harmony import */ var _query_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./query.js */ "(ssr)/../node_modules/@tanstack/query-core/build/modern/query.js");\n/* harmony import */ var _notifyManager_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./notifyManager.js */ "(ssr)/../node_modules/@tanstack/query-core/build/modern/notifyManager.js");\n/* harmony import */ var _subscribable_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./subscribable.js */ "(ssr)/../node_modules/@tanstack/query-core/build/modern/subscribable.js");\n// src/queryCache.ts\n\n\n\n\nvar QueryCache = class extends _subscribable_js__WEBPACK_IMPORTED_MODULE_0__.Subscribable {\n    constructor(config = {}){\n        super();\n        this.config = config;\n        this.#queries = /* @__PURE__ */ new Map();\n    }\n    #queries;\n    build(client, options, state) {\n        const queryKey = options.queryKey;\n        const queryHash = options.queryHash ?? (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.hashQueryKeyByOptions)(queryKey, options);\n        let query = this.get(queryHash);\n        if (!query) {\n            query = new _query_js__WEBPACK_IMPORTED_MODULE_2__.Query({\n                cache: this,\n                queryKey,\n                queryHash,\n                options: client.defaultQueryOptions(options),\n                state,\n                defaultOptions: client.getQueryDefaults(queryKey)\n            });\n            this.add(query);\n        }\n        return query;\n    }\n    add(query) {\n        if (!this.#queries.has(query.queryHash)) {\n            this.#queries.set(query.queryHash, query);\n            this.notify({\n                type: "added",\n                query\n            });\n        }\n    }\n    remove(query) {\n        const queryInMap = this.#queries.get(query.queryHash);\n        if (queryInMap) {\n            query.destroy();\n            if (queryInMap === query) {\n                this.#queries.delete(query.queryHash);\n            }\n            this.notify({\n                type: "removed",\n                query\n            });\n        }\n    }\n    clear() {\n        _notifyManager_js__WEBPACK_IMPORTED_MODULE_3__.notifyManager.batch(()=>{\n            this.getAll().forEach((query)=>{\n                this.remove(query);\n            });\n        });\n    }\n    get(queryHash) {\n        return this.#queries.get(queryHash);\n    }\n    getAll() {\n        return [\n            ...this.#queries.values()\n        ];\n    }\n    find(filters) {\n        const defaultedFilters = {\n            exact: true,\n            ...filters\n        };\n        return this.getAll().find((query)=>(0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.matchQuery)(defaultedFilters, query));\n    }\n    findAll(filters = {}) {\n        const queries = this.getAll();\n        return Object.keys(filters).length > 0 ? queries.filter((query)=>(0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.matchQuery)(filters, query)) : queries;\n    }\n    notify(event) {\n        _notifyManager_js__WEBPACK_IMPORTED_MODULE_3__.notifyManager.batch(()=>{\n            this.listeners.forEach((listener)=>{\n                listener(event);\n            });\n        });\n    }\n    onFocus() {\n        _notifyManager_js__WEBPACK_IMPORTED_MODULE_3__.notifyManager.batch(()=>{\n            this.getAll().forEach((query)=>{\n                query.onFocus();\n            });\n        });\n    }\n    onOnline() {\n        _notifyManager_js__WEBPACK_IMPORTED_MODULE_3__.notifyManager.batch(()=>{\n            this.getAll().forEach((query)=>{\n                query.onOnline();\n            });\n        });\n    }\n};\n //# sourceMappingURL=queryCache.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9xdWVyeS1jb3JlL2J1aWxkL21vZGVybi9xdWVyeUNhY2hlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUEsb0JBQW9CO0FBQzJDO0FBQzVCO0FBQ2dCO0FBQ0Y7QUFDakQsSUFBSUssYUFBYSxjQUFjRCwwREFBWUE7SUFDekNFLFlBQVlDLFNBQVMsQ0FBQyxDQUFDLENBQUU7UUFDdkIsS0FBSztRQUNMLElBQUksQ0FBQ0EsTUFBTSxHQUFHQTtRQUNkLElBQUksQ0FBQyxDQUFDQyxPQUFPLEdBQUcsYUFBYSxHQUFHLElBQUlDO0lBQ3RDO0lBQ0EsQ0FBQ0QsT0FBTyxDQUFDO0lBQ1RFLE1BQU1DLE1BQU0sRUFBRUMsT0FBTyxFQUFFQyxLQUFLLEVBQUU7UUFDNUIsTUFBTUMsV0FBV0YsUUFBUUUsUUFBUTtRQUNqQyxNQUFNQyxZQUFZSCxRQUFRRyxTQUFTLElBQUlmLGdFQUFxQkEsQ0FBQ2MsVUFBVUY7UUFDdkUsSUFBSUksUUFBUSxJQUFJLENBQUNDLEdBQUcsQ0FBQ0Y7UUFDckIsSUFBSSxDQUFDQyxPQUFPO1lBQ1ZBLFFBQVEsSUFBSWQsNENBQUtBLENBQUM7Z0JBQ2hCZ0IsT0FBTyxJQUFJO2dCQUNYSjtnQkFDQUM7Z0JBQ0FILFNBQVNELE9BQU9RLG1CQUFtQixDQUFDUDtnQkFDcENDO2dCQUNBTyxnQkFBZ0JULE9BQU9VLGdCQUFnQixDQUFDUDtZQUMxQztZQUNBLElBQUksQ0FBQ1EsR0FBRyxDQUFDTjtRQUNYO1FBQ0EsT0FBT0E7SUFDVDtJQUNBTSxJQUFJTixLQUFLLEVBQUU7UUFDVCxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUNSLE9BQU8sQ0FBQ2UsR0FBRyxDQUFDUCxNQUFNRCxTQUFTLEdBQUc7WUFDdkMsSUFBSSxDQUFDLENBQUNQLE9BQU8sQ0FBQ2dCLEdBQUcsQ0FBQ1IsTUFBTUQsU0FBUyxFQUFFQztZQUNuQyxJQUFJLENBQUNTLE1BQU0sQ0FBQztnQkFDVkMsTUFBTTtnQkFDTlY7WUFDRjtRQUNGO0lBQ0Y7SUFDQVcsT0FBT1gsS0FBSyxFQUFFO1FBQ1osTUFBTVksYUFBYSxJQUFJLENBQUMsQ0FBQ3BCLE9BQU8sQ0FBQ1MsR0FBRyxDQUFDRCxNQUFNRCxTQUFTO1FBQ3BELElBQUlhLFlBQVk7WUFDZFosTUFBTWEsT0FBTztZQUNiLElBQUlELGVBQWVaLE9BQU87Z0JBQ3hCLElBQUksQ0FBQyxDQUFDUixPQUFPLENBQUNzQixNQUFNLENBQUNkLE1BQU1ELFNBQVM7WUFDdEM7WUFDQSxJQUFJLENBQUNVLE1BQU0sQ0FBQztnQkFBRUMsTUFBTTtnQkFBV1Y7WUFBTTtRQUN2QztJQUNGO0lBQ0FlLFFBQVE7UUFDTjVCLDREQUFhQSxDQUFDNkIsS0FBSyxDQUFDO1lBQ2xCLElBQUksQ0FBQ0MsTUFBTSxHQUFHQyxPQUFPLENBQUMsQ0FBQ2xCO2dCQUNyQixJQUFJLENBQUNXLE1BQU0sQ0FBQ1g7WUFDZDtRQUNGO0lBQ0Y7SUFDQUMsSUFBSUYsU0FBUyxFQUFFO1FBQ2IsT0FBTyxJQUFJLENBQUMsQ0FBQ1AsT0FBTyxDQUFDUyxHQUFHLENBQUNGO0lBQzNCO0lBQ0FrQixTQUFTO1FBQ1AsT0FBTztlQUFJLElBQUksQ0FBQyxDQUFDekIsT0FBTyxDQUFDMkIsTUFBTTtTQUFHO0lBQ3BDO0lBQ0FDLEtBQUtDLE9BQU8sRUFBRTtRQUNaLE1BQU1DLG1CQUFtQjtZQUFFQyxPQUFPO1lBQU0sR0FBR0YsT0FBTztRQUFDO1FBQ25ELE9BQU8sSUFBSSxDQUFDSixNQUFNLEdBQUdHLElBQUksQ0FDdkIsQ0FBQ3BCLFFBQVVmLHFEQUFVQSxDQUFDcUMsa0JBQWtCdEI7SUFFNUM7SUFDQXdCLFFBQVFILFVBQVUsQ0FBQyxDQUFDLEVBQUU7UUFDcEIsTUFBTTdCLFVBQVUsSUFBSSxDQUFDeUIsTUFBTTtRQUMzQixPQUFPUSxPQUFPQyxJQUFJLENBQUNMLFNBQVNNLE1BQU0sR0FBRyxJQUFJbkMsUUFBUW9DLE1BQU0sQ0FBQyxDQUFDNUIsUUFBVWYscURBQVVBLENBQUNvQyxTQUFTckIsVUFBVVI7SUFDbkc7SUFDQWlCLE9BQU9vQixLQUFLLEVBQUU7UUFDWjFDLDREQUFhQSxDQUFDNkIsS0FBSyxDQUFDO1lBQ2xCLElBQUksQ0FBQ2MsU0FBUyxDQUFDWixPQUFPLENBQUMsQ0FBQ2E7Z0JBQ3RCQSxTQUFTRjtZQUNYO1FBQ0Y7SUFDRjtJQUNBRyxVQUFVO1FBQ1I3Qyw0REFBYUEsQ0FBQzZCLEtBQUssQ0FBQztZQUNsQixJQUFJLENBQUNDLE1BQU0sR0FBR0MsT0FBTyxDQUFDLENBQUNsQjtnQkFDckJBLE1BQU1nQyxPQUFPO1lBQ2Y7UUFDRjtJQUNGO0lBQ0FDLFdBQVc7UUFDVDlDLDREQUFhQSxDQUFDNkIsS0FBSyxDQUFDO1lBQ2xCLElBQUksQ0FBQ0MsTUFBTSxHQUFHQyxPQUFPLENBQUMsQ0FBQ2xCO2dCQUNyQkEsTUFBTWlDLFFBQVE7WUFDaEI7UUFDRjtJQUNGO0FBQ0Y7QUFHRSxDQUNGLHNDQUFzQyIsInNvdXJjZXMiOlsid2VicGFjazovL2hhY2todWJiLy4uL25vZGVfbW9kdWxlcy9AdGFuc3RhY2svcXVlcnktY29yZS9idWlsZC9tb2Rlcm4vcXVlcnlDYWNoZS5qcz80MjExIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9xdWVyeUNhY2hlLnRzXG5pbXBvcnQgeyBoYXNoUXVlcnlLZXlCeU9wdGlvbnMsIG1hdGNoUXVlcnkgfSBmcm9tIFwiLi91dGlscy5qc1wiO1xuaW1wb3J0IHsgUXVlcnkgfSBmcm9tIFwiLi9xdWVyeS5qc1wiO1xuaW1wb3J0IHsgbm90aWZ5TWFuYWdlciB9IGZyb20gXCIuL25vdGlmeU1hbmFnZXIuanNcIjtcbmltcG9ydCB7IFN1YnNjcmliYWJsZSB9IGZyb20gXCIuL3N1YnNjcmliYWJsZS5qc1wiO1xudmFyIFF1ZXJ5Q2FjaGUgPSBjbGFzcyBleHRlbmRzIFN1YnNjcmliYWJsZSB7XG4gIGNvbnN0cnVjdG9yKGNvbmZpZyA9IHt9KSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLmNvbmZpZyA9IGNvbmZpZztcbiAgICB0aGlzLiNxdWVyaWVzID0gLyogQF9fUFVSRV9fICovIG5ldyBNYXAoKTtcbiAgfVxuICAjcXVlcmllcztcbiAgYnVpbGQoY2xpZW50LCBvcHRpb25zLCBzdGF0ZSkge1xuICAgIGNvbnN0IHF1ZXJ5S2V5ID0gb3B0aW9ucy5xdWVyeUtleTtcbiAgICBjb25zdCBxdWVyeUhhc2ggPSBvcHRpb25zLnF1ZXJ5SGFzaCA/PyBoYXNoUXVlcnlLZXlCeU9wdGlvbnMocXVlcnlLZXksIG9wdGlvbnMpO1xuICAgIGxldCBxdWVyeSA9IHRoaXMuZ2V0KHF1ZXJ5SGFzaCk7XG4gICAgaWYgKCFxdWVyeSkge1xuICAgICAgcXVlcnkgPSBuZXcgUXVlcnkoe1xuICAgICAgICBjYWNoZTogdGhpcyxcbiAgICAgICAgcXVlcnlLZXksXG4gICAgICAgIHF1ZXJ5SGFzaCxcbiAgICAgICAgb3B0aW9uczogY2xpZW50LmRlZmF1bHRRdWVyeU9wdGlvbnMob3B0aW9ucyksXG4gICAgICAgIHN0YXRlLFxuICAgICAgICBkZWZhdWx0T3B0aW9uczogY2xpZW50LmdldFF1ZXJ5RGVmYXVsdHMocXVlcnlLZXkpXG4gICAgICB9KTtcbiAgICAgIHRoaXMuYWRkKHF1ZXJ5KTtcbiAgICB9XG4gICAgcmV0dXJuIHF1ZXJ5O1xuICB9XG4gIGFkZChxdWVyeSkge1xuICAgIGlmICghdGhpcy4jcXVlcmllcy5oYXMocXVlcnkucXVlcnlIYXNoKSkge1xuICAgICAgdGhpcy4jcXVlcmllcy5zZXQocXVlcnkucXVlcnlIYXNoLCBxdWVyeSk7XG4gICAgICB0aGlzLm5vdGlmeSh7XG4gICAgICAgIHR5cGU6IFwiYWRkZWRcIixcbiAgICAgICAgcXVlcnlcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuICByZW1vdmUocXVlcnkpIHtcbiAgICBjb25zdCBxdWVyeUluTWFwID0gdGhpcy4jcXVlcmllcy5nZXQocXVlcnkucXVlcnlIYXNoKTtcbiAgICBpZiAocXVlcnlJbk1hcCkge1xuICAgICAgcXVlcnkuZGVzdHJveSgpO1xuICAgICAgaWYgKHF1ZXJ5SW5NYXAgPT09IHF1ZXJ5KSB7XG4gICAgICAgIHRoaXMuI3F1ZXJpZXMuZGVsZXRlKHF1ZXJ5LnF1ZXJ5SGFzaCk7XG4gICAgICB9XG4gICAgICB0aGlzLm5vdGlmeSh7IHR5cGU6IFwicmVtb3ZlZFwiLCBxdWVyeSB9KTtcbiAgICB9XG4gIH1cbiAgY2xlYXIoKSB7XG4gICAgbm90aWZ5TWFuYWdlci5iYXRjaCgoKSA9PiB7XG4gICAgICB0aGlzLmdldEFsbCgpLmZvckVhY2goKHF1ZXJ5KSA9PiB7XG4gICAgICAgIHRoaXMucmVtb3ZlKHF1ZXJ5KTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG4gIGdldChxdWVyeUhhc2gpIHtcbiAgICByZXR1cm4gdGhpcy4jcXVlcmllcy5nZXQocXVlcnlIYXNoKTtcbiAgfVxuICBnZXRBbGwoKSB7XG4gICAgcmV0dXJuIFsuLi50aGlzLiNxdWVyaWVzLnZhbHVlcygpXTtcbiAgfVxuICBmaW5kKGZpbHRlcnMpIHtcbiAgICBjb25zdCBkZWZhdWx0ZWRGaWx0ZXJzID0geyBleGFjdDogdHJ1ZSwgLi4uZmlsdGVycyB9O1xuICAgIHJldHVybiB0aGlzLmdldEFsbCgpLmZpbmQoXG4gICAgICAocXVlcnkpID0+IG1hdGNoUXVlcnkoZGVmYXVsdGVkRmlsdGVycywgcXVlcnkpXG4gICAgKTtcbiAgfVxuICBmaW5kQWxsKGZpbHRlcnMgPSB7fSkge1xuICAgIGNvbnN0IHF1ZXJpZXMgPSB0aGlzLmdldEFsbCgpO1xuICAgIHJldHVybiBPYmplY3Qua2V5cyhmaWx0ZXJzKS5sZW5ndGggPiAwID8gcXVlcmllcy5maWx0ZXIoKHF1ZXJ5KSA9PiBtYXRjaFF1ZXJ5KGZpbHRlcnMsIHF1ZXJ5KSkgOiBxdWVyaWVzO1xuICB9XG4gIG5vdGlmeShldmVudCkge1xuICAgIG5vdGlmeU1hbmFnZXIuYmF0Y2goKCkgPT4ge1xuICAgICAgdGhpcy5saXN0ZW5lcnMuZm9yRWFjaCgobGlzdGVuZXIpID0+IHtcbiAgICAgICAgbGlzdGVuZXIoZXZlbnQpO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cbiAgb25Gb2N1cygpIHtcbiAgICBub3RpZnlNYW5hZ2VyLmJhdGNoKCgpID0+IHtcbiAgICAgIHRoaXMuZ2V0QWxsKCkuZm9yRWFjaCgocXVlcnkpID0+IHtcbiAgICAgICAgcXVlcnkub25Gb2N1cygpO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cbiAgb25PbmxpbmUoKSB7XG4gICAgbm90aWZ5TWFuYWdlci5iYXRjaCgoKSA9PiB7XG4gICAgICB0aGlzLmdldEFsbCgpLmZvckVhY2goKHF1ZXJ5KSA9PiB7XG4gICAgICAgIHF1ZXJ5Lm9uT25saW5lKCk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxufTtcbmV4cG9ydCB7XG4gIFF1ZXJ5Q2FjaGVcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1xdWVyeUNhY2hlLmpzLm1hcCJdLCJuYW1lcyI6WyJoYXNoUXVlcnlLZXlCeU9wdGlvbnMiLCJtYXRjaFF1ZXJ5IiwiUXVlcnkiLCJub3RpZnlNYW5hZ2VyIiwiU3Vic2NyaWJhYmxlIiwiUXVlcnlDYWNoZSIsImNvbnN0cnVjdG9yIiwiY29uZmlnIiwicXVlcmllcyIsIk1hcCIsImJ1aWxkIiwiY2xpZW50Iiwib3B0aW9ucyIsInN0YXRlIiwicXVlcnlLZXkiLCJxdWVyeUhhc2giLCJxdWVyeSIsImdldCIsImNhY2hlIiwiZGVmYXVsdFF1ZXJ5T3B0aW9ucyIsImRlZmF1bHRPcHRpb25zIiwiZ2V0UXVlcnlEZWZhdWx0cyIsImFkZCIsImhhcyIsInNldCIsIm5vdGlmeSIsInR5cGUiLCJyZW1vdmUiLCJxdWVyeUluTWFwIiwiZGVzdHJveSIsImRlbGV0ZSIsImNsZWFyIiwiYmF0Y2giLCJnZXRBbGwiLCJmb3JFYWNoIiwidmFsdWVzIiwiZmluZCIsImZpbHRlcnMiLCJkZWZhdWx0ZWRGaWx0ZXJzIiwiZXhhY3QiLCJmaW5kQWxsIiwiT2JqZWN0Iiwia2V5cyIsImxlbmd0aCIsImZpbHRlciIsImV2ZW50IiwibGlzdGVuZXJzIiwibGlzdGVuZXIiLCJvbkZvY3VzIiwib25PbmxpbmUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@tanstack/query-core/build/modern/queryCache.js\n',
      );

      /***/
    },

  /***/ "(ssr)/../node_modules/@tanstack/query-core/build/modern/queryClient.js":
    /*!************************************************************************!*\
  !*** ../node_modules/@tanstack/query-core/build/modern/queryClient.js ***!
  \************************************************************************/
    /***/ (
      __unused_webpack___webpack_module__,
      __webpack_exports__,
      __webpack_require__,
    ) => {
      eval(
        '__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   QueryClient: () => (/* binding */ QueryClient)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils.js */ "(ssr)/../node_modules/@tanstack/query-core/build/modern/utils.js");\n/* harmony import */ var _queryCache_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./queryCache.js */ "(ssr)/../node_modules/@tanstack/query-core/build/modern/queryCache.js");\n/* harmony import */ var _mutationCache_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mutationCache.js */ "(ssr)/../node_modules/@tanstack/query-core/build/modern/mutationCache.js");\n/* harmony import */ var _focusManager_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./focusManager.js */ "(ssr)/../node_modules/@tanstack/query-core/build/modern/focusManager.js");\n/* harmony import */ var _onlineManager_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./onlineManager.js */ "(ssr)/../node_modules/@tanstack/query-core/build/modern/onlineManager.js");\n/* harmony import */ var _notifyManager_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./notifyManager.js */ "(ssr)/../node_modules/@tanstack/query-core/build/modern/notifyManager.js");\n/* harmony import */ var _infiniteQueryBehavior_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./infiniteQueryBehavior.js */ "(ssr)/../node_modules/@tanstack/query-core/build/modern/infiniteQueryBehavior.js");\n// src/queryClient.ts\n\n\n\n\n\n\n\nvar QueryClient = class {\n    #queryCache;\n    #mutationCache;\n    #defaultOptions;\n    #queryDefaults;\n    #mutationDefaults;\n    #mountCount;\n    #unsubscribeFocus;\n    #unsubscribeOnline;\n    constructor(config = {}){\n        this.#queryCache = config.queryCache || new _queryCache_js__WEBPACK_IMPORTED_MODULE_0__.QueryCache();\n        this.#mutationCache = config.mutationCache || new _mutationCache_js__WEBPACK_IMPORTED_MODULE_1__.MutationCache();\n        this.#defaultOptions = config.defaultOptions || {};\n        this.#queryDefaults = /* @__PURE__ */ new Map();\n        this.#mutationDefaults = /* @__PURE__ */ new Map();\n        this.#mountCount = 0;\n    }\n    mount() {\n        this.#mountCount++;\n        if (this.#mountCount !== 1) return;\n        this.#unsubscribeFocus = _focusManager_js__WEBPACK_IMPORTED_MODULE_2__.focusManager.subscribe(()=>{\n            if (_focusManager_js__WEBPACK_IMPORTED_MODULE_2__.focusManager.isFocused()) {\n                this.resumePausedMutations();\n                this.#queryCache.onFocus();\n            }\n        });\n        this.#unsubscribeOnline = _onlineManager_js__WEBPACK_IMPORTED_MODULE_3__.onlineManager.subscribe(()=>{\n            if (_onlineManager_js__WEBPACK_IMPORTED_MODULE_3__.onlineManager.isOnline()) {\n                this.resumePausedMutations();\n                this.#queryCache.onOnline();\n            }\n        });\n    }\n    unmount() {\n        this.#mountCount--;\n        if (this.#mountCount !== 0) return;\n        this.#unsubscribeFocus?.();\n        this.#unsubscribeFocus = void 0;\n        this.#unsubscribeOnline?.();\n        this.#unsubscribeOnline = void 0;\n    }\n    isFetching(filters) {\n        return this.#queryCache.findAll({\n            ...filters,\n            fetchStatus: "fetching"\n        }).length;\n    }\n    isMutating(filters) {\n        return this.#mutationCache.findAll({\n            ...filters,\n            status: "pending"\n        }).length;\n    }\n    getQueryData(queryKey) {\n        return this.#queryCache.find({\n            queryKey\n        })?.state.data;\n    }\n    ensureQueryData(options) {\n        const cachedData = this.getQueryData(options.queryKey);\n        return cachedData !== void 0 ? Promise.resolve(cachedData) : this.fetchQuery(options);\n    }\n    getQueriesData(filters) {\n        return this.getQueryCache().findAll(filters).map(({ queryKey, state })=>{\n            const data = state.data;\n            return [\n                queryKey,\n                data\n            ];\n        });\n    }\n    setQueryData(queryKey, updater, options) {\n        const query = this.#queryCache.find({\n            queryKey\n        });\n        const prevData = query?.state.data;\n        const data = (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.functionalUpdate)(updater, prevData);\n        if (typeof data === "undefined") {\n            return void 0;\n        }\n        const defaultedOptions = this.defaultQueryOptions({\n            queryKey\n        });\n        return this.#queryCache.build(this, defaultedOptions).setData(data, {\n            ...options,\n            manual: true\n        });\n    }\n    setQueriesData(filters, updater, options) {\n        return _notifyManager_js__WEBPACK_IMPORTED_MODULE_5__.notifyManager.batch(()=>this.getQueryCache().findAll(filters).map(({ queryKey })=>[\n                    queryKey,\n                    this.setQueryData(queryKey, updater, options)\n                ]));\n    }\n    getQueryState(queryKey) {\n        return this.#queryCache.find({\n            queryKey\n        })?.state;\n    }\n    removeQueries(filters) {\n        const queryCache = this.#queryCache;\n        _notifyManager_js__WEBPACK_IMPORTED_MODULE_5__.notifyManager.batch(()=>{\n            queryCache.findAll(filters).forEach((query)=>{\n                queryCache.remove(query);\n            });\n        });\n    }\n    resetQueries(filters, options) {\n        const queryCache = this.#queryCache;\n        const refetchFilters = {\n            type: "active",\n            ...filters\n        };\n        return _notifyManager_js__WEBPACK_IMPORTED_MODULE_5__.notifyManager.batch(()=>{\n            queryCache.findAll(filters).forEach((query)=>{\n                query.reset();\n            });\n            return this.refetchQueries(refetchFilters, options);\n        });\n    }\n    cancelQueries(filters = {}, cancelOptions = {}) {\n        const defaultedCancelOptions = {\n            revert: true,\n            ...cancelOptions\n        };\n        const promises = _notifyManager_js__WEBPACK_IMPORTED_MODULE_5__.notifyManager.batch(()=>this.#queryCache.findAll(filters).map((query)=>query.cancel(defaultedCancelOptions)));\n        return Promise.all(promises).then(_utils_js__WEBPACK_IMPORTED_MODULE_4__.noop).catch(_utils_js__WEBPACK_IMPORTED_MODULE_4__.noop);\n    }\n    invalidateQueries(filters = {}, options = {}) {\n        return _notifyManager_js__WEBPACK_IMPORTED_MODULE_5__.notifyManager.batch(()=>{\n            this.#queryCache.findAll(filters).forEach((query)=>{\n                query.invalidate();\n            });\n            if (filters.refetchType === "none") {\n                return Promise.resolve();\n            }\n            const refetchFilters = {\n                ...filters,\n                type: filters.refetchType ?? filters.type ?? "active"\n            };\n            return this.refetchQueries(refetchFilters, options);\n        });\n    }\n    refetchQueries(filters = {}, options) {\n        const fetchOptions = {\n            ...options,\n            cancelRefetch: options?.cancelRefetch ?? true\n        };\n        const promises = _notifyManager_js__WEBPACK_IMPORTED_MODULE_5__.notifyManager.batch(()=>this.#queryCache.findAll(filters).filter((query)=>!query.isDisabled()).map((query)=>{\n                let promise = query.fetch(void 0, fetchOptions);\n                if (!fetchOptions.throwOnError) {\n                    promise = promise.catch(_utils_js__WEBPACK_IMPORTED_MODULE_4__.noop);\n                }\n                return query.state.fetchStatus === "paused" ? Promise.resolve() : promise;\n            }));\n        return Promise.all(promises).then(_utils_js__WEBPACK_IMPORTED_MODULE_4__.noop);\n    }\n    fetchQuery(options) {\n        const defaultedOptions = this.defaultQueryOptions(options);\n        if (typeof defaultedOptions.retry === "undefined") {\n            defaultedOptions.retry = false;\n        }\n        const query = this.#queryCache.build(this, defaultedOptions);\n        return query.isStaleByTime(defaultedOptions.staleTime) ? query.fetch(defaultedOptions) : Promise.resolve(query.state.data);\n    }\n    prefetchQuery(options) {\n        return this.fetchQuery(options).then(_utils_js__WEBPACK_IMPORTED_MODULE_4__.noop).catch(_utils_js__WEBPACK_IMPORTED_MODULE_4__.noop);\n    }\n    fetchInfiniteQuery(options) {\n        options.behavior = (0,_infiniteQueryBehavior_js__WEBPACK_IMPORTED_MODULE_6__.infiniteQueryBehavior)(options.pages);\n        return this.fetchQuery(options);\n    }\n    prefetchInfiniteQuery(options) {\n        return this.fetchInfiniteQuery(options).then(_utils_js__WEBPACK_IMPORTED_MODULE_4__.noop).catch(_utils_js__WEBPACK_IMPORTED_MODULE_4__.noop);\n    }\n    resumePausedMutations() {\n        return this.#mutationCache.resumePausedMutations();\n    }\n    getQueryCache() {\n        return this.#queryCache;\n    }\n    getMutationCache() {\n        return this.#mutationCache;\n    }\n    getDefaultOptions() {\n        return this.#defaultOptions;\n    }\n    setDefaultOptions(options) {\n        this.#defaultOptions = options;\n    }\n    setQueryDefaults(queryKey, options) {\n        this.#queryDefaults.set((0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.hashKey)(queryKey), {\n            queryKey,\n            defaultOptions: options\n        });\n    }\n    getQueryDefaults(queryKey) {\n        const defaults = [\n            ...this.#queryDefaults.values()\n        ];\n        let result = {};\n        defaults.forEach((queryDefault)=>{\n            if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.partialMatchKey)(queryKey, queryDefault.queryKey)) {\n                result = {\n                    ...result,\n                    ...queryDefault.defaultOptions\n                };\n            }\n        });\n        return result;\n    }\n    setMutationDefaults(mutationKey, options) {\n        this.#mutationDefaults.set((0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.hashKey)(mutationKey), {\n            mutationKey,\n            defaultOptions: options\n        });\n    }\n    getMutationDefaults(mutationKey) {\n        const defaults = [\n            ...this.#mutationDefaults.values()\n        ];\n        let result = {};\n        defaults.forEach((queryDefault)=>{\n            if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.partialMatchKey)(mutationKey, queryDefault.mutationKey)) {\n                result = {\n                    ...result,\n                    ...queryDefault.defaultOptions\n                };\n            }\n        });\n        return result;\n    }\n    defaultQueryOptions(options) {\n        if (options?._defaulted) {\n            return options;\n        }\n        const defaultedOptions = {\n            ...this.#defaultOptions.queries,\n            ...options?.queryKey && this.getQueryDefaults(options.queryKey),\n            ...options,\n            _defaulted: true\n        };\n        if (!defaultedOptions.queryHash) {\n            defaultedOptions.queryHash = (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.hashQueryKeyByOptions)(defaultedOptions.queryKey, defaultedOptions);\n        }\n        if (typeof defaultedOptions.refetchOnReconnect === "undefined") {\n            defaultedOptions.refetchOnReconnect = defaultedOptions.networkMode !== "always";\n        }\n        if (typeof defaultedOptions.throwOnError === "undefined") {\n            defaultedOptions.throwOnError = !!defaultedOptions.suspense;\n        }\n        if (typeof defaultedOptions.networkMode === "undefined" && defaultedOptions.persister) {\n            defaultedOptions.networkMode = "offlineFirst";\n        }\n        return defaultedOptions;\n    }\n    defaultMutationOptions(options) {\n        if (options?._defaulted) {\n            return options;\n        }\n        return {\n            ...this.#defaultOptions.mutations,\n            ...options?.mutationKey && this.getMutationDefaults(options.mutationKey),\n            ...options,\n            _defaulted: true\n        };\n    }\n    clear() {\n        this.#queryCache.clear();\n        this.#mutationCache.clear();\n    }\n};\n //# sourceMappingURL=queryClient.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@tanstack/query-core/build/modern/queryClient.js\n',
      );

      /***/
    },

  /***/ "(ssr)/../node_modules/@tanstack/query-core/build/modern/queryObserver.js":
    /*!**************************************************************************!*\
  !*** ../node_modules/@tanstack/query-core/build/modern/queryObserver.js ***!
  \**************************************************************************/
    /***/ (
      __unused_webpack___webpack_module__,
      __webpack_exports__,
      __webpack_require__,
    ) => {
      eval(
        '__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   QueryObserver: () => (/* binding */ QueryObserver)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ "(ssr)/../node_modules/@tanstack/query-core/build/modern/utils.js");\n/* harmony import */ var _notifyManager_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./notifyManager.js */ "(ssr)/../node_modules/@tanstack/query-core/build/modern/notifyManager.js");\n/* harmony import */ var _focusManager_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./focusManager.js */ "(ssr)/../node_modules/@tanstack/query-core/build/modern/focusManager.js");\n/* harmony import */ var _subscribable_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./subscribable.js */ "(ssr)/../node_modules/@tanstack/query-core/build/modern/subscribable.js");\n/* harmony import */ var _retryer_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./retryer.js */ "(ssr)/../node_modules/@tanstack/query-core/build/modern/retryer.js");\n// src/queryObserver.ts\n\n\n\n\n\nvar QueryObserver = class extends _subscribable_js__WEBPACK_IMPORTED_MODULE_0__.Subscribable {\n    constructor(client, options){\n        super();\n        this.#currentQuery = void 0;\n        this.#currentQueryInitialState = void 0;\n        this.#currentResult = void 0;\n        this.#trackedProps = /* @__PURE__ */ new Set();\n        this.options = options;\n        this.#client = client;\n        this.#selectError = null;\n        this.bindMethods();\n        this.setOptions(options);\n    }\n    #client;\n    #currentQuery;\n    #currentQueryInitialState;\n    #currentResult;\n    #currentResultState;\n    #currentResultOptions;\n    #selectError;\n    #selectFn;\n    #selectResult;\n    // This property keeps track of the last query with defined data.\n    // It will be used to pass the previous data and query to the placeholder function between renders.\n    #lastQueryWithDefinedData;\n    #staleTimeoutId;\n    #refetchIntervalId;\n    #currentRefetchInterval;\n    #trackedProps;\n    bindMethods() {\n        this.refetch = this.refetch.bind(this);\n    }\n    onSubscribe() {\n        if (this.listeners.size === 1) {\n            this.#currentQuery.addObserver(this);\n            if (shouldFetchOnMount(this.#currentQuery, this.options)) {\n                this.#executeFetch();\n            } else {\n                this.updateResult();\n            }\n            this.#updateTimers();\n        }\n    }\n    onUnsubscribe() {\n        if (!this.hasListeners()) {\n            this.destroy();\n        }\n    }\n    shouldFetchOnReconnect() {\n        return shouldFetchOn(this.#currentQuery, this.options, this.options.refetchOnReconnect);\n    }\n    shouldFetchOnWindowFocus() {\n        return shouldFetchOn(this.#currentQuery, this.options, this.options.refetchOnWindowFocus);\n    }\n    destroy() {\n        this.listeners = /* @__PURE__ */ new Set();\n        this.#clearStaleTimeout();\n        this.#clearRefetchInterval();\n        this.#currentQuery.removeObserver(this);\n    }\n    setOptions(options, notifyOptions) {\n        const prevOptions = this.options;\n        const prevQuery = this.#currentQuery;\n        this.options = this.#client.defaultQueryOptions(options);\n        if (!(0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.shallowEqualObjects)(prevOptions, this.options)) {\n            this.#client.getQueryCache().notify({\n                type: "observerOptionsUpdated",\n                query: this.#currentQuery,\n                observer: this\n            });\n        }\n        if (typeof this.options.enabled !== "undefined" && typeof this.options.enabled !== "boolean") {\n            throw new Error("Expected enabled to be a boolean");\n        }\n        if (!this.options.queryKey) {\n            this.options.queryKey = prevOptions.queryKey;\n        }\n        this.#updateQuery();\n        const mounted = this.hasListeners();\n        if (mounted && shouldFetchOptionally(this.#currentQuery, prevQuery, this.options, prevOptions)) {\n            this.#executeFetch();\n        }\n        this.updateResult(notifyOptions);\n        if (mounted && (this.#currentQuery !== prevQuery || this.options.enabled !== prevOptions.enabled || this.options.staleTime !== prevOptions.staleTime)) {\n            this.#updateStaleTimeout();\n        }\n        const nextRefetchInterval = this.#computeRefetchInterval();\n        if (mounted && (this.#currentQuery !== prevQuery || this.options.enabled !== prevOptions.enabled || nextRefetchInterval !== this.#currentRefetchInterval)) {\n            this.#updateRefetchInterval(nextRefetchInterval);\n        }\n    }\n    getOptimisticResult(options) {\n        const query = this.#client.getQueryCache().build(this.#client, options);\n        const result = this.createResult(query, options);\n        if (shouldAssignObserverCurrentProperties(this, result)) {\n            this.#currentResult = result;\n            this.#currentResultOptions = this.options;\n            this.#currentResultState = this.#currentQuery.state;\n        }\n        return result;\n    }\n    getCurrentResult() {\n        return this.#currentResult;\n    }\n    trackResult(result) {\n        const trackedResult = {};\n        Object.keys(result).forEach((key)=>{\n            Object.defineProperty(trackedResult, key, {\n                configurable: false,\n                enumerable: true,\n                get: ()=>{\n                    this.#trackedProps.add(key);\n                    return result[key];\n                }\n            });\n        });\n        return trackedResult;\n    }\n    getCurrentQuery() {\n        return this.#currentQuery;\n    }\n    refetch({ ...options } = {}) {\n        return this.fetch({\n            ...options\n        });\n    }\n    fetchOptimistic(options) {\n        const defaultedOptions = this.#client.defaultQueryOptions(options);\n        const query = this.#client.getQueryCache().build(this.#client, defaultedOptions);\n        query.isFetchingOptimistic = true;\n        return query.fetch().then(()=>this.createResult(query, defaultedOptions));\n    }\n    fetch(fetchOptions) {\n        return this.#executeFetch({\n            ...fetchOptions,\n            cancelRefetch: fetchOptions.cancelRefetch ?? true\n        }).then(()=>{\n            this.updateResult();\n            return this.#currentResult;\n        });\n    }\n    #executeFetch(fetchOptions) {\n        this.#updateQuery();\n        let promise = this.#currentQuery.fetch(this.options, fetchOptions);\n        if (!fetchOptions?.throwOnError) {\n            promise = promise.catch(_utils_js__WEBPACK_IMPORTED_MODULE_1__.noop);\n        }\n        return promise;\n    }\n    #updateStaleTimeout() {\n        this.#clearStaleTimeout();\n        if (_utils_js__WEBPACK_IMPORTED_MODULE_1__.isServer || this.#currentResult.isStale || !(0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.isValidTimeout)(this.options.staleTime)) {\n            return;\n        }\n        const time = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.timeUntilStale)(this.#currentResult.dataUpdatedAt, this.options.staleTime);\n        const timeout = time + 1;\n        this.#staleTimeoutId = setTimeout(()=>{\n            if (!this.#currentResult.isStale) {\n                this.updateResult();\n            }\n        }, timeout);\n    }\n    #computeRefetchInterval() {\n        return (typeof this.options.refetchInterval === "function" ? this.options.refetchInterval(this.#currentQuery) : this.options.refetchInterval) ?? false;\n    }\n    #updateRefetchInterval(nextInterval) {\n        this.#clearRefetchInterval();\n        this.#currentRefetchInterval = nextInterval;\n        if (_utils_js__WEBPACK_IMPORTED_MODULE_1__.isServer || this.options.enabled === false || !(0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.isValidTimeout)(this.#currentRefetchInterval) || this.#currentRefetchInterval === 0) {\n            return;\n        }\n        this.#refetchIntervalId = setInterval(()=>{\n            if (this.options.refetchIntervalInBackground || _focusManager_js__WEBPACK_IMPORTED_MODULE_2__.focusManager.isFocused()) {\n                this.#executeFetch();\n            }\n        }, this.#currentRefetchInterval);\n    }\n    #updateTimers() {\n        this.#updateStaleTimeout();\n        this.#updateRefetchInterval(this.#computeRefetchInterval());\n    }\n    #clearStaleTimeout() {\n        if (this.#staleTimeoutId) {\n            clearTimeout(this.#staleTimeoutId);\n            this.#staleTimeoutId = void 0;\n        }\n    }\n    #clearRefetchInterval() {\n        if (this.#refetchIntervalId) {\n            clearInterval(this.#refetchIntervalId);\n            this.#refetchIntervalId = void 0;\n        }\n    }\n    createResult(query, options) {\n        const prevQuery = this.#currentQuery;\n        const prevOptions = this.options;\n        const prevResult = this.#currentResult;\n        const prevResultState = this.#currentResultState;\n        const prevResultOptions = this.#currentResultOptions;\n        const queryChange = query !== prevQuery;\n        const queryInitialState = queryChange ? query.state : this.#currentQueryInitialState;\n        const { state } = query;\n        let { error, errorUpdatedAt, fetchStatus, status } = state;\n        let isPlaceholderData = false;\n        let data;\n        if (options._optimisticResults) {\n            const mounted = this.hasListeners();\n            const fetchOnMount = !mounted && shouldFetchOnMount(query, options);\n            const fetchOptionally = mounted && shouldFetchOptionally(query, prevQuery, options, prevOptions);\n            if (fetchOnMount || fetchOptionally) {\n                fetchStatus = (0,_retryer_js__WEBPACK_IMPORTED_MODULE_3__.canFetch)(query.options.networkMode) ? "fetching" : "paused";\n                if (!state.dataUpdatedAt) {\n                    status = "pending";\n                }\n            }\n            if (options._optimisticResults === "isRestoring") {\n                fetchStatus = "idle";\n            }\n        }\n        if (options.select && typeof state.data !== "undefined") {\n            if (prevResult && state.data === prevResultState?.data && options.select === this.#selectFn) {\n                data = this.#selectResult;\n            } else {\n                try {\n                    this.#selectFn = options.select;\n                    data = options.select(state.data);\n                    data = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.replaceData)(prevResult?.data, data, options);\n                    this.#selectResult = data;\n                    this.#selectError = null;\n                } catch (selectError) {\n                    this.#selectError = selectError;\n                }\n            }\n        } else {\n            data = state.data;\n        }\n        if (typeof options.placeholderData !== "undefined" && typeof data === "undefined" && status === "pending") {\n            let placeholderData;\n            if (prevResult?.isPlaceholderData && options.placeholderData === prevResultOptions?.placeholderData) {\n                placeholderData = prevResult.data;\n            } else {\n                placeholderData = typeof options.placeholderData === "function" ? options.placeholderData(this.#lastQueryWithDefinedData?.state.data, this.#lastQueryWithDefinedData) : options.placeholderData;\n                if (options.select && typeof placeholderData !== "undefined") {\n                    try {\n                        placeholderData = options.select(placeholderData);\n                        this.#selectError = null;\n                    } catch (selectError) {\n                        this.#selectError = selectError;\n                    }\n                }\n            }\n            if (typeof placeholderData !== "undefined") {\n                status = "success";\n                data = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.replaceData)(prevResult?.data, placeholderData, options);\n                isPlaceholderData = true;\n            }\n        }\n        if (this.#selectError) {\n            error = this.#selectError;\n            data = this.#selectResult;\n            errorUpdatedAt = Date.now();\n            status = "error";\n        }\n        const isFetching = fetchStatus === "fetching";\n        const isPending = status === "pending";\n        const isError = status === "error";\n        const isLoading = isPending && isFetching;\n        const result = {\n            status,\n            fetchStatus,\n            isPending,\n            isSuccess: status === "success",\n            isError,\n            isInitialLoading: isLoading,\n            isLoading,\n            data,\n            dataUpdatedAt: state.dataUpdatedAt,\n            error,\n            errorUpdatedAt,\n            failureCount: state.fetchFailureCount,\n            failureReason: state.fetchFailureReason,\n            errorUpdateCount: state.errorUpdateCount,\n            isFetched: state.dataUpdateCount > 0 || state.errorUpdateCount > 0,\n            isFetchedAfterMount: state.dataUpdateCount > queryInitialState.dataUpdateCount || state.errorUpdateCount > queryInitialState.errorUpdateCount,\n            isFetching,\n            isRefetching: isFetching && !isPending,\n            isLoadingError: isError && state.dataUpdatedAt === 0,\n            isPaused: fetchStatus === "paused",\n            isPlaceholderData,\n            isRefetchError: isError && state.dataUpdatedAt !== 0,\n            isStale: isStale(query, options),\n            refetch: this.refetch\n        };\n        return result;\n    }\n    updateResult(notifyOptions) {\n        const prevResult = this.#currentResult;\n        const nextResult = this.createResult(this.#currentQuery, this.options);\n        this.#currentResultState = this.#currentQuery.state;\n        this.#currentResultOptions = this.options;\n        if (this.#currentResultState.data !== void 0) {\n            this.#lastQueryWithDefinedData = this.#currentQuery;\n        }\n        if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.shallowEqualObjects)(nextResult, prevResult)) {\n            return;\n        }\n        this.#currentResult = nextResult;\n        const defaultNotifyOptions = {};\n        const shouldNotifyListeners = ()=>{\n            if (!prevResult) {\n                return true;\n            }\n            const { notifyOnChangeProps } = this.options;\n            const notifyOnChangePropsValue = typeof notifyOnChangeProps === "function" ? notifyOnChangeProps() : notifyOnChangeProps;\n            if (notifyOnChangePropsValue === "all" || !notifyOnChangePropsValue && !this.#trackedProps.size) {\n                return true;\n            }\n            const includedProps = new Set(notifyOnChangePropsValue ?? this.#trackedProps);\n            if (this.options.throwOnError) {\n                includedProps.add("error");\n            }\n            return Object.keys(this.#currentResult).some((key)=>{\n                const typedKey = key;\n                const changed = this.#currentResult[typedKey] !== prevResult[typedKey];\n                return changed && includedProps.has(typedKey);\n            });\n        };\n        if (notifyOptions?.listeners !== false && shouldNotifyListeners()) {\n            defaultNotifyOptions.listeners = true;\n        }\n        this.#notify({\n            ...defaultNotifyOptions,\n            ...notifyOptions\n        });\n    }\n    #updateQuery() {\n        const query = this.#client.getQueryCache().build(this.#client, this.options);\n        if (query === this.#currentQuery) {\n            return;\n        }\n        const prevQuery = this.#currentQuery;\n        this.#currentQuery = query;\n        this.#currentQueryInitialState = query.state;\n        if (this.hasListeners()) {\n            prevQuery?.removeObserver(this);\n            query.addObserver(this);\n        }\n    }\n    onQueryUpdate() {\n        this.updateResult();\n        if (this.hasListeners()) {\n            this.#updateTimers();\n        }\n    }\n    #notify(notifyOptions) {\n        _notifyManager_js__WEBPACK_IMPORTED_MODULE_4__.notifyManager.batch(()=>{\n            if (notifyOptions.listeners) {\n                this.listeners.forEach((listener)=>{\n                    listener(this.#currentResult);\n                });\n            }\n            this.#client.getQueryCache().notify({\n                query: this.#currentQuery,\n                type: "observerResultsUpdated"\n            });\n        });\n    }\n};\nfunction shouldLoadOnMount(query, options) {\n    return options.enabled !== false && !query.state.dataUpdatedAt && !(query.state.status === "error" && options.retryOnMount === false);\n}\nfunction shouldFetchOnMount(query, options) {\n    return shouldLoadOnMount(query, options) || query.state.dataUpdatedAt > 0 && shouldFetchOn(query, options, options.refetchOnMount);\n}\nfunction shouldFetchOn(query, options, field) {\n    if (options.enabled !== false) {\n        const value = typeof field === "function" ? field(query) : field;\n        return value === "always" || value !== false && isStale(query, options);\n    }\n    return false;\n}\nfunction shouldFetchOptionally(query, prevQuery, options, prevOptions) {\n    return options.enabled !== false && (query !== prevQuery || prevOptions.enabled === false) && (!options.suspense || query.state.status !== "error") && isStale(query, options);\n}\nfunction isStale(query, options) {\n    return query.isStaleByTime(options.staleTime);\n}\nfunction shouldAssignObserverCurrentProperties(observer, optimisticResult) {\n    if (!(0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.shallowEqualObjects)(observer.getCurrentResult(), optimisticResult)) {\n        return true;\n    }\n    return false;\n}\n //# sourceMappingURL=queryObserver.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@tanstack/query-core/build/modern/queryObserver.js\n',
      );

      /***/
    },

  /***/ "(ssr)/../node_modules/@tanstack/query-core/build/modern/removable.js":
    /*!**********************************************************************!*\
  !*** ../node_modules/@tanstack/query-core/build/modern/removable.js ***!
  \**********************************************************************/
    /***/ (
      __unused_webpack___webpack_module__,
      __webpack_exports__,
      __webpack_require__,
    ) => {
      eval(
        '__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Removable: () => (/* binding */ Removable)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ "(ssr)/../node_modules/@tanstack/query-core/build/modern/utils.js");\n// src/removable.ts\n\nvar Removable = class {\n    #gcTimeout;\n    destroy() {\n        this.clearGcTimeout();\n    }\n    scheduleGc() {\n        this.clearGcTimeout();\n        if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.isValidTimeout)(this.gcTime)) {\n            this.#gcTimeout = setTimeout(()=>{\n                this.optionalRemove();\n            }, this.gcTime);\n        }\n    }\n    updateGcTime(newGcTime) {\n        this.gcTime = Math.max(this.gcTime || 0, newGcTime ?? (_utils_js__WEBPACK_IMPORTED_MODULE_0__.isServer ? Infinity : 5 * 60 * 1e3));\n    }\n    clearGcTimeout() {\n        if (this.#gcTimeout) {\n            clearTimeout(this.#gcTimeout);\n            this.#gcTimeout = void 0;\n        }\n    }\n};\n //# sourceMappingURL=removable.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9xdWVyeS1jb3JlL2J1aWxkL21vZGVybi9yZW1vdmFibGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxtQkFBbUI7QUFDbUM7QUFDdEQsSUFBSUUsWUFBWTtJQUNkLENBQUNDLFNBQVMsQ0FBQztJQUNYQyxVQUFVO1FBQ1IsSUFBSSxDQUFDQyxjQUFjO0lBQ3JCO0lBQ0FDLGFBQWE7UUFDWCxJQUFJLENBQUNELGNBQWM7UUFDbkIsSUFBSUoseURBQWNBLENBQUMsSUFBSSxDQUFDTSxNQUFNLEdBQUc7WUFDL0IsSUFBSSxDQUFDLENBQUNKLFNBQVMsR0FBR0ssV0FBVztnQkFDM0IsSUFBSSxDQUFDQyxjQUFjO1lBQ3JCLEdBQUcsSUFBSSxDQUFDRixNQUFNO1FBQ2hCO0lBQ0Y7SUFDQUcsYUFBYUMsU0FBUyxFQUFFO1FBQ3RCLElBQUksQ0FBQ0osTUFBTSxHQUFHSyxLQUFLQyxHQUFHLENBQ3BCLElBQUksQ0FBQ04sTUFBTSxJQUFJLEdBQ2ZJLGFBQWNYLENBQUFBLCtDQUFRQSxHQUFHYyxXQUFXLElBQUksS0FBSyxHQUFFO0lBRW5EO0lBQ0FULGlCQUFpQjtRQUNmLElBQUksSUFBSSxDQUFDLENBQUNGLFNBQVMsRUFBRTtZQUNuQlksYUFBYSxJQUFJLENBQUMsQ0FBQ1osU0FBUztZQUM1QixJQUFJLENBQUMsQ0FBQ0EsU0FBUyxHQUFHLEtBQUs7UUFDekI7SUFDRjtBQUNGO0FBR0UsQ0FDRixxQ0FBcUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oYWNraHViYi8uLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3F1ZXJ5LWNvcmUvYnVpbGQvbW9kZXJuL3JlbW92YWJsZS5qcz83YTViIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9yZW1vdmFibGUudHNcbmltcG9ydCB7IGlzU2VydmVyLCBpc1ZhbGlkVGltZW91dCB9IGZyb20gXCIuL3V0aWxzLmpzXCI7XG52YXIgUmVtb3ZhYmxlID0gY2xhc3Mge1xuICAjZ2NUaW1lb3V0O1xuICBkZXN0cm95KCkge1xuICAgIHRoaXMuY2xlYXJHY1RpbWVvdXQoKTtcbiAgfVxuICBzY2hlZHVsZUdjKCkge1xuICAgIHRoaXMuY2xlYXJHY1RpbWVvdXQoKTtcbiAgICBpZiAoaXNWYWxpZFRpbWVvdXQodGhpcy5nY1RpbWUpKSB7XG4gICAgICB0aGlzLiNnY1RpbWVvdXQgPSBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgdGhpcy5vcHRpb25hbFJlbW92ZSgpO1xuICAgICAgfSwgdGhpcy5nY1RpbWUpO1xuICAgIH1cbiAgfVxuICB1cGRhdGVHY1RpbWUobmV3R2NUaW1lKSB7XG4gICAgdGhpcy5nY1RpbWUgPSBNYXRoLm1heChcbiAgICAgIHRoaXMuZ2NUaW1lIHx8IDAsXG4gICAgICBuZXdHY1RpbWUgPz8gKGlzU2VydmVyID8gSW5maW5pdHkgOiA1ICogNjAgKiAxZTMpXG4gICAgKTtcbiAgfVxuICBjbGVhckdjVGltZW91dCgpIHtcbiAgICBpZiAodGhpcy4jZ2NUaW1lb3V0KSB7XG4gICAgICBjbGVhclRpbWVvdXQodGhpcy4jZ2NUaW1lb3V0KTtcbiAgICAgIHRoaXMuI2djVGltZW91dCA9IHZvaWQgMDtcbiAgICB9XG4gIH1cbn07XG5leHBvcnQge1xuICBSZW1vdmFibGVcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZW1vdmFibGUuanMubWFwIl0sIm5hbWVzIjpbImlzU2VydmVyIiwiaXNWYWxpZFRpbWVvdXQiLCJSZW1vdmFibGUiLCJnY1RpbWVvdXQiLCJkZXN0cm95IiwiY2xlYXJHY1RpbWVvdXQiLCJzY2hlZHVsZUdjIiwiZ2NUaW1lIiwic2V0VGltZW91dCIsIm9wdGlvbmFsUmVtb3ZlIiwidXBkYXRlR2NUaW1lIiwibmV3R2NUaW1lIiwiTWF0aCIsIm1heCIsIkluZmluaXR5IiwiY2xlYXJUaW1lb3V0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@tanstack/query-core/build/modern/removable.js\n',
      );

      /***/
    },

  /***/ "(ssr)/../node_modules/@tanstack/query-core/build/modern/retryer.js":
    /*!********************************************************************!*\
  !*** ../node_modules/@tanstack/query-core/build/modern/retryer.js ***!
  \********************************************************************/
    /***/ (
      __unused_webpack___webpack_module__,
      __webpack_exports__,
      __webpack_require__,
    ) => {
      eval(
        '__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CancelledError: () => (/* binding */ CancelledError),\n/* harmony export */   canFetch: () => (/* binding */ canFetch),\n/* harmony export */   createRetryer: () => (/* binding */ createRetryer),\n/* harmony export */   isCancelledError: () => (/* binding */ isCancelledError)\n/* harmony export */ });\n/* harmony import */ var _focusManager_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./focusManager.js */ "(ssr)/../node_modules/@tanstack/query-core/build/modern/focusManager.js");\n/* harmony import */ var _onlineManager_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./onlineManager.js */ "(ssr)/../node_modules/@tanstack/query-core/build/modern/onlineManager.js");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils.js */ "(ssr)/../node_modules/@tanstack/query-core/build/modern/utils.js");\n// src/retryer.ts\n\n\n\nfunction defaultRetryDelay(failureCount) {\n    return Math.min(1e3 * 2 ** failureCount, 3e4);\n}\nfunction canFetch(networkMode) {\n    return (networkMode ?? "online") === "online" ? _onlineManager_js__WEBPACK_IMPORTED_MODULE_0__.onlineManager.isOnline() : true;\n}\nvar CancelledError = class {\n    constructor(options){\n        this.revert = options?.revert;\n        this.silent = options?.silent;\n    }\n};\nfunction isCancelledError(value) {\n    return value instanceof CancelledError;\n}\nfunction createRetryer(config) {\n    let isRetryCancelled = false;\n    let failureCount = 0;\n    let isResolved = false;\n    let continueFn;\n    let promiseResolve;\n    let promiseReject;\n    const promise = new Promise((outerResolve, outerReject)=>{\n        promiseResolve = outerResolve;\n        promiseReject = outerReject;\n    });\n    const cancel = (cancelOptions)=>{\n        if (!isResolved) {\n            reject(new CancelledError(cancelOptions));\n            config.abort?.();\n        }\n    };\n    const cancelRetry = ()=>{\n        isRetryCancelled = true;\n    };\n    const continueRetry = ()=>{\n        isRetryCancelled = false;\n    };\n    const shouldPause = ()=>!_focusManager_js__WEBPACK_IMPORTED_MODULE_1__.focusManager.isFocused() || config.networkMode !== "always" && !_onlineManager_js__WEBPACK_IMPORTED_MODULE_0__.onlineManager.isOnline();\n    const resolve = (value)=>{\n        if (!isResolved) {\n            isResolved = true;\n            config.onSuccess?.(value);\n            continueFn?.();\n            promiseResolve(value);\n        }\n    };\n    const reject = (value)=>{\n        if (!isResolved) {\n            isResolved = true;\n            config.onError?.(value);\n            continueFn?.();\n            promiseReject(value);\n        }\n    };\n    const pause = ()=>{\n        return new Promise((continueResolve)=>{\n            continueFn = (value)=>{\n                const canContinue = isResolved || !shouldPause();\n                if (canContinue) {\n                    continueResolve(value);\n                }\n                return canContinue;\n            };\n            config.onPause?.();\n        }).then(()=>{\n            continueFn = void 0;\n            if (!isResolved) {\n                config.onContinue?.();\n            }\n        });\n    };\n    const run = ()=>{\n        if (isResolved) {\n            return;\n        }\n        let promiseOrValue;\n        try {\n            promiseOrValue = config.fn();\n        } catch (error) {\n            promiseOrValue = Promise.reject(error);\n        }\n        Promise.resolve(promiseOrValue).then(resolve).catch((error)=>{\n            if (isResolved) {\n                return;\n            }\n            const retry = config.retry ?? (_utils_js__WEBPACK_IMPORTED_MODULE_2__.isServer ? 0 : 3);\n            const retryDelay = config.retryDelay ?? defaultRetryDelay;\n            const delay = typeof retryDelay === "function" ? retryDelay(failureCount, error) : retryDelay;\n            const shouldRetry = retry === true || typeof retry === "number" && failureCount < retry || typeof retry === "function" && retry(failureCount, error);\n            if (isRetryCancelled || !shouldRetry) {\n                reject(error);\n                return;\n            }\n            failureCount++;\n            config.onFail?.(failureCount, error);\n            (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.sleep)(delay).then(()=>{\n                if (shouldPause()) {\n                    return pause();\n                }\n                return;\n            }).then(()=>{\n                if (isRetryCancelled) {\n                    reject(error);\n                } else {\n                    run();\n                }\n            });\n        });\n    };\n    if (canFetch(config.networkMode)) {\n        run();\n    } else {\n        pause().then(run);\n    }\n    return {\n        promise,\n        cancel,\n        continue: ()=>{\n            const didContinue = continueFn?.();\n            return didContinue ? promise : Promise.resolve();\n        },\n        cancelRetry,\n        continueRetry\n    };\n}\n //# sourceMappingURL=retryer.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@tanstack/query-core/build/modern/retryer.js\n',
      );

      /***/
    },

  /***/ "(ssr)/../node_modules/@tanstack/query-core/build/modern/subscribable.js":
    /*!*************************************************************************!*\
  !*** ../node_modules/@tanstack/query-core/build/modern/subscribable.js ***!
  \*************************************************************************/
    /***/ (
      __unused_webpack___webpack_module__,
      __webpack_exports__,
      __webpack_require__,
    ) => {
      eval(
        "__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Subscribable: () => (/* binding */ Subscribable)\n/* harmony export */ });\n// src/subscribable.ts\nvar Subscribable = class {\n    constructor(){\n        this.listeners = /* @__PURE__ */ new Set();\n        this.subscribe = this.subscribe.bind(this);\n    }\n    subscribe(listener) {\n        this.listeners.add(listener);\n        this.onSubscribe();\n        return ()=>{\n            this.listeners.delete(listener);\n            this.onUnsubscribe();\n        };\n    }\n    hasListeners() {\n        return this.listeners.size > 0;\n    }\n    onSubscribe() {}\n    onUnsubscribe() {}\n};\n //# sourceMappingURL=subscribable.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9xdWVyeS1jb3JlL2J1aWxkL21vZGVybi9zdWJzY3JpYmFibGUuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLHNCQUFzQjtBQUN0QixJQUFJQSxlQUFlO0lBQ2pCQyxhQUFjO1FBQ1osSUFBSSxDQUFDQyxTQUFTLEdBQUcsYUFBYSxHQUFHLElBQUlDO1FBQ3JDLElBQUksQ0FBQ0MsU0FBUyxHQUFHLElBQUksQ0FBQ0EsU0FBUyxDQUFDQyxJQUFJLENBQUMsSUFBSTtJQUMzQztJQUNBRCxVQUFVRSxRQUFRLEVBQUU7UUFDbEIsSUFBSSxDQUFDSixTQUFTLENBQUNLLEdBQUcsQ0FBQ0Q7UUFDbkIsSUFBSSxDQUFDRSxXQUFXO1FBQ2hCLE9BQU87WUFDTCxJQUFJLENBQUNOLFNBQVMsQ0FBQ08sTUFBTSxDQUFDSDtZQUN0QixJQUFJLENBQUNJLGFBQWE7UUFDcEI7SUFDRjtJQUNBQyxlQUFlO1FBQ2IsT0FBTyxJQUFJLENBQUNULFNBQVMsQ0FBQ1UsSUFBSSxHQUFHO0lBQy9CO0lBQ0FKLGNBQWMsQ0FDZDtJQUNBRSxnQkFBZ0IsQ0FDaEI7QUFDRjtBQUdFLENBQ0Ysd0NBQXdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGFja2h1YmIvLi4vbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9xdWVyeS1jb3JlL2J1aWxkL21vZGVybi9zdWJzY3JpYmFibGUuanM/ZjcwMyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvc3Vic2NyaWJhYmxlLnRzXG52YXIgU3Vic2NyaWJhYmxlID0gY2xhc3Mge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICB0aGlzLmxpc3RlbmVycyA9IC8qIEBfX1BVUkVfXyAqLyBuZXcgU2V0KCk7XG4gICAgdGhpcy5zdWJzY3JpYmUgPSB0aGlzLnN1YnNjcmliZS5iaW5kKHRoaXMpO1xuICB9XG4gIHN1YnNjcmliZShsaXN0ZW5lcikge1xuICAgIHRoaXMubGlzdGVuZXJzLmFkZChsaXN0ZW5lcik7XG4gICAgdGhpcy5vblN1YnNjcmliZSgpO1xuICAgIHJldHVybiAoKSA9PiB7XG4gICAgICB0aGlzLmxpc3RlbmVycy5kZWxldGUobGlzdGVuZXIpO1xuICAgICAgdGhpcy5vblVuc3Vic2NyaWJlKCk7XG4gICAgfTtcbiAgfVxuICBoYXNMaXN0ZW5lcnMoKSB7XG4gICAgcmV0dXJuIHRoaXMubGlzdGVuZXJzLnNpemUgPiAwO1xuICB9XG4gIG9uU3Vic2NyaWJlKCkge1xuICB9XG4gIG9uVW5zdWJzY3JpYmUoKSB7XG4gIH1cbn07XG5leHBvcnQge1xuICBTdWJzY3JpYmFibGVcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zdWJzY3JpYmFibGUuanMubWFwIl0sIm5hbWVzIjpbIlN1YnNjcmliYWJsZSIsImNvbnN0cnVjdG9yIiwibGlzdGVuZXJzIiwiU2V0Iiwic3Vic2NyaWJlIiwiYmluZCIsImxpc3RlbmVyIiwiYWRkIiwib25TdWJzY3JpYmUiLCJkZWxldGUiLCJvblVuc3Vic2NyaWJlIiwiaGFzTGlzdGVuZXJzIiwic2l6ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@tanstack/query-core/build/modern/subscribable.js\n",
      );

      /***/
    },

  /***/ "(ssr)/../node_modules/@tanstack/query-core/build/modern/utils.js":
    /*!******************************************************************!*\
  !*** ../node_modules/@tanstack/query-core/build/modern/utils.js ***!
  \******************************************************************/
    /***/ (
      __unused_webpack___webpack_module__,
      __webpack_exports__,
      __webpack_require__,
    ) => {
      eval(
        '__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addToEnd: () => (/* binding */ addToEnd),\n/* harmony export */   addToStart: () => (/* binding */ addToStart),\n/* harmony export */   functionalUpdate: () => (/* binding */ functionalUpdate),\n/* harmony export */   hashKey: () => (/* binding */ hashKey),\n/* harmony export */   hashQueryKeyByOptions: () => (/* binding */ hashQueryKeyByOptions),\n/* harmony export */   isPlainArray: () => (/* binding */ isPlainArray),\n/* harmony export */   isPlainObject: () => (/* binding */ isPlainObject),\n/* harmony export */   isServer: () => (/* binding */ isServer),\n/* harmony export */   isValidTimeout: () => (/* binding */ isValidTimeout),\n/* harmony export */   keepPreviousData: () => (/* binding */ keepPreviousData),\n/* harmony export */   matchMutation: () => (/* binding */ matchMutation),\n/* harmony export */   matchQuery: () => (/* binding */ matchQuery),\n/* harmony export */   noop: () => (/* binding */ noop),\n/* harmony export */   partialMatchKey: () => (/* binding */ partialMatchKey),\n/* harmony export */   replaceData: () => (/* binding */ replaceData),\n/* harmony export */   replaceEqualDeep: () => (/* binding */ replaceEqualDeep),\n/* harmony export */   shallowEqualObjects: () => (/* binding */ shallowEqualObjects),\n/* harmony export */   sleep: () => (/* binding */ sleep),\n/* harmony export */   timeUntilStale: () => (/* binding */ timeUntilStale)\n/* harmony export */ });\n// src/utils.ts\nvar isServer =  true || 0;\nfunction noop() {\n    return void 0;\n}\nfunction functionalUpdate(updater, input) {\n    return typeof updater === "function" ? updater(input) : updater;\n}\nfunction isValidTimeout(value) {\n    return typeof value === "number" && value >= 0 && value !== Infinity;\n}\nfunction timeUntilStale(updatedAt, staleTime) {\n    return Math.max(updatedAt + (staleTime || 0) - Date.now(), 0);\n}\nfunction matchQuery(filters, query) {\n    const { type = "all", exact, fetchStatus, predicate, queryKey, stale } = filters;\n    if (queryKey) {\n        if (exact) {\n            if (query.queryHash !== hashQueryKeyByOptions(queryKey, query.options)) {\n                return false;\n            }\n        } else if (!partialMatchKey(query.queryKey, queryKey)) {\n            return false;\n        }\n    }\n    if (type !== "all") {\n        const isActive = query.isActive();\n        if (type === "active" && !isActive) {\n            return false;\n        }\n        if (type === "inactive" && isActive) {\n            return false;\n        }\n    }\n    if (typeof stale === "boolean" && query.isStale() !== stale) {\n        return false;\n    }\n    if (typeof fetchStatus !== "undefined" && fetchStatus !== query.state.fetchStatus) {\n        return false;\n    }\n    if (predicate && !predicate(query)) {\n        return false;\n    }\n    return true;\n}\nfunction matchMutation(filters, mutation) {\n    const { exact, status, predicate, mutationKey } = filters;\n    if (mutationKey) {\n        if (!mutation.options.mutationKey) {\n            return false;\n        }\n        if (exact) {\n            if (hashKey(mutation.options.mutationKey) !== hashKey(mutationKey)) {\n                return false;\n            }\n        } else if (!partialMatchKey(mutation.options.mutationKey, mutationKey)) {\n            return false;\n        }\n    }\n    if (status && mutation.state.status !== status) {\n        return false;\n    }\n    if (predicate && !predicate(mutation)) {\n        return false;\n    }\n    return true;\n}\nfunction hashQueryKeyByOptions(queryKey, options) {\n    const hashFn = options?.queryKeyHashFn || hashKey;\n    return hashFn(queryKey);\n}\nfunction hashKey(queryKey) {\n    return JSON.stringify(queryKey, (_, val)=>isPlainObject(val) ? Object.keys(val).sort().reduce((result, key)=>{\n            result[key] = val[key];\n            return result;\n        }, {}) : val);\n}\nfunction partialMatchKey(a, b) {\n    if (a === b) {\n        return true;\n    }\n    if (typeof a !== typeof b) {\n        return false;\n    }\n    if (a && b && typeof a === "object" && typeof b === "object") {\n        return !Object.keys(b).some((key)=>!partialMatchKey(a[key], b[key]));\n    }\n    return false;\n}\nfunction replaceEqualDeep(a, b) {\n    if (a === b) {\n        return a;\n    }\n    const array = isPlainArray(a) && isPlainArray(b);\n    if (array || isPlainObject(a) && isPlainObject(b)) {\n        const aItems = array ? a : Object.keys(a);\n        const aSize = aItems.length;\n        const bItems = array ? b : Object.keys(b);\n        const bSize = bItems.length;\n        const copy = array ? [] : {};\n        let equalItems = 0;\n        for(let i = 0; i < bSize; i++){\n            const key = array ? i : bItems[i];\n            if (!array && a[key] === void 0 && b[key] === void 0 && aItems.includes(key)) {\n                copy[key] = void 0;\n                equalItems++;\n            } else {\n                copy[key] = replaceEqualDeep(a[key], b[key]);\n                if (copy[key] === a[key] && a[key] !== void 0) {\n                    equalItems++;\n                }\n            }\n        }\n        return aSize === bSize && equalItems === aSize ? a : copy;\n    }\n    return b;\n}\nfunction shallowEqualObjects(a, b) {\n    if (a && !b || b && !a) {\n        return false;\n    }\n    for(const key in a){\n        if (a[key] !== b[key]) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction isPlainArray(value) {\n    return Array.isArray(value) && value.length === Object.keys(value).length;\n}\nfunction isPlainObject(o) {\n    if (!hasObjectPrototype(o)) {\n        return false;\n    }\n    const ctor = o.constructor;\n    if (typeof ctor === "undefined") {\n        return true;\n    }\n    const prot = ctor.prototype;\n    if (!hasObjectPrototype(prot)) {\n        return false;\n    }\n    if (!prot.hasOwnProperty("isPrototypeOf")) {\n        return false;\n    }\n    return true;\n}\nfunction hasObjectPrototype(o) {\n    return Object.prototype.toString.call(o) === "[object Object]";\n}\nfunction sleep(ms) {\n    return new Promise((resolve)=>{\n        setTimeout(resolve, ms);\n    });\n}\nfunction replaceData(prevData, data, options) {\n    if (typeof options.structuralSharing === "function") {\n        return options.structuralSharing(prevData, data);\n    } else if (options.structuralSharing !== false) {\n        return replaceEqualDeep(prevData, data);\n    }\n    return data;\n}\nfunction keepPreviousData(previousData) {\n    return previousData;\n}\nfunction addToEnd(items, item, max = 0) {\n    const newItems = [\n        ...items,\n        item\n    ];\n    return max && newItems.length > max ? newItems.slice(1) : newItems;\n}\nfunction addToStart(items, item, max = 0) {\n    const newItems = [\n        item,\n        ...items\n    ];\n    return max && newItems.length > max ? newItems.slice(0, -1) : newItems;\n}\n //# sourceMappingURL=utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@tanstack/query-core/build/modern/utils.js\n',
      );

      /***/
    },

  /***/ "(ssr)/../node_modules/@tanstack/react-query/build/modern/QueryClientProvider.js":
    /*!*********************************************************************************!*\
  !*** ../node_modules/@tanstack/react-query/build/modern/QueryClientProvider.js ***!
  \*********************************************************************************/
    /***/ (
      __unused_webpack___webpack_module__,
      __webpack_exports__,
      __webpack_require__,
    ) => {
      eval(
        '__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   QueryClientContext: () => (/* binding */ QueryClientContext),\n/* harmony export */   QueryClientProvider: () => (/* binding */ QueryClientProvider),\n/* harmony export */   useQueryClient: () => (/* binding */ useQueryClient)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "(ssr)/../node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js");\n/* __next_internal_client_entry_do_not_use__ QueryClientContext,QueryClientProvider,useQueryClient auto */ // src/QueryClientProvider.tsx\n\nvar QueryClientContext = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createContext(void 0);\nvar useQueryClient = (queryClient)=>{\n    const client = react__WEBPACK_IMPORTED_MODULE_0__.useContext(QueryClientContext);\n    if (queryClient) {\n        return queryClient;\n    }\n    if (!client) {\n        throw new Error("No QueryClient set, use QueryClientProvider to set one");\n    }\n    return client;\n};\nvar QueryClientProvider = ({ client, children })=>{\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        client.mount();\n        return ()=>{\n            client.unmount();\n        };\n    }, [\n        client\n    ]);\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(QueryClientContext.Provider, {\n        value: client\n    }, children);\n};\n //# sourceMappingURL=QueryClientProvider.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9yZWFjdC1xdWVyeS9idWlsZC9tb2Rlcm4vUXVlcnlDbGllbnRQcm92aWRlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OzJHQUVBLDhCQUE4QjtBQUNDO0FBQy9CLElBQUlDLG1DQUFxQkQsZ0RBQW1CLENBQzFDLEtBQUs7QUFFUCxJQUFJRyxpQkFBaUIsQ0FBQ0M7SUFDcEIsTUFBTUMsU0FBU0wsNkNBQWdCLENBQUNDO0lBQ2hDLElBQUlHLGFBQWE7UUFDZixPQUFPQTtJQUNUO0lBQ0EsSUFBSSxDQUFDQyxRQUFRO1FBQ1gsTUFBTSxJQUFJRSxNQUFNO0lBQ2xCO0lBQ0EsT0FBT0Y7QUFDVDtBQUNBLElBQUlHLHNCQUFzQixDQUFDLEVBQ3pCSCxNQUFNLEVBQ05JLFFBQVEsRUFDVDtJQUNDVCw0Q0FBZSxDQUFDO1FBQ2RLLE9BQU9NLEtBQUs7UUFDWixPQUFPO1lBQ0xOLE9BQU9PLE9BQU87UUFDaEI7SUFDRixHQUFHO1FBQUNQO0tBQU87SUFDWCxPQUFPLGFBQWEsaUJBQUdMLGdEQUFtQixDQUFDQyxtQkFBbUJhLFFBQVEsRUFBRTtRQUFFQyxPQUFPVjtJQUFPLEdBQUdJO0FBQzdGO0FBS0UsQ0FDRiwrQ0FBK0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oYWNraHViYi8uLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3JlYWN0LXF1ZXJ5L2J1aWxkL21vZGVybi9RdWVyeUNsaWVudFByb3ZpZGVyLmpzPzA5NGQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2UgY2xpZW50XCI7XG5cbi8vIHNyYy9RdWVyeUNsaWVudFByb3ZpZGVyLnRzeFxuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG52YXIgUXVlcnlDbGllbnRDb250ZXh0ID0gUmVhY3QuY3JlYXRlQ29udGV4dChcbiAgdm9pZCAwXG4pO1xudmFyIHVzZVF1ZXJ5Q2xpZW50ID0gKHF1ZXJ5Q2xpZW50KSA9PiB7XG4gIGNvbnN0IGNsaWVudCA9IFJlYWN0LnVzZUNvbnRleHQoUXVlcnlDbGllbnRDb250ZXh0KTtcbiAgaWYgKHF1ZXJ5Q2xpZW50KSB7XG4gICAgcmV0dXJuIHF1ZXJ5Q2xpZW50O1xuICB9XG4gIGlmICghY2xpZW50KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiTm8gUXVlcnlDbGllbnQgc2V0LCB1c2UgUXVlcnlDbGllbnRQcm92aWRlciB0byBzZXQgb25lXCIpO1xuICB9XG4gIHJldHVybiBjbGllbnQ7XG59O1xudmFyIFF1ZXJ5Q2xpZW50UHJvdmlkZXIgPSAoe1xuICBjbGllbnQsXG4gIGNoaWxkcmVuXG59KSA9PiB7XG4gIFJlYWN0LnVzZUVmZmVjdCgoKSA9PiB7XG4gICAgY2xpZW50Lm1vdW50KCk7XG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIGNsaWVudC51bm1vdW50KCk7XG4gICAgfTtcbiAgfSwgW2NsaWVudF0pO1xuICByZXR1cm4gLyogQF9fUFVSRV9fICovIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUXVlcnlDbGllbnRDb250ZXh0LlByb3ZpZGVyLCB7IHZhbHVlOiBjbGllbnQgfSwgY2hpbGRyZW4pO1xufTtcbmV4cG9ydCB7XG4gIFF1ZXJ5Q2xpZW50Q29udGV4dCxcbiAgUXVlcnlDbGllbnRQcm92aWRlcixcbiAgdXNlUXVlcnlDbGllbnRcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1RdWVyeUNsaWVudFByb3ZpZGVyLmpzLm1hcCJdLCJuYW1lcyI6WyJSZWFjdCIsIlF1ZXJ5Q2xpZW50Q29udGV4dCIsImNyZWF0ZUNvbnRleHQiLCJ1c2VRdWVyeUNsaWVudCIsInF1ZXJ5Q2xpZW50IiwiY2xpZW50IiwidXNlQ29udGV4dCIsIkVycm9yIiwiUXVlcnlDbGllbnRQcm92aWRlciIsImNoaWxkcmVuIiwidXNlRWZmZWN0IiwibW91bnQiLCJ1bm1vdW50IiwiY3JlYXRlRWxlbWVudCIsIlByb3ZpZGVyIiwidmFsdWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@tanstack/react-query/build/modern/QueryClientProvider.js\n',
      );

      /***/
    },

  /***/ "(ssr)/../node_modules/@tanstack/react-query/build/modern/QueryErrorResetBoundary.js":
    /*!*************************************************************************************!*\
  !*** ../node_modules/@tanstack/react-query/build/modern/QueryErrorResetBoundary.js ***!
  \*************************************************************************************/
    /***/ (
      __unused_webpack___webpack_module__,
      __webpack_exports__,
      __webpack_require__,
    ) => {
      eval(
        '__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   QueryErrorResetBoundary: () => (/* binding */ QueryErrorResetBoundary),\n/* harmony export */   useQueryErrorResetBoundary: () => (/* binding */ useQueryErrorResetBoundary)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "(ssr)/../node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js");\n/* __next_internal_client_entry_do_not_use__ QueryErrorResetBoundary,useQueryErrorResetBoundary auto */ // src/QueryErrorResetBoundary.tsx\n\nfunction createValue() {\n    let isReset = false;\n    return {\n        clearReset: ()=>{\n            isReset = false;\n        },\n        reset: ()=>{\n            isReset = true;\n        },\n        isReset: ()=>{\n            return isReset;\n        }\n    };\n}\nvar QueryErrorResetBoundaryContext = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createContext(createValue());\nvar useQueryErrorResetBoundary = ()=>react__WEBPACK_IMPORTED_MODULE_0__.useContext(QueryErrorResetBoundaryContext);\nvar QueryErrorResetBoundary = ({ children })=>{\n    const [value] = react__WEBPACK_IMPORTED_MODULE_0__.useState(()=>createValue());\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(QueryErrorResetBoundaryContext.Provider, {\n        value\n    }, typeof children === "function" ? children(value) : children);\n};\n //# sourceMappingURL=QueryErrorResetBoundary.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9yZWFjdC1xdWVyeS9idWlsZC9tb2Rlcm4vUXVlcnlFcnJvclJlc2V0Qm91bmRhcnkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O3dHQUVBLGtDQUFrQztBQUNIO0FBQy9CLFNBQVNDO0lBQ1AsSUFBSUMsVUFBVTtJQUNkLE9BQU87UUFDTEMsWUFBWTtZQUNWRCxVQUFVO1FBQ1o7UUFDQUUsT0FBTztZQUNMRixVQUFVO1FBQ1o7UUFDQUEsU0FBUztZQUNQLE9BQU9BO1FBQ1Q7SUFDRjtBQUNGO0FBQ0EsSUFBSUcsK0NBQWlDTCxnREFBbUIsQ0FBQ0M7QUFDekQsSUFBSU0sNkJBQTZCLElBQU1QLDZDQUFnQixDQUFDSztBQUN4RCxJQUFJSSwwQkFBMEIsQ0FBQyxFQUM3QkMsUUFBUSxFQUNUO0lBQ0MsTUFBTSxDQUFDQyxNQUFNLEdBQUdYLDJDQUFjLENBQUMsSUFBTUM7SUFDckMsT0FBTyxhQUFhLGlCQUFHRCxnREFBbUIsQ0FBQ0ssK0JBQStCUyxRQUFRLEVBQUU7UUFBRUg7SUFBTSxHQUFHLE9BQU9ELGFBQWEsYUFBYUEsU0FBU0MsU0FBU0Q7QUFDcEo7QUFJRSxDQUNGLG1EQUFtRCIsInNvdXJjZXMiOlsid2VicGFjazovL2hhY2todWJiLy4uL25vZGVfbW9kdWxlcy9AdGFuc3RhY2svcmVhY3QtcXVlcnkvYnVpbGQvbW9kZXJuL1F1ZXJ5RXJyb3JSZXNldEJvdW5kYXJ5LmpzPzcyZjMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2UgY2xpZW50XCI7XG5cbi8vIHNyYy9RdWVyeUVycm9yUmVzZXRCb3VuZGFyeS50c3hcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuZnVuY3Rpb24gY3JlYXRlVmFsdWUoKSB7XG4gIGxldCBpc1Jlc2V0ID0gZmFsc2U7XG4gIHJldHVybiB7XG4gICAgY2xlYXJSZXNldDogKCkgPT4ge1xuICAgICAgaXNSZXNldCA9IGZhbHNlO1xuICAgIH0sXG4gICAgcmVzZXQ6ICgpID0+IHtcbiAgICAgIGlzUmVzZXQgPSB0cnVlO1xuICAgIH0sXG4gICAgaXNSZXNldDogKCkgPT4ge1xuICAgICAgcmV0dXJuIGlzUmVzZXQ7XG4gICAgfVxuICB9O1xufVxudmFyIFF1ZXJ5RXJyb3JSZXNldEJvdW5kYXJ5Q29udGV4dCA9IFJlYWN0LmNyZWF0ZUNvbnRleHQoY3JlYXRlVmFsdWUoKSk7XG52YXIgdXNlUXVlcnlFcnJvclJlc2V0Qm91bmRhcnkgPSAoKSA9PiBSZWFjdC51c2VDb250ZXh0KFF1ZXJ5RXJyb3JSZXNldEJvdW5kYXJ5Q29udGV4dCk7XG52YXIgUXVlcnlFcnJvclJlc2V0Qm91bmRhcnkgPSAoe1xuICBjaGlsZHJlblxufSkgPT4ge1xuICBjb25zdCBbdmFsdWVdID0gUmVhY3QudXNlU3RhdGUoKCkgPT4gY3JlYXRlVmFsdWUoKSk7XG4gIHJldHVybiAvKiBAX19QVVJFX18gKi8gUmVhY3QuY3JlYXRlRWxlbWVudChRdWVyeUVycm9yUmVzZXRCb3VuZGFyeUNvbnRleHQuUHJvdmlkZXIsIHsgdmFsdWUgfSwgdHlwZW9mIGNoaWxkcmVuID09PSBcImZ1bmN0aW9uXCIgPyBjaGlsZHJlbih2YWx1ZSkgOiBjaGlsZHJlbik7XG59O1xuZXhwb3J0IHtcbiAgUXVlcnlFcnJvclJlc2V0Qm91bmRhcnksXG4gIHVzZVF1ZXJ5RXJyb3JSZXNldEJvdW5kYXJ5XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9UXVlcnlFcnJvclJlc2V0Qm91bmRhcnkuanMubWFwIl0sIm5hbWVzIjpbIlJlYWN0IiwiY3JlYXRlVmFsdWUiLCJpc1Jlc2V0IiwiY2xlYXJSZXNldCIsInJlc2V0IiwiUXVlcnlFcnJvclJlc2V0Qm91bmRhcnlDb250ZXh0IiwiY3JlYXRlQ29udGV4dCIsInVzZVF1ZXJ5RXJyb3JSZXNldEJvdW5kYXJ5IiwidXNlQ29udGV4dCIsIlF1ZXJ5RXJyb3JSZXNldEJvdW5kYXJ5IiwiY2hpbGRyZW4iLCJ2YWx1ZSIsInVzZVN0YXRlIiwiY3JlYXRlRWxlbWVudCIsIlByb3ZpZGVyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@tanstack/react-query/build/modern/QueryErrorResetBoundary.js\n',
      );

      /***/
    },

  /***/ "(ssr)/../node_modules/@tanstack/react-query/build/modern/errorBoundaryUtils.js":
    /*!********************************************************************************!*\
  !*** ../node_modules/@tanstack/react-query/build/modern/errorBoundaryUtils.js ***!
  \********************************************************************************/
    /***/ (
      __unused_webpack___webpack_module__,
      __webpack_exports__,
      __webpack_require__,
    ) => {
      eval(
        '__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ensurePreventErrorBoundaryRetry: () => (/* binding */ ensurePreventErrorBoundaryRetry),\n/* harmony export */   getHasError: () => (/* binding */ getHasError),\n/* harmony export */   useClearResetErrorBoundary: () => (/* binding */ useClearResetErrorBoundary)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "(ssr)/../node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ "(ssr)/../node_modules/@tanstack/react-query/build/modern/utils.js");\n/* __next_internal_client_entry_do_not_use__ ensurePreventErrorBoundaryRetry,getHasError,useClearResetErrorBoundary auto */ // src/errorBoundaryUtils.ts\n\n\nvar ensurePreventErrorBoundaryRetry = (options, errorResetBoundary)=>{\n    if (options.suspense || options.throwOnError) {\n        if (!errorResetBoundary.isReset()) {\n            options.retryOnMount = false;\n        }\n    }\n};\nvar useClearResetErrorBoundary = (errorResetBoundary)=>{\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        errorResetBoundary.clearReset();\n    }, [\n        errorResetBoundary\n    ]);\n};\nvar getHasError = ({ result, errorResetBoundary, throwOnError, query })=>{\n    return result.isError && !errorResetBoundary.isReset() && !result.isFetching && query && (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.shouldThrowError)(throwOnError, [\n        result.error,\n        query\n    ]);\n};\n //# sourceMappingURL=errorBoundaryUtils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9yZWFjdC1xdWVyeS9idWlsZC9tb2Rlcm4vZXJyb3JCb3VuZGFyeVV0aWxzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OzRIQUVBLDRCQUE0QjtBQUNHO0FBQ2U7QUFDOUMsSUFBSUUsa0NBQWtDLENBQUNDLFNBQVNDO0lBQzlDLElBQUlELFFBQVFFLFFBQVEsSUFBSUYsUUFBUUcsWUFBWSxFQUFFO1FBQzVDLElBQUksQ0FBQ0YsbUJBQW1CRyxPQUFPLElBQUk7WUFDakNKLFFBQVFLLFlBQVksR0FBRztRQUN6QjtJQUNGO0FBQ0Y7QUFDQSxJQUFJQyw2QkFBNkIsQ0FBQ0w7SUFDaENKLDRDQUFlLENBQUM7UUFDZEksbUJBQW1CTyxVQUFVO0lBQy9CLEdBQUc7UUFBQ1A7S0FBbUI7QUFDekI7QUFDQSxJQUFJUSxjQUFjLENBQUMsRUFDakJDLE1BQU0sRUFDTlQsa0JBQWtCLEVBQ2xCRSxZQUFZLEVBQ1pRLEtBQUssRUFDTjtJQUNDLE9BQU9ELE9BQU9FLE9BQU8sSUFBSSxDQUFDWCxtQkFBbUJHLE9BQU8sTUFBTSxDQUFDTSxPQUFPRyxVQUFVLElBQUlGLFNBQVNiLDJEQUFnQkEsQ0FBQ0ssY0FBYztRQUFDTyxPQUFPSSxLQUFLO1FBQUVIO0tBQU07QUFDL0k7QUFLRSxDQUNGLDhDQUE4QyIsInNvdXJjZXMiOlsid2VicGFjazovL2hhY2todWJiLy4uL25vZGVfbW9kdWxlcy9AdGFuc3RhY2svcmVhY3QtcXVlcnkvYnVpbGQvbW9kZXJuL2Vycm9yQm91bmRhcnlVdGlscy5qcz9mNzZkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIGNsaWVudFwiO1xuXG4vLyBzcmMvZXJyb3JCb3VuZGFyeVV0aWxzLnRzXG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IHNob3VsZFRocm93RXJyb3IgfSBmcm9tIFwiLi91dGlscy5qc1wiO1xudmFyIGVuc3VyZVByZXZlbnRFcnJvckJvdW5kYXJ5UmV0cnkgPSAob3B0aW9ucywgZXJyb3JSZXNldEJvdW5kYXJ5KSA9PiB7XG4gIGlmIChvcHRpb25zLnN1c3BlbnNlIHx8IG9wdGlvbnMudGhyb3dPbkVycm9yKSB7XG4gICAgaWYgKCFlcnJvclJlc2V0Qm91bmRhcnkuaXNSZXNldCgpKSB7XG4gICAgICBvcHRpb25zLnJldHJ5T25Nb3VudCA9IGZhbHNlO1xuICAgIH1cbiAgfVxufTtcbnZhciB1c2VDbGVhclJlc2V0RXJyb3JCb3VuZGFyeSA9IChlcnJvclJlc2V0Qm91bmRhcnkpID0+IHtcbiAgUmVhY3QudXNlRWZmZWN0KCgpID0+IHtcbiAgICBlcnJvclJlc2V0Qm91bmRhcnkuY2xlYXJSZXNldCgpO1xuICB9LCBbZXJyb3JSZXNldEJvdW5kYXJ5XSk7XG59O1xudmFyIGdldEhhc0Vycm9yID0gKHtcbiAgcmVzdWx0LFxuICBlcnJvclJlc2V0Qm91bmRhcnksXG4gIHRocm93T25FcnJvcixcbiAgcXVlcnlcbn0pID0+IHtcbiAgcmV0dXJuIHJlc3VsdC5pc0Vycm9yICYmICFlcnJvclJlc2V0Qm91bmRhcnkuaXNSZXNldCgpICYmICFyZXN1bHQuaXNGZXRjaGluZyAmJiBxdWVyeSAmJiBzaG91bGRUaHJvd0Vycm9yKHRocm93T25FcnJvciwgW3Jlc3VsdC5lcnJvciwgcXVlcnldKTtcbn07XG5leHBvcnQge1xuICBlbnN1cmVQcmV2ZW50RXJyb3JCb3VuZGFyeVJldHJ5LFxuICBnZXRIYXNFcnJvcixcbiAgdXNlQ2xlYXJSZXNldEVycm9yQm91bmRhcnlcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1lcnJvckJvdW5kYXJ5VXRpbHMuanMubWFwIl0sIm5hbWVzIjpbIlJlYWN0Iiwic2hvdWxkVGhyb3dFcnJvciIsImVuc3VyZVByZXZlbnRFcnJvckJvdW5kYXJ5UmV0cnkiLCJvcHRpb25zIiwiZXJyb3JSZXNldEJvdW5kYXJ5Iiwic3VzcGVuc2UiLCJ0aHJvd09uRXJyb3IiLCJpc1Jlc2V0IiwicmV0cnlPbk1vdW50IiwidXNlQ2xlYXJSZXNldEVycm9yQm91bmRhcnkiLCJ1c2VFZmZlY3QiLCJjbGVhclJlc2V0IiwiZ2V0SGFzRXJyb3IiLCJyZXN1bHQiLCJxdWVyeSIsImlzRXJyb3IiLCJpc0ZldGNoaW5nIiwiZXJyb3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@tanstack/react-query/build/modern/errorBoundaryUtils.js\n',
      );

      /***/
    },

  /***/ "(ssr)/../node_modules/@tanstack/react-query/build/modern/isRestoring.js":
    /*!*************************************************************************!*\
  !*** ../node_modules/@tanstack/react-query/build/modern/isRestoring.js ***!
  \*************************************************************************/
    /***/ (
      __unused_webpack___webpack_module__,
      __webpack_exports__,
      __webpack_require__,
    ) => {
      eval(
        '__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IsRestoringProvider: () => (/* binding */ IsRestoringProvider),\n/* harmony export */   useIsRestoring: () => (/* binding */ useIsRestoring)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "(ssr)/../node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js");\n/* __next_internal_client_entry_do_not_use__ IsRestoringProvider,useIsRestoring auto */ // src/isRestoring.ts\n\nvar IsRestoringContext = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createContext(false);\nvar useIsRestoring = ()=>react__WEBPACK_IMPORTED_MODULE_0__.useContext(IsRestoringContext);\nvar IsRestoringProvider = IsRestoringContext.Provider;\n //# sourceMappingURL=isRestoring.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9yZWFjdC1xdWVyeS9idWlsZC9tb2Rlcm4vaXNSZXN0b3JpbmcuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O3dGQUVBLHFCQUFxQjtBQUNVO0FBQy9CLElBQUlDLG1DQUFxQkQsZ0RBQW1CLENBQUM7QUFDN0MsSUFBSUcsaUJBQWlCLElBQU1ILDZDQUFnQixDQUFDQztBQUM1QyxJQUFJSSxzQkFBc0JKLG1CQUFtQkssUUFBUTtBQUluRCxDQUNGLHVDQUF1QyIsInNvdXJjZXMiOlsid2VicGFjazovL2hhY2todWJiLy4uL25vZGVfbW9kdWxlcy9AdGFuc3RhY2svcmVhY3QtcXVlcnkvYnVpbGQvbW9kZXJuL2lzUmVzdG9yaW5nLmpzPzM3NDAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2UgY2xpZW50XCI7XG5cbi8vIHNyYy9pc1Jlc3RvcmluZy50c1xuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG52YXIgSXNSZXN0b3JpbmdDb250ZXh0ID0gUmVhY3QuY3JlYXRlQ29udGV4dChmYWxzZSk7XG52YXIgdXNlSXNSZXN0b3JpbmcgPSAoKSA9PiBSZWFjdC51c2VDb250ZXh0KElzUmVzdG9yaW5nQ29udGV4dCk7XG52YXIgSXNSZXN0b3JpbmdQcm92aWRlciA9IElzUmVzdG9yaW5nQ29udGV4dC5Qcm92aWRlcjtcbmV4cG9ydCB7XG4gIElzUmVzdG9yaW5nUHJvdmlkZXIsXG4gIHVzZUlzUmVzdG9yaW5nXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aXNSZXN0b3JpbmcuanMubWFwIl0sIm5hbWVzIjpbIlJlYWN0IiwiSXNSZXN0b3JpbmdDb250ZXh0IiwiY3JlYXRlQ29udGV4dCIsInVzZUlzUmVzdG9yaW5nIiwidXNlQ29udGV4dCIsIklzUmVzdG9yaW5nUHJvdmlkZXIiLCJQcm92aWRlciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@tanstack/react-query/build/modern/isRestoring.js\n',
      );

      /***/
    },

  /***/ "(ssr)/../node_modules/@tanstack/react-query/build/modern/suspense.js":
    /*!**********************************************************************!*\
  !*** ../node_modules/@tanstack/react-query/build/modern/suspense.js ***!
  \**********************************************************************/
    /***/ (
      __unused_webpack___webpack_module__,
      __webpack_exports__,
      __webpack_require__,
    ) => {
      eval(
        '__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   defaultThrowOnError: () => (/* binding */ defaultThrowOnError),\n/* harmony export */   ensureStaleTime: () => (/* binding */ ensureStaleTime),\n/* harmony export */   fetchOptimistic: () => (/* binding */ fetchOptimistic),\n/* harmony export */   shouldSuspend: () => (/* binding */ shouldSuspend),\n/* harmony export */   willFetch: () => (/* binding */ willFetch)\n/* harmony export */ });\n// src/suspense.ts\nvar defaultThrowOnError = (_error, query)=>typeof query.state.data === "undefined";\nvar ensureStaleTime = (defaultedOptions)=>{\n    if (defaultedOptions.suspense) {\n        if (typeof defaultedOptions.staleTime !== "number") {\n            defaultedOptions.staleTime = 1e3;\n        }\n    }\n};\nvar willFetch = (result, isRestoring)=>result.isLoading && result.isFetching && !isRestoring;\nvar shouldSuspend = (defaultedOptions, result)=>defaultedOptions?.suspense && result.isPending;\nvar fetchOptimistic = (defaultedOptions, observer, errorResetBoundary)=>observer.fetchOptimistic(defaultedOptions).catch(()=>{\n        errorResetBoundary.clearReset();\n    });\n //# sourceMappingURL=suspense.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9yZWFjdC1xdWVyeS9idWlsZC9tb2Rlcm4vc3VzcGVuc2UuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQSxrQkFBa0I7QUFDbEIsSUFBSUEsc0JBQXNCLENBQUNDLFFBQVFDLFFBQVUsT0FBT0EsTUFBTUMsS0FBSyxDQUFDQyxJQUFJLEtBQUs7QUFDekUsSUFBSUMsa0JBQWtCLENBQUNDO0lBQ3JCLElBQUlBLGlCQUFpQkMsUUFBUSxFQUFFO1FBQzdCLElBQUksT0FBT0QsaUJBQWlCRSxTQUFTLEtBQUssVUFBVTtZQUNsREYsaUJBQWlCRSxTQUFTLEdBQUc7UUFDL0I7SUFDRjtBQUNGO0FBQ0EsSUFBSUMsWUFBWSxDQUFDQyxRQUFRQyxjQUFnQkQsT0FBT0UsU0FBUyxJQUFJRixPQUFPRyxVQUFVLElBQUksQ0FBQ0Y7QUFDbkYsSUFBSUcsZ0JBQWdCLENBQUNSLGtCQUFrQkksU0FBV0osa0JBQWtCQyxZQUFZRyxPQUFPSyxTQUFTO0FBQ2hHLElBQUlDLGtCQUFrQixDQUFDVixrQkFBa0JXLFVBQVVDLHFCQUF1QkQsU0FBU0QsZUFBZSxDQUFDVixrQkFBa0JhLEtBQUssQ0FBQztRQUN6SEQsbUJBQW1CRSxVQUFVO0lBQy9CO0FBT0UsQ0FDRixvQ0FBb0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oYWNraHViYi8uLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3JlYWN0LXF1ZXJ5L2J1aWxkL21vZGVybi9zdXNwZW5zZS5qcz82ZDliIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9zdXNwZW5zZS50c1xudmFyIGRlZmF1bHRUaHJvd09uRXJyb3IgPSAoX2Vycm9yLCBxdWVyeSkgPT4gdHlwZW9mIHF1ZXJ5LnN0YXRlLmRhdGEgPT09IFwidW5kZWZpbmVkXCI7XG52YXIgZW5zdXJlU3RhbGVUaW1lID0gKGRlZmF1bHRlZE9wdGlvbnMpID0+IHtcbiAgaWYgKGRlZmF1bHRlZE9wdGlvbnMuc3VzcGVuc2UpIHtcbiAgICBpZiAodHlwZW9mIGRlZmF1bHRlZE9wdGlvbnMuc3RhbGVUaW1lICE9PSBcIm51bWJlclwiKSB7XG4gICAgICBkZWZhdWx0ZWRPcHRpb25zLnN0YWxlVGltZSA9IDFlMztcbiAgICB9XG4gIH1cbn07XG52YXIgd2lsbEZldGNoID0gKHJlc3VsdCwgaXNSZXN0b3JpbmcpID0+IHJlc3VsdC5pc0xvYWRpbmcgJiYgcmVzdWx0LmlzRmV0Y2hpbmcgJiYgIWlzUmVzdG9yaW5nO1xudmFyIHNob3VsZFN1c3BlbmQgPSAoZGVmYXVsdGVkT3B0aW9ucywgcmVzdWx0KSA9PiBkZWZhdWx0ZWRPcHRpb25zPy5zdXNwZW5zZSAmJiByZXN1bHQuaXNQZW5kaW5nO1xudmFyIGZldGNoT3B0aW1pc3RpYyA9IChkZWZhdWx0ZWRPcHRpb25zLCBvYnNlcnZlciwgZXJyb3JSZXNldEJvdW5kYXJ5KSA9PiBvYnNlcnZlci5mZXRjaE9wdGltaXN0aWMoZGVmYXVsdGVkT3B0aW9ucykuY2F0Y2goKCkgPT4ge1xuICBlcnJvclJlc2V0Qm91bmRhcnkuY2xlYXJSZXNldCgpO1xufSk7XG5leHBvcnQge1xuICBkZWZhdWx0VGhyb3dPbkVycm9yLFxuICBlbnN1cmVTdGFsZVRpbWUsXG4gIGZldGNoT3B0aW1pc3RpYyxcbiAgc2hvdWxkU3VzcGVuZCxcbiAgd2lsbEZldGNoXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3VzcGVuc2UuanMubWFwIl0sIm5hbWVzIjpbImRlZmF1bHRUaHJvd09uRXJyb3IiLCJfZXJyb3IiLCJxdWVyeSIsInN0YXRlIiwiZGF0YSIsImVuc3VyZVN0YWxlVGltZSIsImRlZmF1bHRlZE9wdGlvbnMiLCJzdXNwZW5zZSIsInN0YWxlVGltZSIsIndpbGxGZXRjaCIsInJlc3VsdCIsImlzUmVzdG9yaW5nIiwiaXNMb2FkaW5nIiwiaXNGZXRjaGluZyIsInNob3VsZFN1c3BlbmQiLCJpc1BlbmRpbmciLCJmZXRjaE9wdGltaXN0aWMiLCJvYnNlcnZlciIsImVycm9yUmVzZXRCb3VuZGFyeSIsImNhdGNoIiwiY2xlYXJSZXNldCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@tanstack/react-query/build/modern/suspense.js\n',
      );

      /***/
    },

  /***/ "(ssr)/../node_modules/@tanstack/react-query/build/modern/useBaseQuery.js":
    /*!**************************************************************************!*\
  !*** ../node_modules/@tanstack/react-query/build/modern/useBaseQuery.js ***!
  \**************************************************************************/
    /***/ (
      __unused_webpack___webpack_module__,
      __webpack_exports__,
      __webpack_require__,
    ) => {
      eval(
        '__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useBaseQuery: () => (/* binding */ useBaseQuery)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "(ssr)/../node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js");\n/* harmony import */ var _tanstack_query_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @tanstack/query-core */ "(ssr)/../node_modules/@tanstack/query-core/build/modern/notifyManager.js");\n/* harmony import */ var _QueryErrorResetBoundary_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./QueryErrorResetBoundary.js */ "(ssr)/../node_modules/@tanstack/react-query/build/modern/QueryErrorResetBoundary.js");\n/* harmony import */ var _QueryClientProvider_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./QueryClientProvider.js */ "(ssr)/../node_modules/@tanstack/react-query/build/modern/QueryClientProvider.js");\n/* harmony import */ var _isRestoring_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./isRestoring.js */ "(ssr)/../node_modules/@tanstack/react-query/build/modern/isRestoring.js");\n/* harmony import */ var _errorBoundaryUtils_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./errorBoundaryUtils.js */ "(ssr)/../node_modules/@tanstack/react-query/build/modern/errorBoundaryUtils.js");\n/* harmony import */ var _suspense_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./suspense.js */ "(ssr)/../node_modules/@tanstack/react-query/build/modern/suspense.js");\n/* __next_internal_client_entry_do_not_use__ useBaseQuery auto */ // src/useBaseQuery.ts\n\n\n\n\n\n\n\nfunction useBaseQuery(options, Observer, queryClient) {\n    if (true) {\n        if (typeof options !== "object" || Array.isArray(options)) {\n            throw new Error(\'Bad argument type. Starting with v5, only the "Object" form is allowed when calling query related functions. Please use the error stack to find the culprit call. More info here: https://tanstack.com/query/latest/docs/react/guides/migrating-to-v5#supports-a-single-signature-one-object\');\n        }\n    }\n    const client = (0,_QueryClientProvider_js__WEBPACK_IMPORTED_MODULE_1__.useQueryClient)(queryClient);\n    const isRestoring = (0,_isRestoring_js__WEBPACK_IMPORTED_MODULE_2__.useIsRestoring)();\n    const errorResetBoundary = (0,_QueryErrorResetBoundary_js__WEBPACK_IMPORTED_MODULE_3__.useQueryErrorResetBoundary)();\n    const defaultedOptions = client.defaultQueryOptions(options);\n    defaultedOptions._optimisticResults = isRestoring ? "isRestoring" : "optimistic";\n    (0,_suspense_js__WEBPACK_IMPORTED_MODULE_4__.ensureStaleTime)(defaultedOptions);\n    (0,_errorBoundaryUtils_js__WEBPACK_IMPORTED_MODULE_5__.ensurePreventErrorBoundaryRetry)(defaultedOptions, errorResetBoundary);\n    (0,_errorBoundaryUtils_js__WEBPACK_IMPORTED_MODULE_5__.useClearResetErrorBoundary)(errorResetBoundary);\n    const [observer] = react__WEBPACK_IMPORTED_MODULE_0__.useState(()=>new Observer(client, defaultedOptions));\n    const result = observer.getOptimisticResult(defaultedOptions);\n    react__WEBPACK_IMPORTED_MODULE_0__.useSyncExternalStore(react__WEBPACK_IMPORTED_MODULE_0__.useCallback((onStoreChange)=>{\n        const unsubscribe = isRestoring ? ()=>void 0 : observer.subscribe(_tanstack_query_core__WEBPACK_IMPORTED_MODULE_6__.notifyManager.batchCalls(onStoreChange));\n        observer.updateResult();\n        return unsubscribe;\n    }, [\n        observer,\n        isRestoring\n    ]), ()=>observer.getCurrentResult(), ()=>observer.getCurrentResult());\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        observer.setOptions(defaultedOptions, {\n            listeners: false\n        });\n    }, [\n        defaultedOptions,\n        observer\n    ]);\n    if ((0,_suspense_js__WEBPACK_IMPORTED_MODULE_4__.shouldSuspend)(defaultedOptions, result)) {\n        throw (0,_suspense_js__WEBPACK_IMPORTED_MODULE_4__.fetchOptimistic)(defaultedOptions, observer, errorResetBoundary);\n    }\n    if ((0,_errorBoundaryUtils_js__WEBPACK_IMPORTED_MODULE_5__.getHasError)({\n        result,\n        errorResetBoundary,\n        throwOnError: defaultedOptions.throwOnError,\n        query: client.getQueryCache().get(defaultedOptions.queryHash)\n    })) {\n        throw result.error;\n    }\n    return !defaultedOptions.notifyOnChangeProps ? observer.trackResult(result) : result;\n}\n //# sourceMappingURL=useBaseQuery.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9yZWFjdC1xdWVyeS9idWlsZC9tb2Rlcm4vdXNlQmFzZVF1ZXJ5LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O2tFQUVBLHNCQUFzQjtBQUNTO0FBQ3NCO0FBQ3FCO0FBQ2hCO0FBQ1I7QUFLakI7QUFDK0M7QUFDaEYsU0FBU1csYUFBYUMsT0FBTyxFQUFFQyxRQUFRLEVBQUVDLFdBQVc7SUFDbEQsSUFBSUMsSUFBcUMsRUFBRTtRQUN6QyxJQUFJLE9BQU9ILFlBQVksWUFBWUksTUFBTUMsT0FBTyxDQUFDTCxVQUFVO1lBQ3pELE1BQU0sSUFBSU0sTUFDUjtRQUVKO0lBQ0Y7SUFDQSxNQUFNQyxTQUFTaEIsdUVBQWNBLENBQUNXO0lBQzlCLE1BQU1NLGNBQWNoQiwrREFBY0E7SUFDbEMsTUFBTWlCLHFCQUFxQm5CLHVGQUEwQkE7SUFDckQsTUFBTW9CLG1CQUFtQkgsT0FBT0ksbUJBQW1CLENBQUNYO0lBQ3BEVSxpQkFBaUJFLGtCQUFrQixHQUFHSixjQUFjLGdCQUFnQjtJQUNwRVosNkRBQWVBLENBQUNjO0lBQ2hCakIsdUZBQStCQSxDQUFDaUIsa0JBQWtCRDtJQUNsRGQsa0ZBQTBCQSxDQUFDYztJQUMzQixNQUFNLENBQUNJLFNBQVMsR0FBR3pCLDJDQUFjLENBQy9CLElBQU0sSUFBSWEsU0FDUk0sUUFDQUc7SUFHSixNQUFNSyxTQUFTRixTQUFTRyxtQkFBbUIsQ0FBQ047SUFDNUN0Qix1REFBMEIsQ0FDeEJBLDhDQUFpQixDQUNmLENBQUMrQjtRQUNDLE1BQU1DLGNBQWNaLGNBQWMsSUFBTSxLQUFLLElBQUlLLFNBQVNRLFNBQVMsQ0FBQ2hDLCtEQUFhQSxDQUFDaUMsVUFBVSxDQUFDSDtRQUM3Rk4sU0FBU1UsWUFBWTtRQUNyQixPQUFPSDtJQUNULEdBQ0E7UUFBQ1A7UUFBVUw7S0FBWSxHQUV6QixJQUFNSyxTQUFTVyxnQkFBZ0IsSUFDL0IsSUFBTVgsU0FBU1csZ0JBQWdCO0lBRWpDcEMsNENBQWUsQ0FBQztRQUNkeUIsU0FBU2EsVUFBVSxDQUFDaEIsa0JBQWtCO1lBQUVpQixXQUFXO1FBQU07SUFDM0QsR0FBRztRQUFDakI7UUFBa0JHO0tBQVM7SUFDL0IsSUFBSWYsMkRBQWFBLENBQUNZLGtCQUFrQkssU0FBUztRQUMzQyxNQUFNbEIsNkRBQWVBLENBQUNhLGtCQUFrQkcsVUFBVUo7SUFDcEQ7SUFDQSxJQUFJZixtRUFBV0EsQ0FBQztRQUNkcUI7UUFDQU47UUFDQW1CLGNBQWNsQixpQkFBaUJrQixZQUFZO1FBQzNDQyxPQUFPdEIsT0FBT3VCLGFBQWEsR0FBR0MsR0FBRyxDQUFDckIsaUJBQWlCc0IsU0FBUztJQUM5RCxJQUFJO1FBQ0YsTUFBTWpCLE9BQU9rQixLQUFLO0lBQ3BCO0lBQ0EsT0FBTyxDQUFDdkIsaUJBQWlCd0IsbUJBQW1CLEdBQUdyQixTQUFTc0IsV0FBVyxDQUFDcEIsVUFBVUE7QUFDaEY7QUFHRSxDQUNGLHdDQUF3QyIsInNvdXJjZXMiOlsid2VicGFjazovL2hhY2todWJiLy4uL25vZGVfbW9kdWxlcy9AdGFuc3RhY2svcmVhY3QtcXVlcnkvYnVpbGQvbW9kZXJuL3VzZUJhc2VRdWVyeS5qcz9jYThjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIGNsaWVudFwiO1xuXG4vLyBzcmMvdXNlQmFzZVF1ZXJ5LnRzXG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IG5vdGlmeU1hbmFnZXIgfSBmcm9tIFwiQHRhbnN0YWNrL3F1ZXJ5LWNvcmVcIjtcbmltcG9ydCB7IHVzZVF1ZXJ5RXJyb3JSZXNldEJvdW5kYXJ5IH0gZnJvbSBcIi4vUXVlcnlFcnJvclJlc2V0Qm91bmRhcnkuanNcIjtcbmltcG9ydCB7IHVzZVF1ZXJ5Q2xpZW50IH0gZnJvbSBcIi4vUXVlcnlDbGllbnRQcm92aWRlci5qc1wiO1xuaW1wb3J0IHsgdXNlSXNSZXN0b3JpbmcgfSBmcm9tIFwiLi9pc1Jlc3RvcmluZy5qc1wiO1xuaW1wb3J0IHtcbiAgZW5zdXJlUHJldmVudEVycm9yQm91bmRhcnlSZXRyeSxcbiAgZ2V0SGFzRXJyb3IsXG4gIHVzZUNsZWFyUmVzZXRFcnJvckJvdW5kYXJ5XG59IGZyb20gXCIuL2Vycm9yQm91bmRhcnlVdGlscy5qc1wiO1xuaW1wb3J0IHsgZW5zdXJlU3RhbGVUaW1lLCBmZXRjaE9wdGltaXN0aWMsIHNob3VsZFN1c3BlbmQgfSBmcm9tIFwiLi9zdXNwZW5zZS5qc1wiO1xuZnVuY3Rpb24gdXNlQmFzZVF1ZXJ5KG9wdGlvbnMsIE9ic2VydmVyLCBxdWVyeUNsaWVudCkge1xuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gICAgaWYgKHR5cGVvZiBvcHRpb25zICE9PSBcIm9iamVjdFwiIHx8IEFycmF5LmlzQXJyYXkob3B0aW9ucykpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgJ0JhZCBhcmd1bWVudCB0eXBlLiBTdGFydGluZyB3aXRoIHY1LCBvbmx5IHRoZSBcIk9iamVjdFwiIGZvcm0gaXMgYWxsb3dlZCB3aGVuIGNhbGxpbmcgcXVlcnkgcmVsYXRlZCBmdW5jdGlvbnMuIFBsZWFzZSB1c2UgdGhlIGVycm9yIHN0YWNrIHRvIGZpbmQgdGhlIGN1bHByaXQgY2FsbC4gTW9yZSBpbmZvIGhlcmU6IGh0dHBzOi8vdGFuc3RhY2suY29tL3F1ZXJ5L2xhdGVzdC9kb2NzL3JlYWN0L2d1aWRlcy9taWdyYXRpbmctdG8tdjUjc3VwcG9ydHMtYS1zaW5nbGUtc2lnbmF0dXJlLW9uZS1vYmplY3QnXG4gICAgICApO1xuICAgIH1cbiAgfVxuICBjb25zdCBjbGllbnQgPSB1c2VRdWVyeUNsaWVudChxdWVyeUNsaWVudCk7XG4gIGNvbnN0IGlzUmVzdG9yaW5nID0gdXNlSXNSZXN0b3JpbmcoKTtcbiAgY29uc3QgZXJyb3JSZXNldEJvdW5kYXJ5ID0gdXNlUXVlcnlFcnJvclJlc2V0Qm91bmRhcnkoKTtcbiAgY29uc3QgZGVmYXVsdGVkT3B0aW9ucyA9IGNsaWVudC5kZWZhdWx0UXVlcnlPcHRpb25zKG9wdGlvbnMpO1xuICBkZWZhdWx0ZWRPcHRpb25zLl9vcHRpbWlzdGljUmVzdWx0cyA9IGlzUmVzdG9yaW5nID8gXCJpc1Jlc3RvcmluZ1wiIDogXCJvcHRpbWlzdGljXCI7XG4gIGVuc3VyZVN0YWxlVGltZShkZWZhdWx0ZWRPcHRpb25zKTtcbiAgZW5zdXJlUHJldmVudEVycm9yQm91bmRhcnlSZXRyeShkZWZhdWx0ZWRPcHRpb25zLCBlcnJvclJlc2V0Qm91bmRhcnkpO1xuICB1c2VDbGVhclJlc2V0RXJyb3JCb3VuZGFyeShlcnJvclJlc2V0Qm91bmRhcnkpO1xuICBjb25zdCBbb2JzZXJ2ZXJdID0gUmVhY3QudXNlU3RhdGUoXG4gICAgKCkgPT4gbmV3IE9ic2VydmVyKFxuICAgICAgY2xpZW50LFxuICAgICAgZGVmYXVsdGVkT3B0aW9uc1xuICAgIClcbiAgKTtcbiAgY29uc3QgcmVzdWx0ID0gb2JzZXJ2ZXIuZ2V0T3B0aW1pc3RpY1Jlc3VsdChkZWZhdWx0ZWRPcHRpb25zKTtcbiAgUmVhY3QudXNlU3luY0V4dGVybmFsU3RvcmUoXG4gICAgUmVhY3QudXNlQ2FsbGJhY2soXG4gICAgICAob25TdG9yZUNoYW5nZSkgPT4ge1xuICAgICAgICBjb25zdCB1bnN1YnNjcmliZSA9IGlzUmVzdG9yaW5nID8gKCkgPT4gdm9pZCAwIDogb2JzZXJ2ZXIuc3Vic2NyaWJlKG5vdGlmeU1hbmFnZXIuYmF0Y2hDYWxscyhvblN0b3JlQ2hhbmdlKSk7XG4gICAgICAgIG9ic2VydmVyLnVwZGF0ZVJlc3VsdCgpO1xuICAgICAgICByZXR1cm4gdW5zdWJzY3JpYmU7XG4gICAgICB9LFxuICAgICAgW29ic2VydmVyLCBpc1Jlc3RvcmluZ11cbiAgICApLFxuICAgICgpID0+IG9ic2VydmVyLmdldEN1cnJlbnRSZXN1bHQoKSxcbiAgICAoKSA9PiBvYnNlcnZlci5nZXRDdXJyZW50UmVzdWx0KClcbiAgKTtcbiAgUmVhY3QudXNlRWZmZWN0KCgpID0+IHtcbiAgICBvYnNlcnZlci5zZXRPcHRpb25zKGRlZmF1bHRlZE9wdGlvbnMsIHsgbGlzdGVuZXJzOiBmYWxzZSB9KTtcbiAgfSwgW2RlZmF1bHRlZE9wdGlvbnMsIG9ic2VydmVyXSk7XG4gIGlmIChzaG91bGRTdXNwZW5kKGRlZmF1bHRlZE9wdGlvbnMsIHJlc3VsdCkpIHtcbiAgICB0aHJvdyBmZXRjaE9wdGltaXN0aWMoZGVmYXVsdGVkT3B0aW9ucywgb2JzZXJ2ZXIsIGVycm9yUmVzZXRCb3VuZGFyeSk7XG4gIH1cbiAgaWYgKGdldEhhc0Vycm9yKHtcbiAgICByZXN1bHQsXG4gICAgZXJyb3JSZXNldEJvdW5kYXJ5LFxuICAgIHRocm93T25FcnJvcjogZGVmYXVsdGVkT3B0aW9ucy50aHJvd09uRXJyb3IsXG4gICAgcXVlcnk6IGNsaWVudC5nZXRRdWVyeUNhY2hlKCkuZ2V0KGRlZmF1bHRlZE9wdGlvbnMucXVlcnlIYXNoKVxuICB9KSkge1xuICAgIHRocm93IHJlc3VsdC5lcnJvcjtcbiAgfVxuICByZXR1cm4gIWRlZmF1bHRlZE9wdGlvbnMubm90aWZ5T25DaGFuZ2VQcm9wcyA/IG9ic2VydmVyLnRyYWNrUmVzdWx0KHJlc3VsdCkgOiByZXN1bHQ7XG59XG5leHBvcnQge1xuICB1c2VCYXNlUXVlcnlcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD11c2VCYXNlUXVlcnkuanMubWFwIl0sIm5hbWVzIjpbIlJlYWN0Iiwibm90aWZ5TWFuYWdlciIsInVzZVF1ZXJ5RXJyb3JSZXNldEJvdW5kYXJ5IiwidXNlUXVlcnlDbGllbnQiLCJ1c2VJc1Jlc3RvcmluZyIsImVuc3VyZVByZXZlbnRFcnJvckJvdW5kYXJ5UmV0cnkiLCJnZXRIYXNFcnJvciIsInVzZUNsZWFyUmVzZXRFcnJvckJvdW5kYXJ5IiwiZW5zdXJlU3RhbGVUaW1lIiwiZmV0Y2hPcHRpbWlzdGljIiwic2hvdWxkU3VzcGVuZCIsInVzZUJhc2VRdWVyeSIsIm9wdGlvbnMiLCJPYnNlcnZlciIsInF1ZXJ5Q2xpZW50IiwicHJvY2VzcyIsIkFycmF5IiwiaXNBcnJheSIsIkVycm9yIiwiY2xpZW50IiwiaXNSZXN0b3JpbmciLCJlcnJvclJlc2V0Qm91bmRhcnkiLCJkZWZhdWx0ZWRPcHRpb25zIiwiZGVmYXVsdFF1ZXJ5T3B0aW9ucyIsIl9vcHRpbWlzdGljUmVzdWx0cyIsIm9ic2VydmVyIiwidXNlU3RhdGUiLCJyZXN1bHQiLCJnZXRPcHRpbWlzdGljUmVzdWx0IiwidXNlU3luY0V4dGVybmFsU3RvcmUiLCJ1c2VDYWxsYmFjayIsIm9uU3RvcmVDaGFuZ2UiLCJ1bnN1YnNjcmliZSIsInN1YnNjcmliZSIsImJhdGNoQ2FsbHMiLCJ1cGRhdGVSZXN1bHQiLCJnZXRDdXJyZW50UmVzdWx0IiwidXNlRWZmZWN0Iiwic2V0T3B0aW9ucyIsImxpc3RlbmVycyIsInRocm93T25FcnJvciIsInF1ZXJ5IiwiZ2V0UXVlcnlDYWNoZSIsImdldCIsInF1ZXJ5SGFzaCIsImVycm9yIiwibm90aWZ5T25DaGFuZ2VQcm9wcyIsInRyYWNrUmVzdWx0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@tanstack/react-query/build/modern/useBaseQuery.js\n',
      );

      /***/
    },

  /***/ "(ssr)/../node_modules/@tanstack/react-query/build/modern/useInfiniteQuery.js":
    /*!******************************************************************************!*\
  !*** ../node_modules/@tanstack/react-query/build/modern/useInfiniteQuery.js ***!
  \******************************************************************************/
    /***/ (
      __unused_webpack___webpack_module__,
      __webpack_exports__,
      __webpack_require__,
    ) => {
      eval(
        '__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useInfiniteQuery: () => (/* binding */ useInfiniteQuery)\n/* harmony export */ });\n/* harmony import */ var _tanstack_query_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tanstack/query-core */ "(ssr)/../node_modules/@tanstack/query-core/build/modern/infiniteQueryObserver.js");\n/* harmony import */ var _useBaseQuery_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./useBaseQuery.js */ "(ssr)/../node_modules/@tanstack/react-query/build/modern/useBaseQuery.js");\n/* __next_internal_client_entry_do_not_use__ useInfiniteQuery auto */ // src/useInfiniteQuery.ts\n\n\nfunction useInfiniteQuery(options, queryClient) {\n    return (0,_useBaseQuery_js__WEBPACK_IMPORTED_MODULE_0__.useBaseQuery)(options, // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n    _tanstack_query_core__WEBPACK_IMPORTED_MODULE_1__.InfiniteQueryObserver, queryClient);\n}\n //# sourceMappingURL=useInfiniteQuery.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9yZWFjdC1xdWVyeS9idWlsZC9tb2Rlcm4vdXNlSW5maW5pdGVRdWVyeS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7c0VBRUEsMEJBQTBCO0FBQ21DO0FBQ1o7QUFDakQsU0FBU0UsaUJBQWlCQyxPQUFPLEVBQUVDLFdBQVc7SUFDNUMsT0FBT0gsOERBQVlBLENBQ2pCRSxTQUNBLDRFQUE0RTtJQUM1RUgsdUVBQXFCQSxFQUNyQkk7QUFFSjtBQUdFLENBQ0YsNENBQTRDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGFja2h1YmIvLi4vbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9yZWFjdC1xdWVyeS9idWlsZC9tb2Rlcm4vdXNlSW5maW5pdGVRdWVyeS5qcz9jZThjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIGNsaWVudFwiO1xuXG4vLyBzcmMvdXNlSW5maW5pdGVRdWVyeS50c1xuaW1wb3J0IHsgSW5maW5pdGVRdWVyeU9ic2VydmVyIH0gZnJvbSBcIkB0YW5zdGFjay9xdWVyeS1jb3JlXCI7XG5pbXBvcnQgeyB1c2VCYXNlUXVlcnkgfSBmcm9tIFwiLi91c2VCYXNlUXVlcnkuanNcIjtcbmZ1bmN0aW9uIHVzZUluZmluaXRlUXVlcnkob3B0aW9ucywgcXVlcnlDbGllbnQpIHtcbiAgcmV0dXJuIHVzZUJhc2VRdWVyeShcbiAgICBvcHRpb25zLFxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW5uZWNlc3NhcnktdHlwZS1hc3NlcnRpb25cbiAgICBJbmZpbml0ZVF1ZXJ5T2JzZXJ2ZXIsXG4gICAgcXVlcnlDbGllbnRcbiAgKTtcbn1cbmV4cG9ydCB7XG4gIHVzZUluZmluaXRlUXVlcnlcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD11c2VJbmZpbml0ZVF1ZXJ5LmpzLm1hcCJdLCJuYW1lcyI6WyJJbmZpbml0ZVF1ZXJ5T2JzZXJ2ZXIiLCJ1c2VCYXNlUXVlcnkiLCJ1c2VJbmZpbml0ZVF1ZXJ5Iiwib3B0aW9ucyIsInF1ZXJ5Q2xpZW50Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@tanstack/react-query/build/modern/useInfiniteQuery.js\n',
      );

      /***/
    },

  /***/ "(ssr)/../node_modules/@tanstack/react-query/build/modern/utils.js":
    /*!*******************************************************************!*\
  !*** ../node_modules/@tanstack/react-query/build/modern/utils.js ***!
  \*******************************************************************/
    /***/ (
      __unused_webpack___webpack_module__,
      __webpack_exports__,
      __webpack_require__,
    ) => {
      eval(
        '__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   shouldThrowError: () => (/* binding */ shouldThrowError)\n/* harmony export */ });\n// src/utils.ts\nfunction shouldThrowError(throwError, params) {\n    if (typeof throwError === "function") {\n        return throwError(...params);\n    }\n    return !!throwError;\n}\n //# sourceMappingURL=utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9yZWFjdC1xdWVyeS9idWlsZC9tb2Rlcm4vdXRpbHMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGVBQWU7QUFDZixTQUFTQSxpQkFBaUJDLFVBQVUsRUFBRUMsTUFBTTtJQUMxQyxJQUFJLE9BQU9ELGVBQWUsWUFBWTtRQUNwQyxPQUFPQSxjQUFjQztJQUN2QjtJQUNBLE9BQU8sQ0FBQyxDQUFDRDtBQUNYO0FBR0UsQ0FDRixpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oYWNraHViYi8uLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3JlYWN0LXF1ZXJ5L2J1aWxkL21vZGVybi91dGlscy5qcz9jMzliIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy91dGlscy50c1xuZnVuY3Rpb24gc2hvdWxkVGhyb3dFcnJvcih0aHJvd0Vycm9yLCBwYXJhbXMpIHtcbiAgaWYgKHR5cGVvZiB0aHJvd0Vycm9yID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICByZXR1cm4gdGhyb3dFcnJvciguLi5wYXJhbXMpO1xuICB9XG4gIHJldHVybiAhIXRocm93RXJyb3I7XG59XG5leHBvcnQge1xuICBzaG91bGRUaHJvd0Vycm9yXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXRpbHMuanMubWFwIl0sIm5hbWVzIjpbInNob3VsZFRocm93RXJyb3IiLCJ0aHJvd0Vycm9yIiwicGFyYW1zIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@tanstack/react-query/build/modern/utils.js\n',
      );

      /***/
    },
};
